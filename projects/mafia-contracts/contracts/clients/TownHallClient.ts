/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"TownHall","desc":"","methods":[{"name":"createApplication","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"dummyOpUp","desc":"Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name","args":[{"name":"i","type":"uint64"}],"returns":{"type":"uint64","desc":"the number (but we do nothing with it)"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dlog","args":[{"name":"g","type":"byte[]"},{"name":"x","type":"byte[]"},{"name":"v","type":"byte[]"},{"name":"z","type":"byte[]"}],"returns":{"type":"bool"},"actions":{"create":[],"call":["NoOp"]}},{"name":"hashPointToPoint","args":[{"name":"point","type":"byte[]"}],"returns":{"type":"byte[]"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getGameState","args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"joinGameLobby","args":[{"name":"NIZK_DLOG","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"assignRole","args":[{"name":"msg","type":"byte[]"},{"name":"pkAll","type":"byte[]"},{"name":"keyImage","type":"byte[]"},{"name":"sig","type":"byte[]"},{"name":"challenges","type":"byte[]"},{"name":"lsigTxn0","type":"pay"},{"name":"lsigTxn1","type":"pay"},{"name":"lsigTxn2","type":"pay"},{"name":"lsigTxn3","type":"pay"},{"name":"lsigTxn4","type":"pay"},{"name":"lsigTxn5","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageVote","args":[{"name":"vote","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageEliminate","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dayStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageMafiaCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"nightStageDoctorCommit","args":[{"name":"commitment","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageMafiaReveal","args":[{"name":"victimAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDoctorReveal","args":[{"name":"patientAim","type":"address"},{"name":"blinder","type":"byte[32]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageDeadOrSaved","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"dawnStageUnmasking","args":[{"name":"blsSk","type":"byte[]"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gameOver","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":19,"ints":16},"local":{"bytes":0,"ints":0}},"keys":{"global":{"player1AlgoAddr":{"key":"cGxheWVyMUFsZ29BZGRy","keyType":"AVMBytes","valueType":"address"},"player2AlgoAddr":{"key":"cGxheWVyMkFsZ29BZGRy","keyType":"AVMBytes","valueType":"address"},"player3AlgoAddr":{"key":"cGxheWVyM0FsZ29BZGRy","keyType":"AVMBytes","valueType":"address"},"player4AlgoAddr":{"key":"cGxheWVyNEFsZ29BZGRy","keyType":"AVMBytes","valueType":"address"},"player5AlgoAddr":{"key":"cGxheWVyNUFsZ29BZGRy","keyType":"AVMBytes","valueType":"address"},"player6AlgoAddr":{"key":"cGxheWVyNkFsZ29BZGRy","keyType":"AVMBytes","valueType":"address"},"mafia":{"key":"bWFmaWE=","keyType":"AVMBytes","valueType":"address"},"mafiaKeyImage":{"key":"bWFmaWFLZXlJbWFnZQ==","keyType":"AVMBytes","valueType":"AVMBytes"},"doctor":{"key":"ZG9jdG9y","keyType":"AVMBytes","valueType":"address"},"doctorKeyImage":{"key":"ZG9jdG9yS2V5SW1hZ2U=","keyType":"AVMBytes","valueType":"AVMBytes"},"farmer":{"key":"ZmFybWVy","keyType":"AVMBytes","valueType":"address"},"butcher":{"key":"YnV0Y2hlcg==","keyType":"AVMBytes","valueType":"address"},"innkeep":{"key":"aW5ua2VlcA==","keyType":"AVMBytes","valueType":"address"},"grocer":{"key":"Z3JvY2Vy","keyType":"AVMBytes","valueType":"address"},"player1HasVoted":{"key":"cGxheWVyMUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player1ReceivedVotes":{"key":"cGxheWVyMVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player2HasVoted":{"key":"cGxheWVyMkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player2ReceivedVotes":{"key":"cGxheWVyMlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player3HasVoted":{"key":"cGxheWVyM0hhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player3ReceivedVotes":{"key":"cGxheWVyM1JlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player4HasVoted":{"key":"cGxheWVyNEhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player4ReceivedVotes":{"key":"cGxheWVyNFJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player5HasVoted":{"key":"cGxheWVyNUhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player5ReceivedVotes":{"key":"cGxheWVyNVJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"player6HasVoted":{"key":"cGxheWVyNkhhc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"player6ReceivedVotes":{"key":"cGxheWVyNlJlY2VpdmVkVm90ZXM=","keyType":"AVMBytes","valueType":"uint64"},"playersVoted":{"key":"cGxheWVyc1ZvdGVk","keyType":"AVMBytes","valueType":"uint64"},"playersAlive":{"key":"cGxheWVyc0FsaXZl","keyType":"AVMBytes","valueType":"uint64"},"justEliminatedPlayer":{"key":"anVzdEVsaW1pbmF0ZWRQbGF5ZXI=","keyType":"AVMBytes","valueType":"address"},"mafiaCommitment":{"key":"bWFmaWFDb21taXRtZW50","keyType":"AVMBytes","valueType":"AVMBytes"},"doctorCommitment":{"key":"ZG9jdG9yQ29tbWl0bWVudA==","keyType":"AVMBytes","valueType":"AVMBytes"},"mafiaVictim":{"key":"bWFmaWFWaWN0aW0=","keyType":"AVMBytes","valueType":"address"},"doctorPatient":{"key":"ZG9jdG9yUGF0aWVudA==","keyType":"AVMBytes","valueType":"address"},"playersJoined":{"key":"cGxheWVyc0pvaW5lZA==","keyType":"AVMBytes","valueType":"uint64"},"gameState":{"key":"Z2FtZVN0YXRl","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"quickAccessPKBoxes":{"keyType":"uint64","valueType":"AVMBytes"},"hashFilter":{"keyType":"AVMBytes","valueType":"AVMBytes"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/TownHall.algo.ts:31","pc":[0]},{"teal":2,"source":"contracts/TownHall.algo.ts:31","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},{"teal":3,"source":"contracts/TownHall.algo.ts:31","pc":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650]},{"teal":15,"source":"contracts/TownHall.algo.ts:31","pc":[651,652]},{"teal":16,"source":"contracts/TownHall.algo.ts:31","pc":[653]},{"teal":17,"source":"contracts/TownHall.algo.ts:31","pc":[654]},{"teal":18,"source":"contracts/TownHall.algo.ts:31","pc":[655]},{"teal":19,"source":"contracts/TownHall.algo.ts:31","pc":[656,657]},{"teal":20,"source":"contracts/TownHall.algo.ts:31","pc":[658]},{"teal":21,"source":"contracts/TownHall.algo.ts:31","pc":[659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684]},{"teal":25,"source":"contracts/TownHall.algo.ts:31","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[685]},{"teal":30,"source":"contracts/TownHall.algo.ts:121","pc":[686,687,688]},{"teal":31,"source":"contracts/TownHall.algo.ts:121","pc":[689]},{"teal":32,"source":"contracts/TownHall.algo.ts:121","pc":[690]},{"teal":36,"source":"contracts/TownHall.algo.ts:121","pc":[691,692,693]},{"teal":40,"source":"contracts/TownHall.algo.ts:122","pc":[694,695]},{"teal":41,"source":"contracts/TownHall.algo.ts:122","pc":[696,697]},{"teal":42,"source":"contracts/TownHall.algo.ts:122","pc":[698]},{"teal":46,"source":"contracts/TownHall.algo.ts:123","pc":[699,700]},{"teal":47,"source":"contracts/TownHall.algo.ts:123","pc":[701,702]},{"teal":48,"source":"contracts/TownHall.algo.ts:123","pc":[703]},{"teal":52,"source":"contracts/TownHall.algo.ts:124","pc":[704,705]},{"teal":53,"source":"contracts/TownHall.algo.ts:124","pc":[706,707]},{"teal":54,"source":"contracts/TownHall.algo.ts:124","pc":[708]},{"teal":58,"source":"contracts/TownHall.algo.ts:125","pc":[709,710]},{"teal":59,"source":"contracts/TownHall.algo.ts:125","pc":[711,712]},{"teal":60,"source":"contracts/TownHall.algo.ts:125","pc":[713]},{"teal":64,"source":"contracts/TownHall.algo.ts:126","pc":[714,715]},{"teal":65,"source":"contracts/TownHall.algo.ts:126","pc":[716,717]},{"teal":66,"source":"contracts/TownHall.algo.ts:126","pc":[718]},{"teal":70,"source":"contracts/TownHall.algo.ts:127","pc":[719,720]},{"teal":71,"source":"contracts/TownHall.algo.ts:127","pc":[721,722]},{"teal":72,"source":"contracts/TownHall.algo.ts:127","pc":[723]},{"teal":76,"source":"contracts/TownHall.algo.ts:129","pc":[724,725]},{"teal":77,"source":"contracts/TownHall.algo.ts:129","pc":[726,727]},{"teal":78,"source":"contracts/TownHall.algo.ts:129","pc":[728]},{"teal":82,"source":"contracts/TownHall.algo.ts:130","pc":[729,730]},{"teal":83,"source":"contracts/TownHall.algo.ts:130","pc":[731,732]},{"teal":84,"source":"contracts/TownHall.algo.ts:130","pc":[733]},{"teal":88,"source":"contracts/TownHall.algo.ts:131","pc":[734,735]},{"teal":89,"source":"contracts/TownHall.algo.ts:131","pc":[736,737]},{"teal":90,"source":"contracts/TownHall.algo.ts:131","pc":[738]},{"teal":94,"source":"contracts/TownHall.algo.ts:132","pc":[739,740]},{"teal":95,"source":"contracts/TownHall.algo.ts:132","pc":[741,742]},{"teal":96,"source":"contracts/TownHall.algo.ts:132","pc":[743]},{"teal":100,"source":"contracts/TownHall.algo.ts:133","pc":[744,745]},{"teal":101,"source":"contracts/TownHall.algo.ts:133","pc":[746,747]},{"teal":102,"source":"contracts/TownHall.algo.ts:133","pc":[748]},{"teal":106,"source":"contracts/TownHall.algo.ts:134","pc":[749,750]},{"teal":107,"source":"contracts/TownHall.algo.ts:134","pc":[751,752]},{"teal":108,"source":"contracts/TownHall.algo.ts:134","pc":[753]},{"teal":112,"source":"contracts/TownHall.algo.ts:136","pc":[754,755]},{"teal":113,"source":"contracts/TownHall.algo.ts:136","pc":[756]},{"teal":114,"source":"contracts/TownHall.algo.ts:136","pc":[757]},{"teal":118,"source":"contracts/TownHall.algo.ts:137","pc":[758,759]},{"teal":119,"source":"contracts/TownHall.algo.ts:137","pc":[760]},{"teal":120,"source":"contracts/TownHall.algo.ts:137","pc":[761]},{"teal":124,"source":"contracts/TownHall.algo.ts:138","pc":[762,763]},{"teal":125,"source":"contracts/TownHall.algo.ts:138","pc":[764]},{"teal":126,"source":"contracts/TownHall.algo.ts:138","pc":[765]},{"teal":130,"source":"contracts/TownHall.algo.ts:139","pc":[766,767]},{"teal":131,"source":"contracts/TownHall.algo.ts:139","pc":[768]},{"teal":132,"source":"contracts/TownHall.algo.ts:139","pc":[769]},{"teal":136,"source":"contracts/TownHall.algo.ts:140","pc":[770,771]},{"teal":137,"source":"contracts/TownHall.algo.ts:140","pc":[772]},{"teal":138,"source":"contracts/TownHall.algo.ts:140","pc":[773]},{"teal":142,"source":"contracts/TownHall.algo.ts:141","pc":[774,775]},{"teal":143,"source":"contracts/TownHall.algo.ts:141","pc":[776]},{"teal":144,"source":"contracts/TownHall.algo.ts:141","pc":[777]},{"teal":148,"source":"contracts/TownHall.algo.ts:142","pc":[778,779]},{"teal":149,"source":"contracts/TownHall.algo.ts:142","pc":[780]},{"teal":150,"source":"contracts/TownHall.algo.ts:142","pc":[781]},{"teal":154,"source":"contracts/TownHall.algo.ts:144","pc":[782,783]},{"teal":155,"source":"contracts/TownHall.algo.ts:144","pc":[784]},{"teal":156,"source":"contracts/TownHall.algo.ts:144","pc":[785]},{"teal":160,"source":"contracts/TownHall.algo.ts:145","pc":[786,787]},{"teal":161,"source":"contracts/TownHall.algo.ts:145","pc":[788]},{"teal":162,"source":"contracts/TownHall.algo.ts:145","pc":[789]},{"teal":166,"source":"contracts/TownHall.algo.ts:146","pc":[790,791]},{"teal":167,"source":"contracts/TownHall.algo.ts:146","pc":[792]},{"teal":168,"source":"contracts/TownHall.algo.ts:146","pc":[793]},{"teal":172,"source":"contracts/TownHall.algo.ts:147","pc":[794,795]},{"teal":173,"source":"contracts/TownHall.algo.ts:147","pc":[796]},{"teal":174,"source":"contracts/TownHall.algo.ts:147","pc":[797]},{"teal":178,"source":"contracts/TownHall.algo.ts:148","pc":[798,799]},{"teal":179,"source":"contracts/TownHall.algo.ts:148","pc":[800]},{"teal":180,"source":"contracts/TownHall.algo.ts:148","pc":[801]},{"teal":184,"source":"contracts/TownHall.algo.ts:149","pc":[802,803]},{"teal":185,"source":"contracts/TownHall.algo.ts:149","pc":[804]},{"teal":186,"source":"contracts/TownHall.algo.ts:149","pc":[805]},{"teal":190,"source":"contracts/TownHall.algo.ts:150","pc":[806,807]},{"teal":191,"source":"contracts/TownHall.algo.ts:150","pc":[808]},{"teal":192,"source":"contracts/TownHall.algo.ts:150","pc":[809]},{"teal":196,"source":"contracts/TownHall.algo.ts:152","pc":[810,811]},{"teal":197,"source":"contracts/TownHall.algo.ts:152","pc":[812]},{"teal":198,"source":"contracts/TownHall.algo.ts:152","pc":[813]},{"teal":202,"source":"contracts/TownHall.algo.ts:153","pc":[814,815]},{"teal":203,"source":"contracts/TownHall.algo.ts:153","pc":[816]},{"teal":204,"source":"contracts/TownHall.algo.ts:153","pc":[817]},{"teal":208,"source":"contracts/TownHall.algo.ts:155","pc":[818]},{"teal":209,"source":"contracts/TownHall.algo.ts:155","pc":[819,820]},{"teal":210,"source":"contracts/TownHall.algo.ts:155","pc":[821]},{"teal":214,"source":"contracts/TownHall.algo.ts:156","pc":[822]},{"teal":215,"source":"contracts/TownHall.algo.ts:156","pc":[823,824]},{"teal":216,"source":"contracts/TownHall.algo.ts:156","pc":[825]},{"teal":220,"source":"contracts/TownHall.algo.ts:157","pc":[826,827]},{"teal":221,"source":"contracts/TownHall.algo.ts:157","pc":[828,829]},{"teal":222,"source":"contracts/TownHall.algo.ts:157","pc":[830]},{"teal":226,"source":"contracts/TownHall.algo.ts:159","pc":[831]},{"teal":227,"source":"contracts/TownHall.algo.ts:159","pc":[832]},{"teal":228,"source":"contracts/TownHall.algo.ts:159","pc":[833]},{"teal":229,"source":"contracts/TownHall.algo.ts:121","pc":[834]},{"teal":234,"source":"contracts/TownHall.algo.ts:167","pc":[835,836]},{"teal":237,"source":"contracts/TownHall.algo.ts:167","pc":[837,838,839]},{"teal":238,"source":"contracts/TownHall.algo.ts:167","pc":[840]},{"teal":241,"source":"contracts/TownHall.algo.ts:167","pc":[841,842,843]},{"teal":242,"source":"contracts/TownHall.algo.ts:167","pc":[844]},{"teal":243,"source":"contracts/TownHall.algo.ts:167","pc":[845]},{"teal":244,"source":"contracts/TownHall.algo.ts:167","pc":[846]},{"teal":245,"source":"contracts/TownHall.algo.ts:167","pc":[847]},{"teal":246,"source":"contracts/TownHall.algo.ts:167","pc":[848]},{"teal":255,"source":"contracts/TownHall.algo.ts:167","pc":[849,850,851]},{"teal":259,"source":"contracts/TownHall.algo.ts:168","pc":[852,853]},{"teal":260,"source":"contracts/TownHall.algo.ts:167","pc":[854]},{"teal":265,"source":"contracts/TownHall.algo.ts:189","pc":[855,856]},{"teal":268,"source":"contracts/TownHall.algo.ts:189","pc":[857,858,859]},{"teal":269,"source":"contracts/TownHall.algo.ts:189","pc":[860,861,862]},{"teal":272,"source":"contracts/TownHall.algo.ts:189","pc":[863,864,865]},{"teal":273,"source":"contracts/TownHall.algo.ts:189","pc":[866,867,868]},{"teal":276,"source":"contracts/TownHall.algo.ts:189","pc":[869,870,871]},{"teal":277,"source":"contracts/TownHall.algo.ts:189","pc":[872,873,874]},{"teal":280,"source":"contracts/TownHall.algo.ts:189","pc":[875,876,877]},{"teal":281,"source":"contracts/TownHall.algo.ts:189","pc":[878,879,880]},{"teal":284,"source":"contracts/TownHall.algo.ts:189","pc":[881,882,883]},{"teal":285,"source":"contracts/TownHall.algo.ts:189","pc":[884,885,886]},{"teal":286,"source":"contracts/TownHall.algo.ts:189","pc":[887]},{"teal":287,"source":"contracts/TownHall.algo.ts:189","pc":[888,889]},{"teal":288,"source":"contracts/TownHall.algo.ts:189","pc":[890]},{"teal":289,"source":"contracts/TownHall.algo.ts:189","pc":[891]},{"teal":290,"source":"contracts/TownHall.algo.ts:189","pc":[892]},{"teal":291,"source":"contracts/TownHall.algo.ts:189","pc":[893]},{"teal":292,"source":"contracts/TownHall.algo.ts:189","pc":[894]},{"teal":296,"source":"contracts/TownHall.algo.ts:189","pc":[895,896,897]},{"teal":299,"source":"contracts/TownHall.algo.ts:189","pc":[898]},{"teal":300,"source":"contracts/TownHall.algo.ts:189","pc":[899]},{"teal":304,"source":"contracts/TownHall.algo.ts:191","pc":[900,901]},{"teal":305,"source":"contracts/TownHall.algo.ts:191","pc":[902,903]},{"teal":306,"source":"contracts/TownHall.algo.ts:191","pc":[904,905]},{"teal":307,"source":"contracts/TownHall.algo.ts:191","pc":[906]},{"teal":308,"source":"contracts/TownHall.algo.ts:191","pc":[907]},{"teal":309,"source":"contracts/TownHall.algo.ts:191","pc":[908]},{"teal":310,"source":"contracts/TownHall.algo.ts:191","pc":[909,910]},{"teal":314,"source":"contracts/TownHall.algo.ts:192","pc":[911,912]},{"teal":315,"source":"contracts/TownHall.algo.ts:192","pc":[913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946]},{"teal":316,"source":"contracts/TownHall.algo.ts:192","pc":[947]},{"teal":317,"source":"contracts/TownHall.algo.ts:192","pc":[948,949]},{"teal":323,"source":"contracts/TownHall.algo.ts:195","pc":[950,951]},{"teal":324,"source":"contracts/TownHall.algo.ts:195","pc":[952,953]},{"teal":325,"source":"contracts/TownHall.algo.ts:195","pc":[954,955]},{"teal":326,"source":"contracts/TownHall.algo.ts:195","pc":[956,957]},{"teal":327,"source":"contracts/TownHall.algo.ts:195","pc":[958,959]},{"teal":328,"source":"contracts/TownHall.algo.ts:195","pc":[960,961]},{"teal":329,"source":"contracts/TownHall.algo.ts:195","pc":[962,963]},{"teal":330,"source":"contracts/TownHall.algo.ts:195","pc":[964,965]},{"teal":331,"source":"contracts/TownHall.algo.ts:195","pc":[966]},{"teal":334,"source":"contracts/TownHall.algo.ts:189","pc":[967,968]},{"teal":337,"source":"contracts/TownHall.algo.ts:189","pc":[969,970]},{"teal":338,"source":"contracts/TownHall.algo.ts:189","pc":[971]},{"teal":343,"source":"contracts/TownHall.algo.ts:199","pc":[972,973]},{"teal":346,"source":"contracts/TownHall.algo.ts:199","pc":[974,975,976]},{"teal":347,"source":"contracts/TownHall.algo.ts:199","pc":[977,978,979]},{"teal":350,"source":"contracts/TownHall.algo.ts:199","pc":[980,981,982]},{"teal":351,"source":"contracts/TownHall.algo.ts:199","pc":[983]},{"teal":352,"source":"contracts/TownHall.algo.ts:199","pc":[984]},{"teal":353,"source":"contracts/TownHall.algo.ts:199","pc":[985]},{"teal":354,"source":"contracts/TownHall.algo.ts:199","pc":[986,987,988]},{"teal":355,"source":"contracts/TownHall.algo.ts:199","pc":[989]},{"teal":356,"source":"contracts/TownHall.algo.ts:199","pc":[990]},{"teal":357,"source":"contracts/TownHall.algo.ts:199","pc":[991]},{"teal":358,"source":"contracts/TownHall.algo.ts:199","pc":[992]},{"teal":359,"source":"contracts/TownHall.algo.ts:199","pc":[993]},{"teal":360,"source":"contracts/TownHall.algo.ts:199","pc":[994]},{"teal":364,"source":"contracts/TownHall.algo.ts:199","pc":[995,996,997]},{"teal":367,"source":"contracts/TownHall.algo.ts:199","pc":[998]},{"teal":368,"source":"contracts/TownHall.algo.ts:199","pc":[999,1000]},{"teal":372,"source":"contracts/TownHall.algo.ts:200","pc":[1001,1002]},{"teal":373,"source":"contracts/TownHall.algo.ts:200","pc":[1003]},{"teal":374,"source":"contracts/TownHall.algo.ts:200","pc":[1004,1005]},{"teal":378,"source":"contracts/TownHall.algo.ts:201","pc":[1006,1007]},{"teal":379,"source":"contracts/TownHall.algo.ts:201","pc":[1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057]},{"teal":380,"source":"contracts/TownHall.algo.ts:201","pc":[1058]},{"teal":381,"source":"contracts/TownHall.algo.ts:201","pc":[1059,1060]},{"teal":385,"source":"contracts/TownHall.algo.ts:204","pc":[1061,1062]},{"teal":386,"source":"contracts/TownHall.algo.ts:204","pc":[1063,1064]},{"teal":387,"source":"contracts/TownHall.algo.ts:204","pc":[1065,1066]},{"teal":391,"source":"contracts/TownHall.algo.ts:205","pc":[1067,1068]},{"teal":394,"source":"contracts/TownHall.algo.ts:199","pc":[1069,1070]},{"teal":397,"source":"contracts/TownHall.algo.ts:199","pc":[1071,1072]},{"teal":398,"source":"contracts/TownHall.algo.ts:199","pc":[1073]},{"teal":403,"source":"contracts/TownHall.algo.ts:210","pc":[1074,1075]},{"teal":406,"source":"contracts/TownHall.algo.ts:210","pc":[1076,1077,1078]},{"teal":407,"source":"contracts/TownHall.algo.ts:210","pc":[1079]},{"teal":408,"source":"contracts/TownHall.algo.ts:210","pc":[1080]},{"teal":409,"source":"contracts/TownHall.algo.ts:210","pc":[1081]},{"teal":410,"source":"contracts/TownHall.algo.ts:210","pc":[1082]},{"teal":411,"source":"contracts/TownHall.algo.ts:210","pc":[1083]},{"teal":415,"source":"contracts/TownHall.algo.ts:210","pc":[1084,1085,1086]},{"teal":419,"source":"contracts/TownHall.algo.ts:211","pc":[1087]},{"teal":420,"source":"contracts/TownHall.algo.ts:211","pc":[1088]},{"teal":421,"source":"contracts/TownHall.algo.ts:210","pc":[1089]},{"teal":426,"source":"contracts/TownHall.algo.ts:214","pc":[1090,1091,1092]},{"teal":427,"source":"contracts/TownHall.algo.ts:214","pc":[1093,1094,1095]},{"teal":430,"source":"contracts/TownHall.algo.ts:214","pc":[1096,1097,1098]},{"teal":431,"source":"contracts/TownHall.algo.ts:214","pc":[1099]},{"teal":432,"source":"contracts/TownHall.algo.ts:214","pc":[1100]},{"teal":436,"source":"contracts/TownHall.algo.ts:214","pc":[1101,1102,1103]},{"teal":439,"source":"contracts/TownHall.algo.ts:214","pc":[1104]},{"teal":440,"source":"contracts/TownHall.algo.ts:214","pc":[1105,1106]},{"teal":444,"source":"contracts/TownHall.algo.ts:215","pc":[1107]},{"teal":445,"source":"contracts/TownHall.algo.ts:215","pc":[1108]},{"teal":446,"source":"contracts/TownHall.algo.ts:215","pc":[1109]},{"teal":447,"source":"contracts/TownHall.algo.ts:215","pc":[1110]},{"teal":450,"source":"contracts/TownHall.algo.ts:215","errorMessage":"Invalid method call: Game is not in Join Game Lobby state.","pc":[1111]},{"teal":457,"source":"contracts/TownHall.algo.ts:218","pc":[1112,1113]},{"teal":458,"source":"contracts/TownHall.algo.ts:218","pc":[1114]},{"teal":459,"source":"contracts/TownHall.algo.ts:218","pc":[1115]},{"teal":460,"source":"contracts/TownHall.algo.ts:218","pc":[1116]},{"teal":463,"source":"contracts/TownHall.algo.ts:217","errorMessage":"Max players already joined! Error, game should have moved to the next stage already.","pc":[1117]},{"teal":473,"source":"contracts/TownHall.algo.ts:223","pc":[1118,1119]},{"teal":474,"source":"contracts/TownHall.algo.ts:223","pc":[1120]},{"teal":475,"source":"contracts/TownHall.algo.ts:223","pc":[1121,1122]},{"teal":476,"source":"contracts/TownHall.algo.ts:223","pc":[1123]},{"teal":477,"source":"contracts/TownHall.algo.ts:223","pc":[1124]},{"teal":478,"source":"contracts/TownHall.algo.ts:223","pc":[1125,1126,1127]},{"teal":479,"source":"contracts/TownHall.algo.ts:224","pc":[1128,1129]},{"teal":480,"source":"contracts/TownHall.algo.ts:224","pc":[1130]},{"teal":481,"source":"contracts/TownHall.algo.ts:224","pc":[1131,1132]},{"teal":482,"source":"contracts/TownHall.algo.ts:224","pc":[1133]},{"teal":483,"source":"contracts/TownHall.algo.ts:223","pc":[1134]},{"teal":486,"source":"contracts/TownHall.algo.ts:224","pc":[1135]},{"teal":487,"source":"contracts/TownHall.algo.ts:224","pc":[1136,1137,1138]},{"teal":488,"source":"contracts/TownHall.algo.ts:225","pc":[1139,1140]},{"teal":489,"source":"contracts/TownHall.algo.ts:225","pc":[1141]},{"teal":490,"source":"contracts/TownHall.algo.ts:225","pc":[1142,1143]},{"teal":491,"source":"contracts/TownHall.algo.ts:225","pc":[1144]},{"teal":492,"source":"contracts/TownHall.algo.ts:224","pc":[1145]},{"teal":495,"source":"contracts/TownHall.algo.ts:225","pc":[1146]},{"teal":496,"source":"contracts/TownHall.algo.ts:225","pc":[1147,1148,1149]},{"teal":497,"source":"contracts/TownHall.algo.ts:226","pc":[1150,1151]},{"teal":498,"source":"contracts/TownHall.algo.ts:226","pc":[1152]},{"teal":499,"source":"contracts/TownHall.algo.ts:226","pc":[1153,1154]},{"teal":500,"source":"contracts/TownHall.algo.ts:226","pc":[1155]},{"teal":501,"source":"contracts/TownHall.algo.ts:225","pc":[1156]},{"teal":504,"source":"contracts/TownHall.algo.ts:226","pc":[1157]},{"teal":505,"source":"contracts/TownHall.algo.ts:226","pc":[1158,1159,1160]},{"teal":506,"source":"contracts/TownHall.algo.ts:227","pc":[1161,1162]},{"teal":507,"source":"contracts/TownHall.algo.ts:227","pc":[1163]},{"teal":508,"source":"contracts/TownHall.algo.ts:227","pc":[1164,1165]},{"teal":509,"source":"contracts/TownHall.algo.ts:227","pc":[1166]},{"teal":510,"source":"contracts/TownHall.algo.ts:226","pc":[1167]},{"teal":513,"source":"contracts/TownHall.algo.ts:227","pc":[1168]},{"teal":514,"source":"contracts/TownHall.algo.ts:227","pc":[1169,1170,1171]},{"teal":515,"source":"contracts/TownHall.algo.ts:228","pc":[1172,1173]},{"teal":516,"source":"contracts/TownHall.algo.ts:228","pc":[1174]},{"teal":517,"source":"contracts/TownHall.algo.ts:228","pc":[1175,1176]},{"teal":518,"source":"contracts/TownHall.algo.ts:228","pc":[1177]},{"teal":519,"source":"contracts/TownHall.algo.ts:227","pc":[1178]},{"teal":522,"source":"contracts/TownHall.algo.ts:222","pc":[1179,1180,1181]},{"teal":526,"source":"contracts/TownHall.algo.ts:230","errorMessage":"Error state: Player already joined the game!","pc":[1182]},{"teal":531,"source":"contracts/TownHall.algo.ts:233","pc":[1183,1184]},{"teal":532,"source":"contracts/TownHall.algo.ts:233","pc":[1185,1186,1187]},{"teal":533,"source":"contracts/TownHall.algo.ts:233","pc":[1188,1189]},{"teal":537,"source":"contracts/TownHall.algo.ts:234","pc":[1190,1191]},{"teal":538,"source":"contracts/TownHall.algo.ts:234","pc":[1192,1193,1194]},{"teal":539,"source":"contracts/TownHall.algo.ts:234","pc":[1195,1196]},{"teal":543,"source":"contracts/TownHall.algo.ts:235","pc":[1197,1198]},{"teal":544,"source":"contracts/TownHall.algo.ts:235","pc":[1199,1200,1201]},{"teal":545,"source":"contracts/TownHall.algo.ts:235","pc":[1202,1203]},{"teal":549,"source":"contracts/TownHall.algo.ts:236","pc":[1204,1205]},{"teal":550,"source":"contracts/TownHall.algo.ts:236","pc":[1206,1207,1208]},{"teal":551,"source":"contracts/TownHall.algo.ts:236","pc":[1209,1210]},{"teal":552,"source":"contracts/TownHall.algo.ts:236","pc":[1211]},{"teal":553,"source":"contracts/TownHall.algo.ts:236","pc":[1212,1213]},{"teal":557,"source":"contracts/TownHall.algo.ts:241","pc":[1214,1215]},{"teal":558,"source":"contracts/TownHall.algo.ts:241","pc":[1216,1217]},{"teal":559,"source":"contracts/TownHall.algo.ts:241","pc":[1218,1219]},{"teal":560,"source":"contracts/TownHall.algo.ts:241","pc":[1220,1221]},{"teal":561,"source":"contracts/TownHall.algo.ts:241","pc":[1222,1223,1224]},{"teal":564,"source":"contracts/TownHall.algo.ts:241","errorMessage":"DLOG NIZK Proof failed!","pc":[1225]},{"teal":569,"source":"contracts/TownHall.algo.ts:243","pc":[1226,1227]},{"teal":570,"source":"contracts/TownHall.algo.ts:243","pc":[1228]},{"teal":571,"source":"contracts/TownHall.algo.ts:243","pc":[1229]},{"teal":572,"source":"contracts/TownHall.algo.ts:243","pc":[1230]},{"teal":573,"source":"contracts/TownHall.algo.ts:243","pc":[1231]},{"teal":574,"source":"contracts/TownHall.algo.ts:243","pc":[1232,1233,1234]},{"teal":579,"source":"contracts/TownHall.algo.ts:244","pc":[1235,1236]},{"teal":580,"source":"contracts/TownHall.algo.ts:244","pc":[1237,1238]},{"teal":581,"source":"contracts/TownHall.algo.ts:244","pc":[1239]},{"teal":582,"source":"contracts/TownHall.algo.ts:244","pc":[1240]},{"teal":583,"source":"contracts/TownHall.algo.ts:243","pc":[1241,1242,1243]},{"teal":588,"source":"contracts/TownHall.algo.ts:246","pc":[1244,1245]},{"teal":589,"source":"contracts/TownHall.algo.ts:246","pc":[1246]},{"teal":590,"source":"contracts/TownHall.algo.ts:246","pc":[1247]},{"teal":593,"source":"contracts/TownHall.algo.ts:246","errorMessage":"box value does not exist: this.quickAccessPKBoxes(0).size","pc":[1248]},{"teal":594,"source":"contracts/TownHall.algo.ts:246","pc":[1249,1250]},{"teal":595,"source":"contracts/TownHall.algo.ts:246","pc":[1251]},{"teal":596,"source":"contracts/TownHall.algo.ts:246","pc":[1252]},{"teal":601,"source":"contracts/TownHall.algo.ts:250","pc":[1253,1254]},{"teal":602,"source":"contracts/TownHall.algo.ts:250","pc":[1255]},{"teal":603,"source":"contracts/TownHall.algo.ts:250","pc":[1256]},{"teal":604,"source":"contracts/TownHall.algo.ts:250","pc":[1257]},{"teal":607,"source":"contracts/TownHall.algo.ts:250","errorMessage":"PK Box failed to be created.","pc":[1258]},{"teal":611,"source":"contracts/TownHall.algo.ts:252","pc":[1259,1260]},{"teal":612,"source":"contracts/TownHall.algo.ts:252","pc":[1261,1262]},{"teal":613,"source":"contracts/TownHall.algo.ts:252","pc":[1263]},{"teal":614,"source":"contracts/TownHall.algo.ts:252","pc":[1264,1265]},{"teal":615,"source":"contracts/TownHall.algo.ts:252","pc":[1266]},{"teal":616,"source":"contracts/TownHall.algo.ts:252","pc":[1267,1268]},{"teal":617,"source":"contracts/TownHall.algo.ts:252","pc":[1269]},{"teal":621,"source":"contracts/TownHall.algo.ts:253","pc":[1270,1271]},{"teal":622,"source":"contracts/TownHall.algo.ts:253","pc":[1272]},{"teal":623,"source":"contracts/TownHall.algo.ts:253","pc":[1273]},{"teal":624,"source":"contracts/TownHall.algo.ts:253","pc":[1274]},{"teal":625,"source":"contracts/TownHall.algo.ts:253","pc":[1275,1276]},{"teal":626,"source":"contracts/TownHall.algo.ts:253","pc":[1277]},{"teal":627,"source":"contracts/TownHall.algo.ts:253","pc":[1278]},{"teal":632,"source":"contracts/TownHall.algo.ts:255","pc":[1279,1280]},{"teal":633,"source":"contracts/TownHall.algo.ts:255","pc":[1281]},{"teal":634,"source":"contracts/TownHall.algo.ts:255","pc":[1282,1283]},{"teal":635,"source":"contracts/TownHall.algo.ts:255","pc":[1284]},{"teal":636,"source":"contracts/TownHall.algo.ts:255","pc":[1285,1286,1287]},{"teal":641,"source":"contracts/TownHall.algo.ts:256","pc":[1288,1289]},{"teal":642,"source":"contracts/TownHall.algo.ts:256","pc":[1290,1291]},{"teal":643,"source":"contracts/TownHall.algo.ts:256","pc":[1292]},{"teal":647,"source":"contracts/TownHall.algo.ts:257","pc":[1293]},{"teal":653,"source":"contracts/TownHall.algo.ts:259","pc":[1294,1295]},{"teal":654,"source":"contracts/TownHall.algo.ts:259","pc":[1296]},{"teal":655,"source":"contracts/TownHall.algo.ts:259","pc":[1297,1298]},{"teal":656,"source":"contracts/TownHall.algo.ts:259","pc":[1299]},{"teal":657,"source":"contracts/TownHall.algo.ts:259","pc":[1300,1301,1302]},{"teal":662,"source":"contracts/TownHall.algo.ts:260","pc":[1303,1304]},{"teal":663,"source":"contracts/TownHall.algo.ts:260","pc":[1305,1306]},{"teal":664,"source":"contracts/TownHall.algo.ts:260","pc":[1307]},{"teal":668,"source":"contracts/TownHall.algo.ts:261","pc":[1308]},{"teal":674,"source":"contracts/TownHall.algo.ts:263","pc":[1309,1310]},{"teal":675,"source":"contracts/TownHall.algo.ts:263","pc":[1311]},{"teal":676,"source":"contracts/TownHall.algo.ts:263","pc":[1312,1313]},{"teal":677,"source":"contracts/TownHall.algo.ts:263","pc":[1314]},{"teal":678,"source":"contracts/TownHall.algo.ts:263","pc":[1315,1316,1317]},{"teal":683,"source":"contracts/TownHall.algo.ts:264","pc":[1318,1319]},{"teal":684,"source":"contracts/TownHall.algo.ts:264","pc":[1320,1321]},{"teal":685,"source":"contracts/TownHall.algo.ts:264","pc":[1322]},{"teal":689,"source":"contracts/TownHall.algo.ts:265","pc":[1323]},{"teal":695,"source":"contracts/TownHall.algo.ts:267","pc":[1324,1325]},{"teal":696,"source":"contracts/TownHall.algo.ts:267","pc":[1326]},{"teal":697,"source":"contracts/TownHall.algo.ts:267","pc":[1327,1328]},{"teal":698,"source":"contracts/TownHall.algo.ts:267","pc":[1329]},{"teal":699,"source":"contracts/TownHall.algo.ts:267","pc":[1330,1331,1332]},{"teal":704,"source":"contracts/TownHall.algo.ts:268","pc":[1333,1334]},{"teal":705,"source":"contracts/TownHall.algo.ts:268","pc":[1335,1336]},{"teal":706,"source":"contracts/TownHall.algo.ts:268","pc":[1337]},{"teal":710,"source":"contracts/TownHall.algo.ts:269","pc":[1338]},{"teal":716,"source":"contracts/TownHall.algo.ts:271","pc":[1339,1340]},{"teal":717,"source":"contracts/TownHall.algo.ts:271","pc":[1341]},{"teal":718,"source":"contracts/TownHall.algo.ts:271","pc":[1342,1343]},{"teal":719,"source":"contracts/TownHall.algo.ts:271","pc":[1344]},{"teal":720,"source":"contracts/TownHall.algo.ts:271","pc":[1345,1346,1347]},{"teal":725,"source":"contracts/TownHall.algo.ts:272","pc":[1348,1349]},{"teal":726,"source":"contracts/TownHall.algo.ts:272","pc":[1350,1351]},{"teal":727,"source":"contracts/TownHall.algo.ts:272","pc":[1352]},{"teal":731,"source":"contracts/TownHall.algo.ts:273","pc":[1353]},{"teal":737,"source":"contracts/TownHall.algo.ts:275","pc":[1354,1355]},{"teal":738,"source":"contracts/TownHall.algo.ts:275","pc":[1356]},{"teal":739,"source":"contracts/TownHall.algo.ts:275","pc":[1357,1358]},{"teal":740,"source":"contracts/TownHall.algo.ts:275","pc":[1359]},{"teal":741,"source":"contracts/TownHall.algo.ts:275","pc":[1360,1361,1362]},{"teal":746,"source":"contracts/TownHall.algo.ts:276","pc":[1363,1364]},{"teal":747,"source":"contracts/TownHall.algo.ts:276","pc":[1365,1366]},{"teal":748,"source":"contracts/TownHall.algo.ts:276","pc":[1367]},{"teal":752,"source":"contracts/TownHall.algo.ts:277","pc":[1368]},{"teal":753,"source":"contracts/Constants.ts:14","pc":[1369]},{"teal":754,"source":"contracts/TownHall.algo.ts:277","pc":[1370]},{"teal":758,"source":"contracts/TownHall.algo.ts:278","pc":[1371]},{"teal":762,"source":"contracts/TownHall.algo.ts:281","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1372]},{"teal":763,"source":"contracts/TownHall.algo.ts:214","pc":[1373]},{"teal":768,"source":"contracts/TownHall.algo.ts:295","pc":[1374,1375]},{"teal":769,"source":"contracts/TownHall.algo.ts:295","pc":[1376]},{"teal":770,"source":"contracts/TownHall.algo.ts:295","pc":[1377]},{"teal":771,"source":"contracts/TownHall.algo.ts:295","pc":[1378]},{"teal":772,"source":"contracts/TownHall.algo.ts:295","pc":[1379,1380]},{"teal":773,"source":"contracts/TownHall.algo.ts:295","pc":[1381]},{"teal":774,"source":"contracts/TownHall.algo.ts:295","pc":[1382]},{"teal":777,"source":"contracts/TownHall.algo.ts:295","errorMessage":"argument 0 (lsigTxn5) for assignRole must be a pay transaction","pc":[1383]},{"teal":780,"source":"contracts/TownHall.algo.ts:294","pc":[1384,1385]},{"teal":781,"source":"contracts/TownHall.algo.ts:294","pc":[1386]},{"teal":782,"source":"contracts/TownHall.algo.ts:294","pc":[1387]},{"teal":783,"source":"contracts/TownHall.algo.ts:294","pc":[1388]},{"teal":784,"source":"contracts/TownHall.algo.ts:294","pc":[1389,1390]},{"teal":785,"source":"contracts/TownHall.algo.ts:294","pc":[1391]},{"teal":786,"source":"contracts/TownHall.algo.ts:294","pc":[1392]},{"teal":789,"source":"contracts/TownHall.algo.ts:294","errorMessage":"argument 1 (lsigTxn4) for assignRole must be a pay transaction","pc":[1393]},{"teal":792,"source":"contracts/TownHall.algo.ts:293","pc":[1394,1395]},{"teal":793,"source":"contracts/TownHall.algo.ts:293","pc":[1396,1397]},{"teal":794,"source":"contracts/TownHall.algo.ts:293","pc":[1398]},{"teal":795,"source":"contracts/TownHall.algo.ts:293","pc":[1399]},{"teal":796,"source":"contracts/TownHall.algo.ts:293","pc":[1400,1401]},{"teal":797,"source":"contracts/TownHall.algo.ts:293","pc":[1402]},{"teal":798,"source":"contracts/TownHall.algo.ts:293","pc":[1403]},{"teal":801,"source":"contracts/TownHall.algo.ts:293","errorMessage":"argument 2 (lsigTxn3) for assignRole must be a pay transaction","pc":[1404]},{"teal":804,"source":"contracts/TownHall.algo.ts:292","pc":[1405,1406]},{"teal":805,"source":"contracts/TownHall.algo.ts:292","pc":[1407,1408]},{"teal":806,"source":"contracts/TownHall.algo.ts:292","pc":[1409]},{"teal":807,"source":"contracts/TownHall.algo.ts:292","pc":[1410]},{"teal":808,"source":"contracts/TownHall.algo.ts:292","pc":[1411,1412]},{"teal":809,"source":"contracts/TownHall.algo.ts:292","pc":[1413]},{"teal":810,"source":"contracts/TownHall.algo.ts:292","pc":[1414]},{"teal":813,"source":"contracts/TownHall.algo.ts:292","errorMessage":"argument 3 (lsigTxn2) for assignRole must be a pay transaction","pc":[1415]},{"teal":816,"source":"contracts/TownHall.algo.ts:291","pc":[1416,1417]},{"teal":817,"source":"contracts/TownHall.algo.ts:291","pc":[1418,1419]},{"teal":818,"source":"contracts/TownHall.algo.ts:291","pc":[1420]},{"teal":819,"source":"contracts/TownHall.algo.ts:291","pc":[1421]},{"teal":820,"source":"contracts/TownHall.algo.ts:291","pc":[1422,1423]},{"teal":821,"source":"contracts/TownHall.algo.ts:291","pc":[1424]},{"teal":822,"source":"contracts/TownHall.algo.ts:291","pc":[1425]},{"teal":825,"source":"contracts/TownHall.algo.ts:291","errorMessage":"argument 4 (lsigTxn1) for assignRole must be a pay transaction","pc":[1426]},{"teal":828,"source":"contracts/TownHall.algo.ts:290","pc":[1427,1428]},{"teal":829,"source":"contracts/TownHall.algo.ts:290","pc":[1429]},{"teal":830,"source":"contracts/TownHall.algo.ts:290","pc":[1430]},{"teal":831,"source":"contracts/TownHall.algo.ts:290","pc":[1431]},{"teal":832,"source":"contracts/TownHall.algo.ts:290","pc":[1432,1433]},{"teal":833,"source":"contracts/TownHall.algo.ts:290","pc":[1434]},{"teal":834,"source":"contracts/TownHall.algo.ts:290","pc":[1435]},{"teal":837,"source":"contracts/TownHall.algo.ts:290","errorMessage":"argument 5 (lsigTxn0) for assignRole must be a pay transaction","pc":[1436]},{"teal":840,"source":"contracts/TownHall.algo.ts:289","pc":[1437,1438,1439]},{"teal":841,"source":"contracts/TownHall.algo.ts:289","pc":[1440,1441,1442]},{"teal":844,"source":"contracts/TownHall.algo.ts:288","pc":[1443,1444,1445]},{"teal":845,"source":"contracts/TownHall.algo.ts:288","pc":[1446,1447,1448]},{"teal":848,"source":"contracts/TownHall.algo.ts:287","pc":[1449,1450,1451]},{"teal":849,"source":"contracts/TownHall.algo.ts:287","pc":[1452,1453,1454]},{"teal":852,"source":"contracts/TownHall.algo.ts:286","pc":[1455,1456,1457]},{"teal":853,"source":"contracts/TownHall.algo.ts:286","pc":[1458,1459,1460]},{"teal":856,"source":"contracts/TownHall.algo.ts:285","pc":[1461,1462,1463]},{"teal":857,"source":"contracts/TownHall.algo.ts:285","pc":[1464,1465,1466]},{"teal":860,"source":"contracts/TownHall.algo.ts:284","pc":[1467,1468,1469]},{"teal":861,"source":"contracts/TownHall.algo.ts:284","pc":[1470]},{"teal":862,"source":"contracts/TownHall.algo.ts:284","pc":[1471]},{"teal":866,"source":"contracts/TownHall.algo.ts:284","pc":[1472,1473,1474]},{"teal":870,"source":"contracts/TownHall.algo.ts:297","pc":[1475]},{"teal":871,"source":"contracts/TownHall.algo.ts:297","pc":[1476]},{"teal":872,"source":"contracts/Constants.ts:14","pc":[1477]},{"teal":873,"source":"contracts/TownHall.algo.ts:297","pc":[1478]},{"teal":876,"source":"contracts/TownHall.algo.ts:297","errorMessage":"Invalid method call: Game is not in Assign Role state.","pc":[1479]},{"teal":883,"source":"contracts/TownHall.algo.ts:307","pc":[1480,1481]},{"teal":884,"source":"contracts/TownHall.algo.ts:307","pc":[1482]},{"teal":885,"source":"contracts/TownHall.algo.ts:307","pc":[1483]},{"teal":886,"source":"contracts/TownHall.algo.ts:307","pc":[1484]},{"teal":887,"source":"contracts/TownHall.algo.ts:307","pc":[1485]},{"teal":888,"source":"contracts/TownHall.algo.ts:307","pc":[1486]},{"teal":891,"source":"contracts/TownHall.algo.ts:306","errorMessage":"KeyImage already in store. Are you trying to double-dip with your ring signature?","pc":[1487]},{"teal":895,"source":"contracts/TownHall.algo.ts:310","pc":[1488,1489]},{"teal":896,"source":"contracts/TownHall.algo.ts:310","pc":[1490]},{"teal":897,"source":"contracts/TownHall.algo.ts:310","pc":[1491]},{"teal":898,"source":"contracts/TownHall.algo.ts:310","pc":[1492]},{"teal":899,"source":"contracts/TownHall.algo.ts:310","pc":[1493]},{"teal":903,"source":"contracts/TownHall.algo.ts:314","pc":[1494,1495]},{"teal":904,"source":"contracts/TownHall.algo.ts:314","pc":[1496,1497]},{"teal":905,"source":"contracts/TownHall.algo.ts:314","pc":[1498,1499]},{"teal":906,"source":"contracts/TownHall.algo.ts:314","pc":[1500]},{"teal":907,"source":"contracts/TownHall.algo.ts:314","pc":[1501]},{"teal":908,"source":"contracts/TownHall.algo.ts:314","pc":[1502]},{"teal":915,"source":"contracts/TownHall.algo.ts:318","pc":[1503,1504]},{"teal":916,"source":"contracts/TownHall.algo.ts:318","pc":[1505]},{"teal":917,"source":"contracts/TownHall.algo.ts:318","pc":[1506,1507,1508]},{"teal":918,"source":"contracts/TownHall.algo.ts:318","pc":[1509]},{"teal":919,"source":"contracts/TownHall.algo.ts:318","pc":[1510,1511]},{"teal":920,"source":"contracts/TownHall.algo.ts:318","pc":[1512]},{"teal":923,"source":"contracts/TownHall.algo.ts:317","errorMessage":"Invalid PKs! Are you trying to pass in a different ring of PKs?","pc":[1513]},{"teal":928,"source":"contracts/TownHall.algo.ts:324","pc":[1514,1515]},{"teal":929,"source":"contracts/TownHall.algo.ts:324","pc":[1516,1517]},{"teal":930,"source":"contracts/TownHall.algo.ts:324","pc":[1518,1519,1520,1521,1522,1523,1524,1525,1526,1527,1528,1529,1530,1531,1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1546,1547,1548,1549,1550,1551]},{"teal":931,"source":"contracts/TownHall.algo.ts:324","pc":[1552]},{"teal":934,"source":"contracts/TownHall.algo.ts:324","errorMessage":"transaction verification failed: {\"txn\":\"lsigTxn0\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig0.address())\"}","pc":[1553]},{"teal":939,"source":"contracts/TownHall.algo.ts:325","pc":[1554,1555]},{"teal":940,"source":"contracts/TownHall.algo.ts:325","pc":[1556,1557]},{"teal":941,"source":"contracts/TownHall.algo.ts:325","pc":[1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591]},{"teal":942,"source":"contracts/TownHall.algo.ts:325","pc":[1592]},{"teal":945,"source":"contracts/TownHall.algo.ts:325","errorMessage":"transaction verification failed: {\"txn\":\"lsigTxn1\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig1.address())\"}","pc":[1593]},{"teal":950,"source":"contracts/TownHall.algo.ts:326","pc":[1594,1595]},{"teal":951,"source":"contracts/TownHall.algo.ts:326","pc":[1596,1597]},{"teal":952,"source":"contracts/TownHall.algo.ts:326","pc":[1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,1619,1620,1621,1622,1623,1624,1625,1626,1627,1628,1629,1630,1631]},{"teal":953,"source":"contracts/TownHall.algo.ts:326","pc":[1632]},{"teal":956,"source":"contracts/TownHall.algo.ts:326","errorMessage":"transaction verification failed: {\"txn\":\"lsigTxn2\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig2.address())\"}","pc":[1633]},{"teal":961,"source":"contracts/TownHall.algo.ts:327","pc":[1634,1635]},{"teal":962,"source":"contracts/TownHall.algo.ts:327","pc":[1636,1637]},{"teal":963,"source":"contracts/TownHall.algo.ts:327","pc":[1638,1639,1640,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1654,1655,1656,1657,1658,1659,1660,1661,1662,1663,1664,1665,1666,1667,1668,1669,1670,1671]},{"teal":964,"source":"contracts/TownHall.algo.ts:327","pc":[1672]},{"teal":967,"source":"contracts/TownHall.algo.ts:327","errorMessage":"transaction verification failed: {\"txn\":\"lsigTxn3\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig3.address())\"}","pc":[1673]},{"teal":972,"source":"contracts/TownHall.algo.ts:328","pc":[1674,1675]},{"teal":973,"source":"contracts/TownHall.algo.ts:328","pc":[1676,1677]},{"teal":974,"source":"contracts/TownHall.algo.ts:328","pc":[1678,1679,1680,1681,1682,1683,1684,1685,1686,1687,1688,1689,1690,1691,1692,1693,1694,1695,1696,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1707,1708,1709,1710,1711]},{"teal":975,"source":"contracts/TownHall.algo.ts:328","pc":[1712]},{"teal":978,"source":"contracts/TownHall.algo.ts:328","errorMessage":"transaction verification failed: {\"txn\":\"lsigTxn4\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig4.address())\"}","pc":[1713]},{"teal":983,"source":"contracts/TownHall.algo.ts:329","pc":[1714,1715]},{"teal":984,"source":"contracts/TownHall.algo.ts:329","pc":[1716,1717]},{"teal":985,"source":"contracts/TownHall.algo.ts:329","pc":[1718,1719,1720,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1734,1735,1736,1737,1738,1739,1740,1741,1742,1743,1744,1745,1746,1747,1748,1749,1750,1751]},{"teal":986,"source":"contracts/TownHall.algo.ts:329","pc":[1752]},{"teal":989,"source":"contracts/TownHall.algo.ts:329","errorMessage":"transaction verification failed: {\"txn\":\"lsigTxn5\",\"field\":\"sender\",\"expected\":\"Address.fromBytes(RingLinkLSig5.address())\"}","pc":[1753]},{"teal":994,"source":"contracts/TownHall.algo.ts:336","pc":[1754,1755]},{"teal":995,"source":"contracts/TownHall.algo.ts:336","pc":[1756]},{"teal":996,"source":"contracts/TownHall.algo.ts:336","pc":[1757,1758]},{"teal":997,"source":"contracts/TownHall.algo.ts:336","pc":[1759]},{"teal":998,"source":"contracts/TownHall.algo.ts:336","pc":[1760,1761,1762]},{"teal":1003,"source":"contracts/TownHall.algo.ts:337","pc":[1763,1764]},{"teal":1004,"source":"contracts/TownHall.algo.ts:337","pc":[1765,1766]},{"teal":1005,"source":"contracts/TownHall.algo.ts:337","pc":[1767]},{"teal":1009,"source":"contracts/TownHall.algo.ts:338","pc":[1768,1769]},{"teal":1010,"source":"contracts/TownHall.algo.ts:338","pc":[1770,1771]},{"teal":1011,"source":"contracts/TownHall.algo.ts:338","pc":[1772]},{"teal":1015,"source":"contracts/TownHall.algo.ts:339","pc":[1773]},{"teal":1021,"source":"contracts/TownHall.algo.ts:341","pc":[1774,1775]},{"teal":1022,"source":"contracts/TownHall.algo.ts:341","pc":[1776]},{"teal":1023,"source":"contracts/TownHall.algo.ts:341","pc":[1777,1778]},{"teal":1024,"source":"contracts/TownHall.algo.ts:341","pc":[1779]},{"teal":1025,"source":"contracts/TownHall.algo.ts:341","pc":[1780,1781,1782]},{"teal":1030,"source":"contracts/TownHall.algo.ts:342","pc":[1783,1784]},{"teal":1031,"source":"contracts/TownHall.algo.ts:342","pc":[1785,1786]},{"teal":1032,"source":"contracts/TownHall.algo.ts:342","pc":[1787]},{"teal":1036,"source":"contracts/TownHall.algo.ts:343","pc":[1788,1789]},{"teal":1037,"source":"contracts/TownHall.algo.ts:343","pc":[1790,1791]},{"teal":1038,"source":"contracts/TownHall.algo.ts:343","pc":[1792]},{"teal":1042,"source":"contracts/TownHall.algo.ts:344","pc":[1793]},{"teal":1048,"source":"contracts/TownHall.algo.ts:346","pc":[1794,1795]},{"teal":1049,"source":"contracts/TownHall.algo.ts:346","pc":[1796]},{"teal":1050,"source":"contracts/TownHall.algo.ts:346","pc":[1797,1798]},{"teal":1051,"source":"contracts/TownHall.algo.ts:346","pc":[1799]},{"teal":1052,"source":"contracts/TownHall.algo.ts:346","pc":[1800,1801,1802]},{"teal":1057,"source":"contracts/TownHall.algo.ts:347","pc":[1803,1804]},{"teal":1058,"source":"contracts/TownHall.algo.ts:347","pc":[1805,1806]},{"teal":1059,"source":"contracts/TownHall.algo.ts:347","pc":[1807]},{"teal":1063,"source":"contracts/TownHall.algo.ts:348","pc":[1808]},{"teal":1069,"source":"contracts/TownHall.algo.ts:350","pc":[1809,1810]},{"teal":1070,"source":"contracts/TownHall.algo.ts:350","pc":[1811]},{"teal":1071,"source":"contracts/TownHall.algo.ts:350","pc":[1812,1813]},{"teal":1072,"source":"contracts/TownHall.algo.ts:350","pc":[1814]},{"teal":1073,"source":"contracts/TownHall.algo.ts:350","pc":[1815,1816,1817]},{"teal":1078,"source":"contracts/TownHall.algo.ts:351","pc":[1818,1819]},{"teal":1079,"source":"contracts/TownHall.algo.ts:351","pc":[1820,1821]},{"teal":1080,"source":"contracts/TownHall.algo.ts:351","pc":[1822]},{"teal":1084,"source":"contracts/TownHall.algo.ts:352","pc":[1823]},{"teal":1090,"source":"contracts/TownHall.algo.ts:354","pc":[1824,1825]},{"teal":1091,"source":"contracts/TownHall.algo.ts:354","pc":[1826]},{"teal":1092,"source":"contracts/TownHall.algo.ts:354","pc":[1827,1828]},{"teal":1093,"source":"contracts/TownHall.algo.ts:354","pc":[1829]},{"teal":1094,"source":"contracts/TownHall.algo.ts:354","pc":[1830,1831,1832]},{"teal":1099,"source":"contracts/TownHall.algo.ts:355","pc":[1833,1834]},{"teal":1100,"source":"contracts/TownHall.algo.ts:355","pc":[1835,1836]},{"teal":1101,"source":"contracts/TownHall.algo.ts:355","pc":[1837]},{"teal":1105,"source":"contracts/TownHall.algo.ts:356","pc":[1838]},{"teal":1111,"source":"contracts/TownHall.algo.ts:358","pc":[1839,1840]},{"teal":1112,"source":"contracts/TownHall.algo.ts:358","pc":[1841]},{"teal":1113,"source":"contracts/TownHall.algo.ts:358","pc":[1842,1843]},{"teal":1114,"source":"contracts/TownHall.algo.ts:358","pc":[1844]},{"teal":1115,"source":"contracts/TownHall.algo.ts:358","pc":[1845,1846,1847]},{"teal":1120,"source":"contracts/TownHall.algo.ts:359","pc":[1848,1849]},{"teal":1121,"source":"contracts/TownHall.algo.ts:359","pc":[1850,1851]},{"teal":1122,"source":"contracts/TownHall.algo.ts:359","pc":[1852]},{"teal":1126,"source":"contracts/TownHall.algo.ts:360","pc":[1853]},{"teal":1127,"source":"contracts/Constants.ts:15","pc":[1854]},{"teal":1128,"source":"contracts/TownHall.algo.ts:360","pc":[1855]},{"teal":1132,"source":"contracts/TownHall.algo.ts:361","pc":[1856]},{"teal":1136,"source":"contracts/TownHall.algo.ts:364","errorMessage":"Invalid state! Error, game should have moved to the next stage already.","pc":[1857]},{"teal":1137,"source":"contracts/TownHall.algo.ts:284","pc":[1858]},{"teal":1142,"source":"contracts/TownHall.algo.ts:367","pc":[1859,1860,1861]},{"teal":1143,"source":"contracts/TownHall.algo.ts:367","pc":[1862]},{"teal":1146,"source":"contracts/TownHall.algo.ts:367","pc":[1863,1864,1865]},{"teal":1147,"source":"contracts/TownHall.algo.ts:367","pc":[1866]},{"teal":1148,"source":"contracts/TownHall.algo.ts:367","pc":[1867]},{"teal":1152,"source":"contracts/TownHall.algo.ts:367","pc":[1868,1869,1870]},{"teal":1156,"source":"contracts/TownHall.algo.ts:368","pc":[1871]},{"teal":1157,"source":"contracts/TownHall.algo.ts:368","pc":[1872]},{"teal":1158,"source":"contracts/Constants.ts:15","pc":[1873]},{"teal":1159,"source":"contracts/TownHall.algo.ts:368","pc":[1874]},{"teal":1162,"source":"contracts/TownHall.algo.ts:368","errorMessage":"Invalid method call: Game is not in Day Stage Vote state.","pc":[1875]},{"teal":1166,"source":"contracts/TownHall.algo.ts:370","pc":[1876,1877]},{"teal":1167,"source":"contracts/TownHall.algo.ts:370","pc":[1878]},{"teal":1168,"source":"contracts/TownHall.algo.ts:370","pc":[1879]},{"teal":1169,"source":"contracts/TownHall.algo.ts:370","pc":[1880]},{"teal":1170,"source":"contracts/TownHall.algo.ts:370","pc":[1881,1882,1883]},{"teal":1171,"source":"contracts/TownHall.algo.ts:370","pc":[1884,1885]},{"teal":1172,"source":"contracts/TownHall.algo.ts:370","pc":[1886,1887]},{"teal":1173,"source":"contracts/TownHall.algo.ts:370","pc":[1888]},{"teal":1174,"source":"contracts/TownHall.algo.ts:370","pc":[1889]},{"teal":1178,"source":"contracts/TownHall.algo.ts:370","errorMessage":"Invalid vote: Vote must be int 1 <= n <= 6.","pc":[1890]},{"teal":1190,"source":"contracts/TownHall.algo.ts:374","pc":[1891,1892]},{"teal":1191,"source":"contracts/TownHall.algo.ts:374","pc":[1893,1894]},{"teal":1192,"source":"contracts/TownHall.algo.ts:374","pc":[1895]},{"teal":1193,"source":"contracts/TownHall.algo.ts:374","pc":[1896]},{"teal":1194,"source":"contracts/TownHall.algo.ts:374","pc":[1897]},{"teal":1195,"source":"contracts/TownHall.algo.ts:374","pc":[1898,1899,1900]},{"teal":1196,"source":"contracts/TownHall.algo.ts:375","pc":[1901,1902]},{"teal":1197,"source":"contracts/TownHall.algo.ts:375","pc":[1903,1904]},{"teal":1198,"source":"contracts/TownHall.algo.ts:375","pc":[1905]},{"teal":1199,"source":"contracts/TownHall.algo.ts:375","pc":[1906]},{"teal":1200,"source":"contracts/TownHall.algo.ts:374","pc":[1907]},{"teal":1203,"source":"contracts/TownHall.algo.ts:375","pc":[1908]},{"teal":1204,"source":"contracts/TownHall.algo.ts:375","pc":[1909,1910,1911]},{"teal":1205,"source":"contracts/TownHall.algo.ts:376","pc":[1912,1913]},{"teal":1206,"source":"contracts/TownHall.algo.ts:376","pc":[1914,1915]},{"teal":1207,"source":"contracts/TownHall.algo.ts:376","pc":[1916]},{"teal":1208,"source":"contracts/TownHall.algo.ts:376","pc":[1917]},{"teal":1209,"source":"contracts/TownHall.algo.ts:375","pc":[1918]},{"teal":1212,"source":"contracts/TownHall.algo.ts:376","pc":[1919]},{"teal":1213,"source":"contracts/TownHall.algo.ts:376","pc":[1920,1921,1922]},{"teal":1214,"source":"contracts/TownHall.algo.ts:377","pc":[1923,1924]},{"teal":1215,"source":"contracts/TownHall.algo.ts:377","pc":[1925,1926]},{"teal":1216,"source":"contracts/TownHall.algo.ts:377","pc":[1927]},{"teal":1217,"source":"contracts/TownHall.algo.ts:377","pc":[1928]},{"teal":1218,"source":"contracts/TownHall.algo.ts:376","pc":[1929]},{"teal":1221,"source":"contracts/TownHall.algo.ts:377","pc":[1930]},{"teal":1222,"source":"contracts/TownHall.algo.ts:377","pc":[1931,1932,1933]},{"teal":1223,"source":"contracts/TownHall.algo.ts:378","pc":[1934,1935]},{"teal":1224,"source":"contracts/TownHall.algo.ts:378","pc":[1936,1937]},{"teal":1225,"source":"contracts/TownHall.algo.ts:378","pc":[1938]},{"teal":1226,"source":"contracts/TownHall.algo.ts:378","pc":[1939]},{"teal":1227,"source":"contracts/TownHall.algo.ts:377","pc":[1940]},{"teal":1230,"source":"contracts/TownHall.algo.ts:378","pc":[1941]},{"teal":1231,"source":"contracts/TownHall.algo.ts:378","pc":[1942,1943,1944]},{"teal":1232,"source":"contracts/TownHall.algo.ts:379","pc":[1945,1946]},{"teal":1233,"source":"contracts/TownHall.algo.ts:379","pc":[1947,1948]},{"teal":1234,"source":"contracts/TownHall.algo.ts:379","pc":[1949]},{"teal":1235,"source":"contracts/TownHall.algo.ts:379","pc":[1950]},{"teal":1236,"source":"contracts/TownHall.algo.ts:378","pc":[1951]},{"teal":1239,"source":"contracts/TownHall.algo.ts:373","pc":[1952]},{"teal":1240,"source":"contracts/TownHall.algo.ts:372","pc":[1953,1954,1955]},{"teal":1244,"source":"contracts/TownHall.algo.ts:382","errorMessage":"Illegal call: Address sender not allowed to vote.","pc":[1956]},{"teal":1250,"source":"contracts/TownHall.algo.ts:385","pc":[1957,1958]},{"teal":1251,"source":"contracts/TownHall.algo.ts:385","pc":[1959]},{"teal":1252,"source":"contracts/TownHall.algo.ts:385","pc":[1960]},{"teal":1253,"source":"contracts/TownHall.algo.ts:385","pc":[1961]},{"teal":1254,"source":"contracts/TownHall.algo.ts:385","pc":[1962,1963,1964]},{"teal":1255,"source":"contracts/TownHall.algo.ts:385","pc":[1965,1966]},{"teal":1256,"source":"contracts/TownHall.algo.ts:385","pc":[1967]},{"teal":1257,"source":"contracts/TownHall.algo.ts:385","pc":[1968,1969]},{"teal":1258,"source":"contracts/TownHall.algo.ts:385","pc":[1970]},{"teal":1259,"source":"contracts/TownHall.algo.ts:385","pc":[1971]},{"teal":1262,"source":"contracts/TownHall.algo.ts:385","pc":[1972,1973,1974]},{"teal":1267,"source":"contracts/TownHall.algo.ts:386","pc":[1975,1976]},{"teal":1268,"source":"contracts/TownHall.algo.ts:386","pc":[1977]},{"teal":1269,"source":"contracts/TownHall.algo.ts:386","pc":[1978]},{"teal":1270,"source":"contracts/TownHall.algo.ts:386","pc":[1979]},{"teal":1271,"source":"contracts/TownHall.algo.ts:386","pc":[1980,1981]},{"teal":1272,"source":"contracts/TownHall.algo.ts:386","pc":[1982]},{"teal":1273,"source":"contracts/TownHall.algo.ts:386","pc":[1983]},{"teal":1274,"source":"contracts/TownHall.algo.ts:385","pc":[1984,1985,1986]},{"teal":1279,"source":"contracts/TownHall.algo.ts:387","pc":[1987,1988]},{"teal":1280,"source":"contracts/TownHall.algo.ts:387","pc":[1989]},{"teal":1281,"source":"contracts/TownHall.algo.ts:387","pc":[1990]},{"teal":1282,"source":"contracts/TownHall.algo.ts:387","pc":[1991]},{"teal":1283,"source":"contracts/TownHall.algo.ts:387","pc":[1992,1993,1994]},{"teal":1284,"source":"contracts/TownHall.algo.ts:387","pc":[1995,1996]},{"teal":1285,"source":"contracts/TownHall.algo.ts:387","pc":[1997]},{"teal":1286,"source":"contracts/TownHall.algo.ts:387","pc":[1998,1999]},{"teal":1287,"source":"contracts/TownHall.algo.ts:387","pc":[2000]},{"teal":1288,"source":"contracts/TownHall.algo.ts:387","pc":[2001]},{"teal":1291,"source":"contracts/TownHall.algo.ts:387","pc":[2002,2003,2004]},{"teal":1296,"source":"contracts/TownHall.algo.ts:388","pc":[2005,2006]},{"teal":1297,"source":"contracts/TownHall.algo.ts:388","pc":[2007]},{"teal":1298,"source":"contracts/TownHall.algo.ts:388","pc":[2008]},{"teal":1299,"source":"contracts/TownHall.algo.ts:388","pc":[2009]},{"teal":1300,"source":"contracts/TownHall.algo.ts:388","pc":[2010,2011]},{"teal":1301,"source":"contracts/TownHall.algo.ts:388","pc":[2012]},{"teal":1302,"source":"contracts/TownHall.algo.ts:388","pc":[2013]},{"teal":1303,"source":"contracts/TownHall.algo.ts:387","pc":[2014,2015,2016]},{"teal":1308,"source":"contracts/TownHall.algo.ts:389","pc":[2017,2018]},{"teal":1309,"source":"contracts/TownHall.algo.ts:389","pc":[2019,2020]},{"teal":1310,"source":"contracts/TownHall.algo.ts:389","pc":[2021]},{"teal":1311,"source":"contracts/TownHall.algo.ts:389","pc":[2022]},{"teal":1312,"source":"contracts/TownHall.algo.ts:389","pc":[2023,2024,2025]},{"teal":1313,"source":"contracts/TownHall.algo.ts:389","pc":[2026,2027]},{"teal":1314,"source":"contracts/TownHall.algo.ts:389","pc":[2028]},{"teal":1315,"source":"contracts/TownHall.algo.ts:389","pc":[2029,2030]},{"teal":1316,"source":"contracts/TownHall.algo.ts:389","pc":[2031]},{"teal":1317,"source":"contracts/TownHall.algo.ts:389","pc":[2032]},{"teal":1320,"source":"contracts/TownHall.algo.ts:389","pc":[2033,2034,2035]},{"teal":1325,"source":"contracts/TownHall.algo.ts:390","pc":[2036,2037]},{"teal":1326,"source":"contracts/TownHall.algo.ts:390","pc":[2038]},{"teal":1327,"source":"contracts/TownHall.algo.ts:390","pc":[2039]},{"teal":1328,"source":"contracts/TownHall.algo.ts:390","pc":[2040]},{"teal":1329,"source":"contracts/TownHall.algo.ts:390","pc":[2041,2042]},{"teal":1330,"source":"contracts/TownHall.algo.ts:390","pc":[2043]},{"teal":1331,"source":"contracts/TownHall.algo.ts:390","pc":[2044]},{"teal":1332,"source":"contracts/TownHall.algo.ts:389","pc":[2045,2046,2047]},{"teal":1337,"source":"contracts/TownHall.algo.ts:391","pc":[2048,2049]},{"teal":1338,"source":"contracts/TownHall.algo.ts:391","pc":[2050,2051]},{"teal":1339,"source":"contracts/TownHall.algo.ts:391","pc":[2052]},{"teal":1340,"source":"contracts/TownHall.algo.ts:391","pc":[2053]},{"teal":1341,"source":"contracts/TownHall.algo.ts:391","pc":[2054,2055,2056]},{"teal":1342,"source":"contracts/TownHall.algo.ts:391","pc":[2057,2058]},{"teal":1343,"source":"contracts/TownHall.algo.ts:391","pc":[2059]},{"teal":1344,"source":"contracts/TownHall.algo.ts:391","pc":[2060,2061]},{"teal":1345,"source":"contracts/TownHall.algo.ts:391","pc":[2062]},{"teal":1346,"source":"contracts/TownHall.algo.ts:391","pc":[2063]},{"teal":1349,"source":"contracts/TownHall.algo.ts:391","pc":[2064,2065,2066]},{"teal":1354,"source":"contracts/TownHall.algo.ts:392","pc":[2067,2068]},{"teal":1355,"source":"contracts/TownHall.algo.ts:392","pc":[2069]},{"teal":1356,"source":"contracts/TownHall.algo.ts:392","pc":[2070]},{"teal":1357,"source":"contracts/TownHall.algo.ts:392","pc":[2071]},{"teal":1358,"source":"contracts/TownHall.algo.ts:392","pc":[2072,2073]},{"teal":1359,"source":"contracts/TownHall.algo.ts:392","pc":[2074]},{"teal":1360,"source":"contracts/TownHall.algo.ts:392","pc":[2075]},{"teal":1361,"source":"contracts/TownHall.algo.ts:391","pc":[2076,2077,2078]},{"teal":1366,"source":"contracts/TownHall.algo.ts:393","pc":[2079,2080]},{"teal":1367,"source":"contracts/TownHall.algo.ts:393","pc":[2081,2082]},{"teal":1368,"source":"contracts/TownHall.algo.ts:393","pc":[2083]},{"teal":1369,"source":"contracts/TownHall.algo.ts:393","pc":[2084]},{"teal":1370,"source":"contracts/TownHall.algo.ts:393","pc":[2085,2086,2087]},{"teal":1371,"source":"contracts/TownHall.algo.ts:393","pc":[2088,2089]},{"teal":1372,"source":"contracts/TownHall.algo.ts:393","pc":[2090]},{"teal":1373,"source":"contracts/TownHall.algo.ts:393","pc":[2091,2092]},{"teal":1374,"source":"contracts/TownHall.algo.ts:393","pc":[2093]},{"teal":1375,"source":"contracts/TownHall.algo.ts:393","pc":[2094]},{"teal":1378,"source":"contracts/TownHall.algo.ts:393","pc":[2095,2096,2097]},{"teal":1383,"source":"contracts/TownHall.algo.ts:394","pc":[2098,2099]},{"teal":1384,"source":"contracts/TownHall.algo.ts:394","pc":[2100]},{"teal":1385,"source":"contracts/TownHall.algo.ts:394","pc":[2101]},{"teal":1386,"source":"contracts/TownHall.algo.ts:394","pc":[2102]},{"teal":1387,"source":"contracts/TownHall.algo.ts:394","pc":[2103,2104]},{"teal":1388,"source":"contracts/TownHall.algo.ts:394","pc":[2105]},{"teal":1389,"source":"contracts/TownHall.algo.ts:394","pc":[2106]},{"teal":1390,"source":"contracts/TownHall.algo.ts:393","pc":[2107,2108,2109]},{"teal":1395,"source":"contracts/TownHall.algo.ts:395","pc":[2110,2111]},{"teal":1396,"source":"contracts/TownHall.algo.ts:395","pc":[2112]},{"teal":1397,"source":"contracts/TownHall.algo.ts:395","pc":[2113]},{"teal":1398,"source":"contracts/TownHall.algo.ts:395","pc":[2114]},{"teal":1399,"source":"contracts/TownHall.algo.ts:395","pc":[2115,2116,2117]},{"teal":1400,"source":"contracts/TownHall.algo.ts:395","pc":[2118,2119]},{"teal":1401,"source":"contracts/TownHall.algo.ts:395","pc":[2120]},{"teal":1402,"source":"contracts/TownHall.algo.ts:395","pc":[2121,2122]},{"teal":1403,"source":"contracts/TownHall.algo.ts:395","pc":[2123]},{"teal":1404,"source":"contracts/TownHall.algo.ts:395","pc":[2124]},{"teal":1407,"source":"contracts/TownHall.algo.ts:395","pc":[2125,2126,2127]},{"teal":1412,"source":"contracts/TownHall.algo.ts:396","pc":[2128,2129]},{"teal":1413,"source":"contracts/TownHall.algo.ts:396","pc":[2130]},{"teal":1414,"source":"contracts/TownHall.algo.ts:396","pc":[2131]},{"teal":1415,"source":"contracts/TownHall.algo.ts:396","pc":[2132]},{"teal":1416,"source":"contracts/TownHall.algo.ts:396","pc":[2133,2134]},{"teal":1417,"source":"contracts/TownHall.algo.ts:396","pc":[2135]},{"teal":1418,"source":"contracts/TownHall.algo.ts:396","pc":[2136]},{"teal":1419,"source":"contracts/TownHall.algo.ts:395","pc":[2137,2138,2139]},{"teal":1423,"source":"contracts/TownHall.algo.ts:398","errorMessage":"Invalid vote: Is player still alive?","pc":[2140]},{"teal":1429,"source":"contracts/TownHall.algo.ts:401","pc":[2141,2142]},{"teal":1430,"source":"contracts/TownHall.algo.ts:401","pc":[2143,2144]},{"teal":1431,"source":"contracts/TownHall.algo.ts:401","pc":[2145]},{"teal":1432,"source":"contracts/TownHall.algo.ts:401","pc":[2146]},{"teal":1433,"source":"contracts/TownHall.algo.ts:401","pc":[2147]},{"teal":1434,"source":"contracts/TownHall.algo.ts:401","pc":[2148,2149,2150]},{"teal":1435,"source":"contracts/TownHall.algo.ts:401","pc":[2151,2152]},{"teal":1436,"source":"contracts/TownHall.algo.ts:401","pc":[2153]},{"teal":1437,"source":"contracts/TownHall.algo.ts:401","pc":[2154]},{"teal":1438,"source":"contracts/TownHall.algo.ts:401","pc":[2155]},{"teal":1439,"source":"contracts/TownHall.algo.ts:401","pc":[2156]},{"teal":1442,"source":"contracts/TownHall.algo.ts:401","pc":[2157,2158,2159]},{"teal":1447,"source":"contracts/TownHall.algo.ts:402","pc":[2160,2161]},{"teal":1448,"source":"contracts/TownHall.algo.ts:402","pc":[2162]},{"teal":1449,"source":"contracts/TownHall.algo.ts:402","pc":[2163]},{"teal":1450,"source":"contracts/TownHall.algo.ts:401","pc":[2164,2165,2166]},{"teal":1455,"source":"contracts/TownHall.algo.ts:403","pc":[2167,2168]},{"teal":1456,"source":"contracts/TownHall.algo.ts:403","pc":[2169,2170]},{"teal":1457,"source":"contracts/TownHall.algo.ts:403","pc":[2171]},{"teal":1458,"source":"contracts/TownHall.algo.ts:403","pc":[2172]},{"teal":1459,"source":"contracts/TownHall.algo.ts:403","pc":[2173]},{"teal":1460,"source":"contracts/TownHall.algo.ts:403","pc":[2174,2175,2176]},{"teal":1461,"source":"contracts/TownHall.algo.ts:403","pc":[2177,2178]},{"teal":1462,"source":"contracts/TownHall.algo.ts:403","pc":[2179]},{"teal":1463,"source":"contracts/TownHall.algo.ts:403","pc":[2180]},{"teal":1464,"source":"contracts/TownHall.algo.ts:403","pc":[2181]},{"teal":1465,"source":"contracts/TownHall.algo.ts:403","pc":[2182]},{"teal":1468,"source":"contracts/TownHall.algo.ts:403","pc":[2183,2184,2185]},{"teal":1473,"source":"contracts/TownHall.algo.ts:404","pc":[2186,2187]},{"teal":1474,"source":"contracts/TownHall.algo.ts:404","pc":[2188]},{"teal":1475,"source":"contracts/TownHall.algo.ts:404","pc":[2189]},{"teal":1476,"source":"contracts/TownHall.algo.ts:403","pc":[2190,2191,2192]},{"teal":1481,"source":"contracts/TownHall.algo.ts:405","pc":[2193,2194]},{"teal":1482,"source":"contracts/TownHall.algo.ts:405","pc":[2195,2196]},{"teal":1483,"source":"contracts/TownHall.algo.ts:405","pc":[2197]},{"teal":1484,"source":"contracts/TownHall.algo.ts:405","pc":[2198]},{"teal":1485,"source":"contracts/TownHall.algo.ts:405","pc":[2199]},{"teal":1486,"source":"contracts/TownHall.algo.ts:405","pc":[2200,2201,2202]},{"teal":1487,"source":"contracts/TownHall.algo.ts:405","pc":[2203,2204]},{"teal":1488,"source":"contracts/TownHall.algo.ts:405","pc":[2205]},{"teal":1489,"source":"contracts/TownHall.algo.ts:405","pc":[2206]},{"teal":1490,"source":"contracts/TownHall.algo.ts:405","pc":[2207]},{"teal":1491,"source":"contracts/TownHall.algo.ts:405","pc":[2208]},{"teal":1494,"source":"contracts/TownHall.algo.ts:405","pc":[2209,2210,2211]},{"teal":1499,"source":"contracts/TownHall.algo.ts:406","pc":[2212,2213]},{"teal":1500,"source":"contracts/TownHall.algo.ts:406","pc":[2214]},{"teal":1501,"source":"contracts/TownHall.algo.ts:406","pc":[2215]},{"teal":1502,"source":"contracts/TownHall.algo.ts:405","pc":[2216,2217,2218]},{"teal":1507,"source":"contracts/TownHall.algo.ts:407","pc":[2219,2220]},{"teal":1508,"source":"contracts/TownHall.algo.ts:407","pc":[2221,2222]},{"teal":1509,"source":"contracts/TownHall.algo.ts:407","pc":[2223]},{"teal":1510,"source":"contracts/TownHall.algo.ts:407","pc":[2224]},{"teal":1511,"source":"contracts/TownHall.algo.ts:407","pc":[2225]},{"teal":1512,"source":"contracts/TownHall.algo.ts:407","pc":[2226,2227,2228]},{"teal":1513,"source":"contracts/TownHall.algo.ts:407","pc":[2229,2230]},{"teal":1514,"source":"contracts/TownHall.algo.ts:407","pc":[2231]},{"teal":1515,"source":"contracts/TownHall.algo.ts:407","pc":[2232]},{"teal":1516,"source":"contracts/TownHall.algo.ts:407","pc":[2233]},{"teal":1517,"source":"contracts/TownHall.algo.ts:407","pc":[2234]},{"teal":1520,"source":"contracts/TownHall.algo.ts:407","pc":[2235,2236,2237]},{"teal":1525,"source":"contracts/TownHall.algo.ts:408","pc":[2238,2239]},{"teal":1526,"source":"contracts/TownHall.algo.ts:408","pc":[2240]},{"teal":1527,"source":"contracts/TownHall.algo.ts:408","pc":[2241]},{"teal":1528,"source":"contracts/TownHall.algo.ts:407","pc":[2242,2243,2244]},{"teal":1533,"source":"contracts/TownHall.algo.ts:409","pc":[2245,2246]},{"teal":1534,"source":"contracts/TownHall.algo.ts:409","pc":[2247,2248]},{"teal":1535,"source":"contracts/TownHall.algo.ts:409","pc":[2249]},{"teal":1536,"source":"contracts/TownHall.algo.ts:409","pc":[2250]},{"teal":1537,"source":"contracts/TownHall.algo.ts:409","pc":[2251]},{"teal":1538,"source":"contracts/TownHall.algo.ts:409","pc":[2252,2253,2254]},{"teal":1539,"source":"contracts/TownHall.algo.ts:409","pc":[2255,2256]},{"teal":1540,"source":"contracts/TownHall.algo.ts:409","pc":[2257]},{"teal":1541,"source":"contracts/TownHall.algo.ts:409","pc":[2258]},{"teal":1542,"source":"contracts/TownHall.algo.ts:409","pc":[2259]},{"teal":1543,"source":"contracts/TownHall.algo.ts:409","pc":[2260]},{"teal":1546,"source":"contracts/TownHall.algo.ts:409","pc":[2261,2262,2263]},{"teal":1551,"source":"contracts/TownHall.algo.ts:410","pc":[2264,2265]},{"teal":1552,"source":"contracts/TownHall.algo.ts:410","pc":[2266]},{"teal":1553,"source":"contracts/TownHall.algo.ts:410","pc":[2267]},{"teal":1554,"source":"contracts/TownHall.algo.ts:409","pc":[2268,2269,2270]},{"teal":1559,"source":"contracts/TownHall.algo.ts:411","pc":[2271,2272]},{"teal":1560,"source":"contracts/TownHall.algo.ts:411","pc":[2273,2274]},{"teal":1561,"source":"contracts/TownHall.algo.ts:411","pc":[2275]},{"teal":1562,"source":"contracts/TownHall.algo.ts:411","pc":[2276]},{"teal":1563,"source":"contracts/TownHall.algo.ts:411","pc":[2277]},{"teal":1564,"source":"contracts/TownHall.algo.ts:411","pc":[2278,2279,2280]},{"teal":1565,"source":"contracts/TownHall.algo.ts:411","pc":[2281,2282]},{"teal":1566,"source":"contracts/TownHall.algo.ts:411","pc":[2283]},{"teal":1567,"source":"contracts/TownHall.algo.ts:411","pc":[2284]},{"teal":1568,"source":"contracts/TownHall.algo.ts:411","pc":[2285]},{"teal":1569,"source":"contracts/TownHall.algo.ts:411","pc":[2286]},{"teal":1572,"source":"contracts/TownHall.algo.ts:411","pc":[2287,2288,2289]},{"teal":1577,"source":"contracts/TownHall.algo.ts:412","pc":[2290,2291]},{"teal":1578,"source":"contracts/TownHall.algo.ts:412","pc":[2292]},{"teal":1579,"source":"contracts/TownHall.algo.ts:412","pc":[2293]},{"teal":1580,"source":"contracts/TownHall.algo.ts:411","pc":[2294,2295,2296]},{"teal":1584,"source":"contracts/TownHall.algo.ts:414","errorMessage":"Address not allowed to vote.","pc":[2297]},{"teal":1589,"source":"contracts/TownHall.algo.ts:417","pc":[2298,2299]},{"teal":1590,"source":"contracts/TownHall.algo.ts:417","pc":[2300]},{"teal":1591,"source":"contracts/TownHall.algo.ts:417","pc":[2301]},{"teal":1592,"source":"contracts/TownHall.algo.ts:417","pc":[2302]},{"teal":1593,"source":"contracts/TownHall.algo.ts:417","pc":[2303,2304]},{"teal":1594,"source":"contracts/TownHall.algo.ts:417","pc":[2305]},{"teal":1595,"source":"contracts/TownHall.algo.ts:417","pc":[2306]},{"teal":1600,"source":"contracts/TownHall.algo.ts:419","pc":[2307,2308]},{"teal":1601,"source":"contracts/TownHall.algo.ts:419","pc":[2309]},{"teal":1602,"source":"contracts/TownHall.algo.ts:419","pc":[2310,2311]},{"teal":1603,"source":"contracts/TownHall.algo.ts:419","pc":[2312]},{"teal":1604,"source":"contracts/TownHall.algo.ts:419","pc":[2313]},{"teal":1605,"source":"contracts/TownHall.algo.ts:419","pc":[2314,2315,2316]},{"teal":1610,"source":"contracts/TownHall.algo.ts:421","pc":[2317]},{"teal":1611,"source":"contracts/Constants.ts:16","pc":[2318,2319]},{"teal":1612,"source":"contracts/TownHall.algo.ts:421","pc":[2320]},{"teal":1616,"source":"contracts/TownHall.algo.ts:424","pc":[2321,2322]},{"teal":1617,"source":"contracts/TownHall.algo.ts:424","pc":[2323]},{"teal":1618,"source":"contracts/TownHall.algo.ts:424","pc":[2324]},{"teal":1622,"source":"contracts/TownHall.algo.ts:425","pc":[2325,2326]},{"teal":1623,"source":"contracts/TownHall.algo.ts:425","pc":[2327]},{"teal":1624,"source":"contracts/TownHall.algo.ts:425","pc":[2328]},{"teal":1628,"source":"contracts/TownHall.algo.ts:426","pc":[2329,2330]},{"teal":1629,"source":"contracts/TownHall.algo.ts:426","pc":[2331]},{"teal":1630,"source":"contracts/TownHall.algo.ts:426","pc":[2332]},{"teal":1634,"source":"contracts/TownHall.algo.ts:427","pc":[2333,2334]},{"teal":1635,"source":"contracts/TownHall.algo.ts:427","pc":[2335]},{"teal":1636,"source":"contracts/TownHall.algo.ts:427","pc":[2336]},{"teal":1640,"source":"contracts/TownHall.algo.ts:428","pc":[2337,2338]},{"teal":1641,"source":"contracts/TownHall.algo.ts:428","pc":[2339]},{"teal":1642,"source":"contracts/TownHall.algo.ts:428","pc":[2340]},{"teal":1646,"source":"contracts/TownHall.algo.ts:429","pc":[2341,2342]},{"teal":1647,"source":"contracts/TownHall.algo.ts:429","pc":[2343]},{"teal":1648,"source":"contracts/TownHall.algo.ts:429","pc":[2344]},{"teal":1652,"source":"contracts/TownHall.algo.ts:430","pc":[2345,2346]},{"teal":1653,"source":"contracts/TownHall.algo.ts:430","pc":[2347]},{"teal":1654,"source":"contracts/TownHall.algo.ts:430","pc":[2348]},{"teal":1657,"source":"contracts/TownHall.algo.ts:367","pc":[2349]},{"teal":1662,"source":"contracts/TownHall.algo.ts:436","pc":[2350,2351,2352]},{"teal":1663,"source":"contracts/TownHall.algo.ts:436","pc":[2353]},{"teal":1664,"source":"contracts/TownHall.algo.ts:436","pc":[2354]},{"teal":1668,"source":"contracts/TownHall.algo.ts:436","pc":[2355,2356,2357]},{"teal":1671,"source":"contracts/TownHall.algo.ts:436","pc":[2358]},{"teal":1672,"source":"contracts/TownHall.algo.ts:436","pc":[2359]},{"teal":1679,"source":"contracts/TownHall.algo.ts:438","pc":[2360]},{"teal":1680,"source":"contracts/TownHall.algo.ts:438","pc":[2361]},{"teal":1681,"source":"contracts/Constants.ts:16","pc":[2362,2363]},{"teal":1682,"source":"contracts/TownHall.algo.ts:438","pc":[2364]},{"teal":1685,"source":"contracts/TownHall.algo.ts:437","errorMessage":"Invalid method call: Game is not in Day Stage Eliminate state.","pc":[2365]},{"teal":1689,"source":"contracts/TownHall.algo.ts:442","pc":[2366]},{"teal":1690,"source":"contracts/TownHall.algo.ts:442","pc":[2367,2368]},{"teal":1691,"source":"contracts/TownHall.algo.ts:442","pc":[2369]},{"teal":1695,"source":"contracts/TownHall.algo.ts:443","pc":[2370]},{"teal":1696,"source":"contracts/TownHall.algo.ts:443","pc":[2371,2372]},{"teal":1700,"source":"contracts/TownHall.algo.ts:449","pc":[2373,2374]},{"teal":1701,"source":"contracts/TownHall.algo.ts:449","pc":[2375]},{"teal":1702,"source":"contracts/TownHall.algo.ts:449","pc":[2376]},{"teal":1703,"source":"contracts/TownHall.algo.ts:449","pc":[2377]},{"teal":1704,"source":"contracts/TownHall.algo.ts:449","pc":[2378]},{"teal":1705,"source":"contracts/TownHall.algo.ts:449","pc":[2379,2380]},{"teal":1710,"source":"contracts/TownHall.algo.ts:451","pc":[2381,2382]},{"teal":1711,"source":"contracts/TownHall.algo.ts:451","pc":[2383]},{"teal":1712,"source":"contracts/TownHall.algo.ts:451","pc":[2384,2385]},{"teal":1713,"source":"contracts/TownHall.algo.ts:451","pc":[2386]},{"teal":1714,"source":"contracts/TownHall.algo.ts:451","pc":[2387]},{"teal":1715,"source":"contracts/TownHall.algo.ts:451","pc":[2388,2389,2390]},{"teal":1716,"source":"contracts/TownHall.algo.ts:451","pc":[2391,2392]},{"teal":1717,"source":"contracts/TownHall.algo.ts:451","pc":[2393]},{"teal":1718,"source":"contracts/TownHall.algo.ts:451","pc":[2394,2395]},{"teal":1719,"source":"contracts/TownHall.algo.ts:451","pc":[2396]},{"teal":1720,"source":"contracts/TownHall.algo.ts:451","pc":[2397]},{"teal":1721,"source":"contracts/TownHall.algo.ts:451","pc":[2398,2399,2400]},{"teal":1722,"source":"contracts/TownHall.algo.ts:451","pc":[2401,2402]},{"teal":1723,"source":"contracts/TownHall.algo.ts:451","pc":[2403]},{"teal":1726,"source":"contracts/TownHall.algo.ts:451","pc":[2404]},{"teal":1729,"source":"contracts/TownHall.algo.ts:451","pc":[2405,2406,2407]},{"teal":1734,"source":"contracts/TownHall.algo.ts:452","pc":[2408]},{"teal":1735,"source":"contracts/TownHall.algo.ts:452","pc":[2409,2410]},{"teal":1736,"source":"contracts/TownHall.algo.ts:452","pc":[2411]},{"teal":1737,"source":"contracts/TownHall.algo.ts:452","pc":[2412]},{"teal":1741,"source":"contracts/TownHall.algo.ts:453","pc":[2413,2414]},{"teal":1742,"source":"contracts/TownHall.algo.ts:453","pc":[2415]},{"teal":1743,"source":"contracts/TownHall.algo.ts:453","pc":[2416,2417]},{"teal":1749,"source":"contracts/TownHall.algo.ts:456","pc":[2418,2419]},{"teal":1750,"source":"contracts/TownHall.algo.ts:456","pc":[2420]},{"teal":1751,"source":"contracts/TownHall.algo.ts:456","pc":[2421,2422]},{"teal":1752,"source":"contracts/TownHall.algo.ts:456","pc":[2423]},{"teal":1753,"source":"contracts/TownHall.algo.ts:456","pc":[2424]},{"teal":1754,"source":"contracts/TownHall.algo.ts:456","pc":[2425,2426,2427]},{"teal":1755,"source":"contracts/TownHall.algo.ts:456","pc":[2428,2429]},{"teal":1756,"source":"contracts/TownHall.algo.ts:456","pc":[2430]},{"teal":1757,"source":"contracts/TownHall.algo.ts:456","pc":[2431,2432]},{"teal":1758,"source":"contracts/TownHall.algo.ts:456","pc":[2433]},{"teal":1759,"source":"contracts/TownHall.algo.ts:456","pc":[2434]},{"teal":1760,"source":"contracts/TownHall.algo.ts:456","pc":[2435,2436,2437]},{"teal":1761,"source":"contracts/TownHall.algo.ts:456","pc":[2438,2439]},{"teal":1762,"source":"contracts/TownHall.algo.ts:456","pc":[2440]},{"teal":1765,"source":"contracts/TownHall.algo.ts:456","pc":[2441]},{"teal":1768,"source":"contracts/TownHall.algo.ts:456","pc":[2442,2443,2444]},{"teal":1773,"source":"contracts/TownHall.algo.ts:457","pc":[2445]},{"teal":1774,"source":"contracts/TownHall.algo.ts:457","pc":[2446,2447]},{"teal":1775,"source":"contracts/TownHall.algo.ts:457","pc":[2448]},{"teal":1776,"source":"contracts/TownHall.algo.ts:457","pc":[2449]},{"teal":1780,"source":"contracts/TownHall.algo.ts:458","pc":[2450,2451]},{"teal":1781,"source":"contracts/TownHall.algo.ts:458","pc":[2452]},{"teal":1782,"source":"contracts/TownHall.algo.ts:458","pc":[2453,2454]},{"teal":1788,"source":"contracts/TownHall.algo.ts:461","pc":[2455,2456]},{"teal":1789,"source":"contracts/TownHall.algo.ts:461","pc":[2457]},{"teal":1790,"source":"contracts/TownHall.algo.ts:461","pc":[2458,2459]},{"teal":1791,"source":"contracts/TownHall.algo.ts:461","pc":[2460]},{"teal":1792,"source":"contracts/TownHall.algo.ts:461","pc":[2461]},{"teal":1793,"source":"contracts/TownHall.algo.ts:461","pc":[2462,2463,2464]},{"teal":1794,"source":"contracts/TownHall.algo.ts:461","pc":[2465,2466]},{"teal":1795,"source":"contracts/TownHall.algo.ts:461","pc":[2467]},{"teal":1796,"source":"contracts/TownHall.algo.ts:461","pc":[2468,2469]},{"teal":1797,"source":"contracts/TownHall.algo.ts:461","pc":[2470]},{"teal":1798,"source":"contracts/TownHall.algo.ts:461","pc":[2471]},{"teal":1799,"source":"contracts/TownHall.algo.ts:461","pc":[2472,2473,2474]},{"teal":1800,"source":"contracts/TownHall.algo.ts:461","pc":[2475,2476]},{"teal":1801,"source":"contracts/TownHall.algo.ts:461","pc":[2477]},{"teal":1804,"source":"contracts/TownHall.algo.ts:461","pc":[2478]},{"teal":1807,"source":"contracts/TownHall.algo.ts:461","pc":[2479,2480,2481]},{"teal":1812,"source":"contracts/TownHall.algo.ts:462","pc":[2482]},{"teal":1813,"source":"contracts/TownHall.algo.ts:462","pc":[2483,2484]},{"teal":1814,"source":"contracts/TownHall.algo.ts:462","pc":[2485]},{"teal":1815,"source":"contracts/TownHall.algo.ts:462","pc":[2486]},{"teal":1819,"source":"contracts/TownHall.algo.ts:463","pc":[2487,2488]},{"teal":1820,"source":"contracts/TownHall.algo.ts:463","pc":[2489]},{"teal":1821,"source":"contracts/TownHall.algo.ts:463","pc":[2490,2491]},{"teal":1827,"source":"contracts/TownHall.algo.ts:466","pc":[2492,2493]},{"teal":1828,"source":"contracts/TownHall.algo.ts:466","pc":[2494]},{"teal":1829,"source":"contracts/TownHall.algo.ts:466","pc":[2495,2496]},{"teal":1830,"source":"contracts/TownHall.algo.ts:466","pc":[2497]},{"teal":1831,"source":"contracts/TownHall.algo.ts:466","pc":[2498]},{"teal":1832,"source":"contracts/TownHall.algo.ts:466","pc":[2499,2500,2501]},{"teal":1833,"source":"contracts/TownHall.algo.ts:466","pc":[2502,2503]},{"teal":1834,"source":"contracts/TownHall.algo.ts:466","pc":[2504]},{"teal":1835,"source":"contracts/TownHall.algo.ts:466","pc":[2505,2506]},{"teal":1836,"source":"contracts/TownHall.algo.ts:466","pc":[2507]},{"teal":1837,"source":"contracts/TownHall.algo.ts:466","pc":[2508]},{"teal":1838,"source":"contracts/TownHall.algo.ts:466","pc":[2509,2510,2511]},{"teal":1839,"source":"contracts/TownHall.algo.ts:466","pc":[2512,2513]},{"teal":1840,"source":"contracts/TownHall.algo.ts:466","pc":[2514]},{"teal":1843,"source":"contracts/TownHall.algo.ts:466","pc":[2515]},{"teal":1846,"source":"contracts/TownHall.algo.ts:466","pc":[2516,2517,2518]},{"teal":1851,"source":"contracts/TownHall.algo.ts:467","pc":[2519]},{"teal":1852,"source":"contracts/TownHall.algo.ts:467","pc":[2520,2521]},{"teal":1853,"source":"contracts/TownHall.algo.ts:467","pc":[2522]},{"teal":1854,"source":"contracts/TownHall.algo.ts:467","pc":[2523]},{"teal":1858,"source":"contracts/TownHall.algo.ts:468","pc":[2524,2525]},{"teal":1859,"source":"contracts/TownHall.algo.ts:468","pc":[2526]},{"teal":1860,"source":"contracts/TownHall.algo.ts:468","pc":[2527,2528]},{"teal":1866,"source":"contracts/TownHall.algo.ts:471","pc":[2529,2530]},{"teal":1867,"source":"contracts/TownHall.algo.ts:471","pc":[2531]},{"teal":1868,"source":"contracts/TownHall.algo.ts:471","pc":[2532,2533]},{"teal":1869,"source":"contracts/TownHall.algo.ts:471","pc":[2534]},{"teal":1870,"source":"contracts/TownHall.algo.ts:471","pc":[2535]},{"teal":1871,"source":"contracts/TownHall.algo.ts:471","pc":[2536,2537,2538]},{"teal":1872,"source":"contracts/TownHall.algo.ts:471","pc":[2539,2540]},{"teal":1873,"source":"contracts/TownHall.algo.ts:471","pc":[2541]},{"teal":1874,"source":"contracts/TownHall.algo.ts:471","pc":[2542,2543]},{"teal":1875,"source":"contracts/TownHall.algo.ts:471","pc":[2544]},{"teal":1876,"source":"contracts/TownHall.algo.ts:471","pc":[2545]},{"teal":1877,"source":"contracts/TownHall.algo.ts:471","pc":[2546,2547,2548]},{"teal":1878,"source":"contracts/TownHall.algo.ts:471","pc":[2549,2550]},{"teal":1879,"source":"contracts/TownHall.algo.ts:471","pc":[2551]},{"teal":1882,"source":"contracts/TownHall.algo.ts:471","pc":[2552]},{"teal":1885,"source":"contracts/TownHall.algo.ts:471","pc":[2553,2554,2555]},{"teal":1890,"source":"contracts/TownHall.algo.ts:472","pc":[2556]},{"teal":1891,"source":"contracts/TownHall.algo.ts:472","pc":[2557,2558]},{"teal":1892,"source":"contracts/TownHall.algo.ts:472","pc":[2559]},{"teal":1893,"source":"contracts/TownHall.algo.ts:472","pc":[2560]},{"teal":1897,"source":"contracts/TownHall.algo.ts:473","pc":[2561,2562]},{"teal":1898,"source":"contracts/TownHall.algo.ts:473","pc":[2563]},{"teal":1899,"source":"contracts/TownHall.algo.ts:473","pc":[2564,2565]},{"teal":1905,"source":"contracts/TownHall.algo.ts:476","pc":[2566,2567]},{"teal":1906,"source":"contracts/TownHall.algo.ts:476","pc":[2568]},{"teal":1907,"source":"contracts/TownHall.algo.ts:476","pc":[2569,2570]},{"teal":1908,"source":"contracts/TownHall.algo.ts:476","pc":[2571]},{"teal":1909,"source":"contracts/TownHall.algo.ts:476","pc":[2572]},{"teal":1910,"source":"contracts/TownHall.algo.ts:476","pc":[2573,2574,2575]},{"teal":1911,"source":"contracts/TownHall.algo.ts:476","pc":[2576,2577]},{"teal":1912,"source":"contracts/TownHall.algo.ts:476","pc":[2578]},{"teal":1913,"source":"contracts/TownHall.algo.ts:476","pc":[2579,2580]},{"teal":1914,"source":"contracts/TownHall.algo.ts:476","pc":[2581]},{"teal":1915,"source":"contracts/TownHall.algo.ts:476","pc":[2582]},{"teal":1916,"source":"contracts/TownHall.algo.ts:476","pc":[2583,2584,2585]},{"teal":1917,"source":"contracts/TownHall.algo.ts:476","pc":[2586,2587]},{"teal":1918,"source":"contracts/TownHall.algo.ts:476","pc":[2588]},{"teal":1921,"source":"contracts/TownHall.algo.ts:476","pc":[2589]},{"teal":1924,"source":"contracts/TownHall.algo.ts:476","pc":[2590,2591,2592]},{"teal":1929,"source":"contracts/TownHall.algo.ts:477","pc":[2593]},{"teal":1930,"source":"contracts/TownHall.algo.ts:477","pc":[2594,2595]},{"teal":1931,"source":"contracts/TownHall.algo.ts:477","pc":[2596]},{"teal":1932,"source":"contracts/TownHall.algo.ts:477","pc":[2597]},{"teal":1936,"source":"contracts/TownHall.algo.ts:478","pc":[2598,2599]},{"teal":1937,"source":"contracts/TownHall.algo.ts:478","pc":[2600]},{"teal":1938,"source":"contracts/TownHall.algo.ts:478","pc":[2601,2602]},{"teal":1943,"source":"contracts/TownHall.algo.ts:481","pc":[2603]},{"teal":1944,"source":"contracts/TownHall.algo.ts:481","pc":[2604]},{"teal":1945,"source":"contracts/TownHall.algo.ts:481","pc":[2605,2606]},{"teal":1946,"source":"contracts/TownHall.algo.ts:481","pc":[2607]},{"teal":1949,"source":"contracts/TownHall.algo.ts:481","errorMessage":"Error state: Zero Address won vote!","pc":[2608]},{"teal":1953,"source":"contracts/TownHall.algo.ts:482","pc":[2609,2610]},{"teal":1954,"source":"contracts/TownHall.algo.ts:482","pc":[2611]},{"teal":1955,"source":"contracts/TownHall.algo.ts:482","pc":[2612]},{"teal":1958,"source":"contracts/TownHall.algo.ts:482","errorMessage":"Error state: No votes were cast!","pc":[2613]},{"teal":1963,"source":"contracts/TownHall.algo.ts:487","pc":[2614]},{"teal":1964,"source":"contracts/TownHall.algo.ts:487","pc":[2615]},{"teal":1965,"source":"contracts/TownHall.algo.ts:487","pc":[2616,2617]},{"teal":1966,"source":"contracts/TownHall.algo.ts:487","pc":[2618]},{"teal":1967,"source":"contracts/TownHall.algo.ts:487","pc":[2619]},{"teal":1968,"source":"contracts/TownHall.algo.ts:487","pc":[2620,2621,2622]},{"teal":1973,"source":"contracts/TownHall.algo.ts:488","pc":[2623,2624]},{"teal":1974,"source":"contracts/TownHall.algo.ts:488","pc":[2625,2626]},{"teal":1975,"source":"contracts/TownHall.algo.ts:488","pc":[2627]},{"teal":1981,"source":"contracts/TownHall.algo.ts:491","pc":[2628]},{"teal":1982,"source":"contracts/TownHall.algo.ts:491","pc":[2629]},{"teal":1983,"source":"contracts/TownHall.algo.ts:491","pc":[2630,2631]},{"teal":1984,"source":"contracts/TownHall.algo.ts:491","pc":[2632]},{"teal":1985,"source":"contracts/TownHall.algo.ts:491","pc":[2633]},{"teal":1986,"source":"contracts/TownHall.algo.ts:491","pc":[2634,2635,2636]},{"teal":1991,"source":"contracts/TownHall.algo.ts:492","pc":[2637,2638]},{"teal":1992,"source":"contracts/TownHall.algo.ts:492","pc":[2639,2640]},{"teal":1993,"source":"contracts/TownHall.algo.ts:492","pc":[2641]},{"teal":1999,"source":"contracts/TownHall.algo.ts:495","pc":[2642]},{"teal":2000,"source":"contracts/TownHall.algo.ts:495","pc":[2643]},{"teal":2001,"source":"contracts/TownHall.algo.ts:495","pc":[2644,2645]},{"teal":2002,"source":"contracts/TownHall.algo.ts:495","pc":[2646]},{"teal":2003,"source":"contracts/TownHall.algo.ts:495","pc":[2647]},{"teal":2004,"source":"contracts/TownHall.algo.ts:495","pc":[2648,2649,2650]},{"teal":2009,"source":"contracts/TownHall.algo.ts:496","pc":[2651,2652]},{"teal":2010,"source":"contracts/TownHall.algo.ts:496","pc":[2653,2654]},{"teal":2011,"source":"contracts/TownHall.algo.ts:496","pc":[2655]},{"teal":2017,"source":"contracts/TownHall.algo.ts:499","pc":[2656]},{"teal":2018,"source":"contracts/TownHall.algo.ts:499","pc":[2657]},{"teal":2019,"source":"contracts/TownHall.algo.ts:499","pc":[2658,2659]},{"teal":2020,"source":"contracts/TownHall.algo.ts:499","pc":[2660]},{"teal":2021,"source":"contracts/TownHall.algo.ts:499","pc":[2661]},{"teal":2022,"source":"contracts/TownHall.algo.ts:499","pc":[2662,2663,2664]},{"teal":2027,"source":"contracts/TownHall.algo.ts:500","pc":[2665,2666]},{"teal":2028,"source":"contracts/TownHall.algo.ts:500","pc":[2667,2668]},{"teal":2029,"source":"contracts/TownHall.algo.ts:500","pc":[2669]},{"teal":2035,"source":"contracts/TownHall.algo.ts:503","pc":[2670]},{"teal":2036,"source":"contracts/TownHall.algo.ts:503","pc":[2671]},{"teal":2037,"source":"contracts/TownHall.algo.ts:503","pc":[2672,2673]},{"teal":2038,"source":"contracts/TownHall.algo.ts:503","pc":[2674]},{"teal":2039,"source":"contracts/TownHall.algo.ts:503","pc":[2675]},{"teal":2040,"source":"contracts/TownHall.algo.ts:503","pc":[2676,2677,2678]},{"teal":2045,"source":"contracts/TownHall.algo.ts:504","pc":[2679,2680]},{"teal":2046,"source":"contracts/TownHall.algo.ts:504","pc":[2681,2682]},{"teal":2047,"source":"contracts/TownHall.algo.ts:504","pc":[2683]},{"teal":2053,"source":"contracts/TownHall.algo.ts:507","pc":[2684]},{"teal":2054,"source":"contracts/TownHall.algo.ts:507","pc":[2685]},{"teal":2055,"source":"contracts/TownHall.algo.ts:507","pc":[2686,2687]},{"teal":2056,"source":"contracts/TownHall.algo.ts:507","pc":[2688]},{"teal":2057,"source":"contracts/TownHall.algo.ts:507","pc":[2689]},{"teal":2058,"source":"contracts/TownHall.algo.ts:507","pc":[2690,2691,2692]},{"teal":2063,"source":"contracts/TownHall.algo.ts:508","pc":[2693,2694]},{"teal":2064,"source":"contracts/TownHall.algo.ts:508","pc":[2695,2696]},{"teal":2065,"source":"contracts/TownHall.algo.ts:508","pc":[2697]},{"teal":2070,"source":"contracts/TownHall.algo.ts:511","pc":[2698,2699]},{"teal":2071,"source":"contracts/TownHall.algo.ts:511","pc":[2700]},{"teal":2072,"source":"contracts/TownHall.algo.ts:511","pc":[2701]},{"teal":2073,"source":"contracts/TownHall.algo.ts:511","pc":[2702]},{"teal":2074,"source":"contracts/TownHall.algo.ts:511","pc":[2703,2704]},{"teal":2075,"source":"contracts/TownHall.algo.ts:511","pc":[2705]},{"teal":2076,"source":"contracts/TownHall.algo.ts:511","pc":[2706]},{"teal":2080,"source":"contracts/TownHall.algo.ts:515","pc":[2707,2708]},{"teal":2081,"source":"contracts/TownHall.algo.ts:515","pc":[2709]},{"teal":2082,"source":"contracts/TownHall.algo.ts:515","pc":[2710]},{"teal":2086,"source":"contracts/TownHall.algo.ts:516","pc":[2711,2712]},{"teal":2087,"source":"contracts/TownHall.algo.ts:516","pc":[2713]},{"teal":2088,"source":"contracts/TownHall.algo.ts:516","pc":[2714]},{"teal":2092,"source":"contracts/TownHall.algo.ts:517","pc":[2715,2716]},{"teal":2093,"source":"contracts/TownHall.algo.ts:517","pc":[2717]},{"teal":2094,"source":"contracts/TownHall.algo.ts:517","pc":[2718]},{"teal":2098,"source":"contracts/TownHall.algo.ts:518","pc":[2719,2720]},{"teal":2099,"source":"contracts/TownHall.algo.ts:518","pc":[2721]},{"teal":2100,"source":"contracts/TownHall.algo.ts:518","pc":[2722]},{"teal":2104,"source":"contracts/TownHall.algo.ts:519","pc":[2723,2724]},{"teal":2105,"source":"contracts/TownHall.algo.ts:519","pc":[2725]},{"teal":2106,"source":"contracts/TownHall.algo.ts:519","pc":[2726]},{"teal":2110,"source":"contracts/TownHall.algo.ts:520","pc":[2727,2728]},{"teal":2111,"source":"contracts/TownHall.algo.ts:520","pc":[2729]},{"teal":2112,"source":"contracts/TownHall.algo.ts:520","pc":[2730]},{"teal":2116,"source":"contracts/TownHall.algo.ts:522","pc":[2731]},{"teal":2117,"source":"contracts/Constants.ts:17","pc":[2732,2733]},{"teal":2118,"source":"contracts/TownHall.algo.ts:522","pc":[2734]},{"teal":2119,"source":"contracts/TownHall.algo.ts:436","pc":[2735]},{"teal":2124,"source":"contracts/TownHall.algo.ts:525","pc":[2736,2737,2738]},{"teal":2125,"source":"contracts/TownHall.algo.ts:525","pc":[2739,2740,2741]},{"teal":2128,"source":"contracts/TownHall.algo.ts:525","pc":[2742,2743,2744]},{"teal":2129,"source":"contracts/TownHall.algo.ts:525","pc":[2745]},{"teal":2130,"source":"contracts/TownHall.algo.ts:525","pc":[2746]},{"teal":2134,"source":"contracts/TownHall.algo.ts:525","pc":[2747,2748,2749]},{"teal":2137,"source":"contracts/TownHall.algo.ts:525","pc":[2750]},{"teal":2138,"source":"contracts/TownHall.algo.ts:525","pc":[2751,2752]},{"teal":2145,"source":"contracts/TownHall.algo.ts:527","pc":[2753]},{"teal":2146,"source":"contracts/TownHall.algo.ts:527","pc":[2754]},{"teal":2147,"source":"contracts/Constants.ts:17","pc":[2755,2756]},{"teal":2148,"source":"contracts/TownHall.algo.ts:527","pc":[2757]},{"teal":2151,"source":"contracts/TownHall.algo.ts:526","errorMessage":"Invalid method call: Game is not in Day Stage Reveal state.","pc":[2758]},{"teal":2155,"source":"contracts/TownHall.algo.ts:531","pc":[2759]},{"teal":2156,"source":"contracts/TownHall.algo.ts:531","pc":[2760]},{"teal":2157,"source":"contracts/TownHall.algo.ts:531","pc":[2761,2762]},{"teal":2158,"source":"contracts/TownHall.algo.ts:531","pc":[2763]},{"teal":2161,"source":"contracts/TownHall.algo.ts:531","errorMessage":"Error state: Other player called method.","pc":[2764]},{"teal":2165,"source":"contracts/TownHall.algo.ts:534","pc":[2765,2766]},{"teal":2166,"source":"contracts/TownHall.algo.ts:534","pc":[2767,2768]},{"teal":2167,"source":"contracts/TownHall.algo.ts:534","pc":[2769,2770]},{"teal":2168,"source":"contracts/TownHall.algo.ts:534","pc":[2771,2772]},{"teal":2172,"source":"contracts/TownHall.algo.ts:535","pc":[2773,2774]},{"teal":2173,"source":"contracts/TownHall.algo.ts:535","pc":[2775,2776,2777]},{"teal":2174,"source":"contracts/TownHall.algo.ts:535","pc":[2778,2779]},{"teal":2178,"source":"contracts/TownHall.algo.ts:536","pc":[2780,2781]},{"teal":2179,"source":"contracts/TownHall.algo.ts:536","pc":[2782,2783]},{"teal":2180,"source":"contracts/TownHall.algo.ts:536","pc":[2784,2785]},{"teal":2181,"source":"contracts/TownHall.algo.ts:536","pc":[2786,2787]},{"teal":2186,"source":"contracts/TownHall.algo.ts:538","pc":[2788,2789]},{"teal":2187,"source":"contracts/TownHall.algo.ts:538","pc":[2790,2791]},{"teal":2188,"source":"contracts/TownHall.algo.ts:538","pc":[2792]},{"teal":2189,"source":"contracts/TownHall.algo.ts:538","pc":[2793]},{"teal":2190,"source":"contracts/TownHall.algo.ts:538","pc":[2794,2795,2796]},{"teal":2195,"source":"contracts/TownHall.algo.ts:541","pc":[2797,2798]},{"teal":2196,"source":"contracts/TownHall.algo.ts:541","pc":[2799,2800]},{"teal":2197,"source":"contracts/TownHall.algo.ts:541","pc":[2801]},{"teal":2201,"source":"contracts/TownHall.algo.ts:542","pc":[2802]},{"teal":2202,"source":"contracts/Constants.ts:24","pc":[2803,2804]},{"teal":2203,"source":"contracts/TownHall.algo.ts:542","pc":[2805]},{"teal":2207,"source":"contracts/TownHall.algo.ts:543","pc":[2806]},{"teal":2213,"source":"contracts/TownHall.algo.ts:546","pc":[2807,2808]},{"teal":2214,"source":"contracts/TownHall.algo.ts:546","pc":[2809,2810]},{"teal":2215,"source":"contracts/TownHall.algo.ts:546","pc":[2811]},{"teal":2216,"source":"contracts/TownHall.algo.ts:546","pc":[2812]},{"teal":2217,"source":"contracts/TownHall.algo.ts:546","pc":[2813,2814,2815]},{"teal":2222,"source":"contracts/TownHall.algo.ts:548","pc":[2816]},{"teal":2223,"source":"contracts/Constants.ts:18","pc":[2817,2818]},{"teal":2224,"source":"contracts/TownHall.algo.ts:548","pc":[2819]},{"teal":2228,"source":"contracts/TownHall.algo.ts:549","pc":[2820,2821]},{"teal":2229,"source":"contracts/TownHall.algo.ts:549","pc":[2822,2823]},{"teal":2230,"source":"contracts/TownHall.algo.ts:549","pc":[2824]},{"teal":2235,"source":"contracts/TownHall.algo.ts:552","pc":[2825]},{"teal":2236,"source":"contracts/TownHall.algo.ts:552","pc":[2826,2827]},{"teal":2237,"source":"contracts/TownHall.algo.ts:552","pc":[2828]},{"teal":2241,"source":"contracts/TownHall.algo.ts:554","pc":[2829]},{"teal":2242,"source":"contracts/Constants.ts:18","pc":[2830,2831]},{"teal":2243,"source":"contracts/TownHall.algo.ts:554","pc":[2832]},{"teal":2244,"source":"contracts/TownHall.algo.ts:525","pc":[2833]},{"teal":2249,"source":"contracts/TownHall.algo.ts:557","pc":[2834,2835,2836]},{"teal":2250,"source":"contracts/TownHall.algo.ts:557","pc":[2837,2838,2839]},{"teal":2253,"source":"contracts/TownHall.algo.ts:557","pc":[2840,2841,2842]},{"teal":2254,"source":"contracts/TownHall.algo.ts:557","pc":[2843]},{"teal":2255,"source":"contracts/TownHall.algo.ts:557","pc":[2844]},{"teal":2259,"source":"contracts/TownHall.algo.ts:557","pc":[2845,2846,2847]},{"teal":2266,"source":"contracts/TownHall.algo.ts:559","pc":[2848]},{"teal":2267,"source":"contracts/TownHall.algo.ts:559","pc":[2849]},{"teal":2268,"source":"contracts/Constants.ts:18","pc":[2850,2851]},{"teal":2269,"source":"contracts/TownHall.algo.ts:559","pc":[2852]},{"teal":2272,"source":"contracts/TownHall.algo.ts:558","errorMessage":"Invalid method call: Game is not in Night Stage Maffia Commit state.","pc":[2853]},{"teal":2276,"source":"contracts/TownHall.algo.ts:563","pc":[2854,2855]},{"teal":2277,"source":"contracts/TownHall.algo.ts:563","pc":[2856,2857]},{"teal":2278,"source":"contracts/TownHall.algo.ts:563","pc":[2858]},{"teal":2279,"source":"contracts/TownHall.algo.ts:563","pc":[2859]},{"teal":2282,"source":"contracts/TownHall.algo.ts:563","errorMessage":"Error state: Non-mafia player called method.","pc":[2860]},{"teal":2286,"source":"contracts/TownHall.algo.ts:565","pc":[2861,2862]},{"teal":2287,"source":"contracts/TownHall.algo.ts:565","pc":[2863,2864]},{"teal":2288,"source":"contracts/TownHall.algo.ts:565","pc":[2865]},{"teal":2293,"source":"contracts/TownHall.algo.ts:567","pc":[2866,2867]},{"teal":2294,"source":"contracts/TownHall.algo.ts:567","pc":[2868]},{"teal":2295,"source":"contracts/TownHall.algo.ts:567","pc":[2869,2870]},{"teal":2296,"source":"contracts/TownHall.algo.ts:567","pc":[2871]},{"teal":2297,"source":"contracts/TownHall.algo.ts:567","pc":[2872,2873,2874]},{"teal":2302,"source":"contracts/TownHall.algo.ts:569","pc":[2875]},{"teal":2303,"source":"contracts/Constants.ts:20","pc":[2876,2877]},{"teal":2304,"source":"contracts/TownHall.algo.ts:569","pc":[2878]},{"teal":2305,"source":"contracts/TownHall.algo.ts:567","pc":[2879,2880,2881]},{"teal":2310,"source":"contracts/TownHall.algo.ts:571","pc":[2882]},{"teal":2311,"source":"contracts/Constants.ts:19","pc":[2883]},{"teal":2312,"source":"contracts/TownHall.algo.ts:571","pc":[2884]},{"teal":2315,"source":"contracts/TownHall.algo.ts:557","pc":[2885]},{"teal":2320,"source":"contracts/TownHall.algo.ts:575","pc":[2886,2887,2888]},{"teal":2321,"source":"contracts/TownHall.algo.ts:575","pc":[2889,2890,2891]},{"teal":2324,"source":"contracts/TownHall.algo.ts:575","pc":[2892,2893,2894]},{"teal":2325,"source":"contracts/TownHall.algo.ts:575","pc":[2895]},{"teal":2326,"source":"contracts/TownHall.algo.ts:575","pc":[2896]},{"teal":2330,"source":"contracts/TownHall.algo.ts:575","pc":[2897,2898,2899]},{"teal":2337,"source":"contracts/TownHall.algo.ts:577","pc":[2900]},{"teal":2338,"source":"contracts/TownHall.algo.ts:577","pc":[2901]},{"teal":2339,"source":"contracts/Constants.ts:19","pc":[2902]},{"teal":2340,"source":"contracts/TownHall.algo.ts:577","pc":[2903]},{"teal":2343,"source":"contracts/TownHall.algo.ts:576","errorMessage":"Invalid method call: Game is not in Night Stage Doctor Commit state.","pc":[2904]},{"teal":2347,"source":"contracts/TownHall.algo.ts:581","pc":[2905,2906]},{"teal":2348,"source":"contracts/TownHall.algo.ts:581","pc":[2907,2908]},{"teal":2349,"source":"contracts/TownHall.algo.ts:581","pc":[2909]},{"teal":2350,"source":"contracts/TownHall.algo.ts:581","pc":[2910]},{"teal":2353,"source":"contracts/TownHall.algo.ts:581","errorMessage":"Error state: Non-doctor player called method.","pc":[2911]},{"teal":2360,"source":"contracts/TownHall.algo.ts:583","pc":[2912,2913]},{"teal":2361,"source":"contracts/TownHall.algo.ts:583","pc":[2914]},{"teal":2362,"source":"contracts/TownHall.algo.ts:583","pc":[2915,2916]},{"teal":2363,"source":"contracts/TownHall.algo.ts:583","pc":[2917]},{"teal":2366,"source":"contracts/TownHall.algo.ts:582","errorMessage":"Error state: Doctor is dead, should not have entered this state.","pc":[2918]},{"teal":2370,"source":"contracts/TownHall.algo.ts:587","pc":[2919,2920]},{"teal":2371,"source":"contracts/TownHall.algo.ts:587","pc":[2921,2922]},{"teal":2372,"source":"contracts/TownHall.algo.ts:587","pc":[2923]},{"teal":2376,"source":"contracts/TownHall.algo.ts:589","pc":[2924]},{"teal":2377,"source":"contracts/Constants.ts:20","pc":[2925,2926]},{"teal":2378,"source":"contracts/TownHall.algo.ts:589","pc":[2927]},{"teal":2379,"source":"contracts/TownHall.algo.ts:575","pc":[2928]},{"teal":2384,"source":"contracts/TownHall.algo.ts:592","pc":[2929,2930,2931]},{"teal":2385,"source":"contracts/TownHall.algo.ts:592","pc":[2932]},{"teal":2386,"source":"contracts/TownHall.algo.ts:592","pc":[2933]},{"teal":2387,"source":"contracts/TownHall.algo.ts:592","pc":[2934,2935]},{"teal":2388,"source":"contracts/TownHall.algo.ts:592","pc":[2936]},{"teal":2391,"source":"contracts/TownHall.algo.ts:592","errorMessage":"argument 0 (blinder) for dawnStageMafiaReveal must be a byte[32]","pc":[2937]},{"teal":2394,"source":"contracts/TownHall.algo.ts:592","pc":[2938,2939,2940]},{"teal":2395,"source":"contracts/TownHall.algo.ts:592","pc":[2941]},{"teal":2396,"source":"contracts/TownHall.algo.ts:592","pc":[2942]},{"teal":2397,"source":"contracts/TownHall.algo.ts:592","pc":[2943,2944]},{"teal":2398,"source":"contracts/TownHall.algo.ts:592","pc":[2945]},{"teal":2401,"source":"contracts/TownHall.algo.ts:592","errorMessage":"argument 1 (victimAim) for dawnStageMafiaReveal must be a address","pc":[2946]},{"teal":2404,"source":"contracts/TownHall.algo.ts:592","pc":[2947,2948,2949]},{"teal":2405,"source":"contracts/TownHall.algo.ts:592","pc":[2950]},{"teal":2406,"source":"contracts/TownHall.algo.ts:592","pc":[2951]},{"teal":2410,"source":"contracts/TownHall.algo.ts:592","pc":[2952,2953,2954]},{"teal":2413,"source":"contracts/TownHall.algo.ts:592","pc":[2955]},{"teal":2420,"source":"contracts/TownHall.algo.ts:594","pc":[2956]},{"teal":2421,"source":"contracts/TownHall.algo.ts:594","pc":[2957]},{"teal":2422,"source":"contracts/Constants.ts:20","pc":[2958,2959]},{"teal":2423,"source":"contracts/TownHall.algo.ts:594","pc":[2960]},{"teal":2426,"source":"contracts/TownHall.algo.ts:593","errorMessage":"Invalid method call: Game is not in Dawn Stage Maffia Reveal state.","pc":[2961]},{"teal":2430,"source":"contracts/TownHall.algo.ts:598","pc":[2962,2963]},{"teal":2431,"source":"contracts/TownHall.algo.ts:598","pc":[2964,2965]},{"teal":2432,"source":"contracts/TownHall.algo.ts:598","pc":[2966]},{"teal":2433,"source":"contracts/TownHall.algo.ts:598","pc":[2967]},{"teal":2436,"source":"contracts/TownHall.algo.ts:598","errorMessage":"Error state: Non-mafia player called method.","pc":[2968]},{"teal":2440,"source":"contracts/TownHall.algo.ts:600","pc":[2969,2970]},{"teal":2441,"source":"contracts/TownHall.algo.ts:600","pc":[2971,2972]},{"teal":2442,"source":"contracts/TownHall.algo.ts:600","pc":[2973]},{"teal":2445,"source":"contracts/TownHall.algo.ts:600","errorMessage":"Error state: Victim must be a valid address.","pc":[2974]},{"teal":2449,"source":"contracts/TownHall.algo.ts:604","pc":[2975,2976]},{"teal":2450,"source":"contracts/TownHall.algo.ts:604","pc":[2977,2978]},{"teal":2451,"source":"contracts/TownHall.algo.ts:604","pc":[2979]},{"teal":2452,"source":"contracts/TownHall.algo.ts:604","pc":[2980]},{"teal":2453,"source":"contracts/TownHall.algo.ts:604","pc":[2981,2982]},{"teal":2460,"source":"contracts/TownHall.algo.ts:607","pc":[2983,2984]},{"teal":2461,"source":"contracts/TownHall.algo.ts:607","pc":[2985,2986]},{"teal":2462,"source":"contracts/TownHall.algo.ts:607","pc":[2987]},{"teal":2463,"source":"contracts/TownHall.algo.ts:607","pc":[2988]},{"teal":2466,"source":"contracts/TownHall.algo.ts:606","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[2989]},{"teal":2471,"source":"contracts/TownHall.algo.ts:611","pc":[2990,2991]},{"teal":2472,"source":"contracts/TownHall.algo.ts:611","pc":[2992,2993]},{"teal":2473,"source":"contracts/TownHall.algo.ts:611","pc":[2994]},{"teal":2474,"source":"contracts/TownHall.algo.ts:611","pc":[2995]},{"teal":2475,"source":"contracts/TownHall.algo.ts:611","pc":[2996,2997,2998]},{"teal":2480,"source":"contracts/TownHall.algo.ts:612","pc":[2999]},{"teal":2481,"source":"contracts/TownHall.algo.ts:612","pc":[3000,3001]},{"teal":2482,"source":"contracts/TownHall.algo.ts:612","pc":[3002]},{"teal":2483,"source":"contracts/TownHall.algo.ts:612","pc":[3003]},{"teal":2484,"source":"contracts/TownHall.algo.ts:611","pc":[3004,3005,3006]},{"teal":2489,"source":"contracts/TownHall.algo.ts:613","pc":[3007,3008]},{"teal":2490,"source":"contracts/TownHall.algo.ts:613","pc":[3009,3010]},{"teal":2491,"source":"contracts/TownHall.algo.ts:613","pc":[3011]},{"teal":2492,"source":"contracts/TownHall.algo.ts:613","pc":[3012]},{"teal":2493,"source":"contracts/TownHall.algo.ts:613","pc":[3013,3014,3015]},{"teal":2498,"source":"contracts/TownHall.algo.ts:614","pc":[3016]},{"teal":2499,"source":"contracts/TownHall.algo.ts:614","pc":[3017,3018]},{"teal":2500,"source":"contracts/TownHall.algo.ts:614","pc":[3019]},{"teal":2501,"source":"contracts/TownHall.algo.ts:614","pc":[3020]},{"teal":2502,"source":"contracts/TownHall.algo.ts:613","pc":[3021,3022,3023]},{"teal":2507,"source":"contracts/TownHall.algo.ts:615","pc":[3024,3025]},{"teal":2508,"source":"contracts/TownHall.algo.ts:615","pc":[3026,3027]},{"teal":2509,"source":"contracts/TownHall.algo.ts:615","pc":[3028]},{"teal":2510,"source":"contracts/TownHall.algo.ts:615","pc":[3029]},{"teal":2511,"source":"contracts/TownHall.algo.ts:615","pc":[3030,3031,3032]},{"teal":2516,"source":"contracts/TownHall.algo.ts:616","pc":[3033]},{"teal":2517,"source":"contracts/TownHall.algo.ts:616","pc":[3034,3035]},{"teal":2518,"source":"contracts/TownHall.algo.ts:616","pc":[3036]},{"teal":2519,"source":"contracts/TownHall.algo.ts:616","pc":[3037]},{"teal":2520,"source":"contracts/TownHall.algo.ts:615","pc":[3038,3039,3040]},{"teal":2525,"source":"contracts/TownHall.algo.ts:617","pc":[3041,3042]},{"teal":2526,"source":"contracts/TownHall.algo.ts:617","pc":[3043,3044]},{"teal":2527,"source":"contracts/TownHall.algo.ts:617","pc":[3045]},{"teal":2528,"source":"contracts/TownHall.algo.ts:617","pc":[3046]},{"teal":2529,"source":"contracts/TownHall.algo.ts:617","pc":[3047,3048,3049]},{"teal":2534,"source":"contracts/TownHall.algo.ts:618","pc":[3050]},{"teal":2535,"source":"contracts/TownHall.algo.ts:618","pc":[3051,3052]},{"teal":2536,"source":"contracts/TownHall.algo.ts:618","pc":[3053]},{"teal":2537,"source":"contracts/TownHall.algo.ts:618","pc":[3054]},{"teal":2538,"source":"contracts/TownHall.algo.ts:617","pc":[3055,3056,3057]},{"teal":2543,"source":"contracts/TownHall.algo.ts:619","pc":[3058,3059]},{"teal":2544,"source":"contracts/TownHall.algo.ts:619","pc":[3060,3061]},{"teal":2545,"source":"contracts/TownHall.algo.ts:619","pc":[3062]},{"teal":2546,"source":"contracts/TownHall.algo.ts:619","pc":[3063]},{"teal":2547,"source":"contracts/TownHall.algo.ts:619","pc":[3064,3065,3066]},{"teal":2552,"source":"contracts/TownHall.algo.ts:620","pc":[3067]},{"teal":2553,"source":"contracts/TownHall.algo.ts:620","pc":[3068,3069]},{"teal":2554,"source":"contracts/TownHall.algo.ts:620","pc":[3070]},{"teal":2555,"source":"contracts/TownHall.algo.ts:620","pc":[3071]},{"teal":2556,"source":"contracts/TownHall.algo.ts:619","pc":[3072,3073,3074]},{"teal":2561,"source":"contracts/TownHall.algo.ts:621","pc":[3075,3076]},{"teal":2562,"source":"contracts/TownHall.algo.ts:621","pc":[3077,3078]},{"teal":2563,"source":"contracts/TownHall.algo.ts:621","pc":[3079]},{"teal":2564,"source":"contracts/TownHall.algo.ts:621","pc":[3080]},{"teal":2565,"source":"contracts/TownHall.algo.ts:621","pc":[3081,3082,3083]},{"teal":2570,"source":"contracts/TownHall.algo.ts:622","pc":[3084]},{"teal":2571,"source":"contracts/TownHall.algo.ts:622","pc":[3085,3086]},{"teal":2572,"source":"contracts/TownHall.algo.ts:622","pc":[3087]},{"teal":2573,"source":"contracts/TownHall.algo.ts:622","pc":[3088]},{"teal":2574,"source":"contracts/TownHall.algo.ts:621","pc":[3089,3090,3091]},{"teal":2579,"source":"contracts/TownHall.algo.ts:624","pc":[3092]},{"teal":2580,"source":"contracts/TownHall.algo.ts:624","pc":[3093,3094]},{"teal":2581,"source":"contracts/TownHall.algo.ts:624","pc":[3095]},{"teal":2586,"source":"contracts/TownHall.algo.ts:630","pc":[3096]},{"teal":2587,"source":"contracts/Constants.ts:21","pc":[3097,3098]},{"teal":2588,"source":"contracts/TownHall.algo.ts:630","pc":[3099]},{"teal":2589,"source":"contracts/TownHall.algo.ts:592","pc":[3100]},{"teal":2594,"source":"contracts/TownHall.algo.ts:633","pc":[3101,3102,3103]},{"teal":2595,"source":"contracts/TownHall.algo.ts:633","pc":[3104]},{"teal":2596,"source":"contracts/TownHall.algo.ts:633","pc":[3105]},{"teal":2597,"source":"contracts/TownHall.algo.ts:633","pc":[3106,3107]},{"teal":2598,"source":"contracts/TownHall.algo.ts:633","pc":[3108]},{"teal":2601,"source":"contracts/TownHall.algo.ts:633","errorMessage":"argument 0 (blinder) for dawnStageDoctorReveal must be a byte[32]","pc":[3109]},{"teal":2604,"source":"contracts/TownHall.algo.ts:633","pc":[3110,3111,3112]},{"teal":2605,"source":"contracts/TownHall.algo.ts:633","pc":[3113]},{"teal":2606,"source":"contracts/TownHall.algo.ts:633","pc":[3114]},{"teal":2607,"source":"contracts/TownHall.algo.ts:633","pc":[3115,3116]},{"teal":2608,"source":"contracts/TownHall.algo.ts:633","pc":[3117]},{"teal":2611,"source":"contracts/TownHall.algo.ts:633","errorMessage":"argument 1 (patientAim) for dawnStageDoctorReveal must be a address","pc":[3118]},{"teal":2614,"source":"contracts/TownHall.algo.ts:633","pc":[3119,3120,3121]},{"teal":2615,"source":"contracts/TownHall.algo.ts:633","pc":[3122]},{"teal":2616,"source":"contracts/TownHall.algo.ts:633","pc":[3123]},{"teal":2620,"source":"contracts/TownHall.algo.ts:633","pc":[3124,3125,3126]},{"teal":2623,"source":"contracts/TownHall.algo.ts:633","pc":[3127]},{"teal":2630,"source":"contracts/TownHall.algo.ts:635","pc":[3128]},{"teal":2631,"source":"contracts/TownHall.algo.ts:635","pc":[3129]},{"teal":2632,"source":"contracts/Constants.ts:21","pc":[3130,3131]},{"teal":2633,"source":"contracts/TownHall.algo.ts:635","pc":[3132]},{"teal":2636,"source":"contracts/TownHall.algo.ts:634","errorMessage":"Invalid method call: Game is not in Dawn Stage Doctor Reveal state.","pc":[3133]},{"teal":2640,"source":"contracts/TownHall.algo.ts:639","pc":[3134,3135]},{"teal":2641,"source":"contracts/TownHall.algo.ts:639","pc":[3136,3137]},{"teal":2642,"source":"contracts/TownHall.algo.ts:639","pc":[3138]},{"teal":2643,"source":"contracts/TownHall.algo.ts:639","pc":[3139]},{"teal":2646,"source":"contracts/TownHall.algo.ts:639","errorMessage":"Error state: Non-doctor player called method.","pc":[3140]},{"teal":2650,"source":"contracts/TownHall.algo.ts:641","pc":[3141,3142]},{"teal":2651,"source":"contracts/TownHall.algo.ts:641","pc":[3143]},{"teal":2652,"source":"contracts/TownHall.algo.ts:641","pc":[3144,3145]},{"teal":2653,"source":"contracts/TownHall.algo.ts:641","pc":[3146]},{"teal":2656,"source":"contracts/TownHall.algo.ts:641","errorMessage":"Error state: Doctor has already committed to a patient.","pc":[3147]},{"teal":2660,"source":"contracts/TownHall.algo.ts:643","pc":[3148,3149]},{"teal":2661,"source":"contracts/TownHall.algo.ts:643","pc":[3150,3151]},{"teal":2662,"source":"contracts/TownHall.algo.ts:643","pc":[3152]},{"teal":2665,"source":"contracts/TownHall.algo.ts:643","errorMessage":"Error state: Patient must be a valid address.","pc":[3153]},{"teal":2669,"source":"contracts/TownHall.algo.ts:647","pc":[3154,3155]},{"teal":2670,"source":"contracts/TownHall.algo.ts:647","pc":[3156,3157]},{"teal":2671,"source":"contracts/TownHall.algo.ts:647","pc":[3158]},{"teal":2672,"source":"contracts/TownHall.algo.ts:647","pc":[3159]},{"teal":2673,"source":"contracts/TownHall.algo.ts:647","pc":[3160,3161]},{"teal":2680,"source":"contracts/TownHall.algo.ts:650","pc":[3162,3163]},{"teal":2681,"source":"contracts/TownHall.algo.ts:650","pc":[3164,3165]},{"teal":2682,"source":"contracts/TownHall.algo.ts:650","pc":[3166]},{"teal":2683,"source":"contracts/TownHall.algo.ts:650","pc":[3167]},{"teal":2686,"source":"contracts/TownHall.algo.ts:649","errorMessage":"Error state: Provided address + blinder does NOT match commitment.","pc":[3168]},{"teal":2691,"source":"contracts/TownHall.algo.ts:654","pc":[3169,3170]},{"teal":2692,"source":"contracts/TownHall.algo.ts:654","pc":[3171,3172]},{"teal":2693,"source":"contracts/TownHall.algo.ts:654","pc":[3173]},{"teal":2694,"source":"contracts/TownHall.algo.ts:654","pc":[3174]},{"teal":2695,"source":"contracts/TownHall.algo.ts:654","pc":[3175,3176,3177]},{"teal":2700,"source":"contracts/TownHall.algo.ts:655","pc":[3178,3179]},{"teal":2701,"source":"contracts/TownHall.algo.ts:655","pc":[3180,3181]},{"teal":2702,"source":"contracts/TownHall.algo.ts:655","pc":[3182]},{"teal":2703,"source":"contracts/TownHall.algo.ts:655","pc":[3183]},{"teal":2704,"source":"contracts/TownHall.algo.ts:654","pc":[3184,3185,3186]},{"teal":2709,"source":"contracts/TownHall.algo.ts:656","pc":[3187,3188]},{"teal":2710,"source":"contracts/TownHall.algo.ts:656","pc":[3189,3190]},{"teal":2711,"source":"contracts/TownHall.algo.ts:656","pc":[3191]},{"teal":2712,"source":"contracts/TownHall.algo.ts:656","pc":[3192]},{"teal":2713,"source":"contracts/TownHall.algo.ts:656","pc":[3193,3194,3195]},{"teal":2718,"source":"contracts/TownHall.algo.ts:657","pc":[3196,3197]},{"teal":2719,"source":"contracts/TownHall.algo.ts:657","pc":[3198,3199]},{"teal":2720,"source":"contracts/TownHall.algo.ts:657","pc":[3200]},{"teal":2721,"source":"contracts/TownHall.algo.ts:657","pc":[3201]},{"teal":2722,"source":"contracts/TownHall.algo.ts:656","pc":[3202,3203,3204]},{"teal":2727,"source":"contracts/TownHall.algo.ts:658","pc":[3205,3206]},{"teal":2728,"source":"contracts/TownHall.algo.ts:658","pc":[3207,3208]},{"teal":2729,"source":"contracts/TownHall.algo.ts:658","pc":[3209]},{"teal":2730,"source":"contracts/TownHall.algo.ts:658","pc":[3210]},{"teal":2731,"source":"contracts/TownHall.algo.ts:658","pc":[3211,3212,3213]},{"teal":2736,"source":"contracts/TownHall.algo.ts:659","pc":[3214,3215]},{"teal":2737,"source":"contracts/TownHall.algo.ts:659","pc":[3216,3217]},{"teal":2738,"source":"contracts/TownHall.algo.ts:659","pc":[3218]},{"teal":2739,"source":"contracts/TownHall.algo.ts:659","pc":[3219]},{"teal":2740,"source":"contracts/TownHall.algo.ts:658","pc":[3220,3221,3222]},{"teal":2745,"source":"contracts/TownHall.algo.ts:660","pc":[3223,3224]},{"teal":2746,"source":"contracts/TownHall.algo.ts:660","pc":[3225,3226]},{"teal":2747,"source":"contracts/TownHall.algo.ts:660","pc":[3227]},{"teal":2748,"source":"contracts/TownHall.algo.ts:660","pc":[3228]},{"teal":2749,"source":"contracts/TownHall.algo.ts:660","pc":[3229,3230,3231]},{"teal":2754,"source":"contracts/TownHall.algo.ts:661","pc":[3232,3233]},{"teal":2755,"source":"contracts/TownHall.algo.ts:661","pc":[3234,3235]},{"teal":2756,"source":"contracts/TownHall.algo.ts:661","pc":[3236]},{"teal":2757,"source":"contracts/TownHall.algo.ts:661","pc":[3237]},{"teal":2758,"source":"contracts/TownHall.algo.ts:660","pc":[3238,3239,3240]},{"teal":2763,"source":"contracts/TownHall.algo.ts:662","pc":[3241,3242]},{"teal":2764,"source":"contracts/TownHall.algo.ts:662","pc":[3243,3244]},{"teal":2765,"source":"contracts/TownHall.algo.ts:662","pc":[3245]},{"teal":2766,"source":"contracts/TownHall.algo.ts:662","pc":[3246]},{"teal":2767,"source":"contracts/TownHall.algo.ts:662","pc":[3247,3248,3249]},{"teal":2772,"source":"contracts/TownHall.algo.ts:663","pc":[3250,3251]},{"teal":2773,"source":"contracts/TownHall.algo.ts:663","pc":[3252,3253]},{"teal":2774,"source":"contracts/TownHall.algo.ts:663","pc":[3254]},{"teal":2775,"source":"contracts/TownHall.algo.ts:663","pc":[3255]},{"teal":2776,"source":"contracts/TownHall.algo.ts:662","pc":[3256,3257,3258]},{"teal":2781,"source":"contracts/TownHall.algo.ts:664","pc":[3259,3260]},{"teal":2782,"source":"contracts/TownHall.algo.ts:664","pc":[3261,3262]},{"teal":2783,"source":"contracts/TownHall.algo.ts:664","pc":[3263]},{"teal":2784,"source":"contracts/TownHall.algo.ts:664","pc":[3264]},{"teal":2785,"source":"contracts/TownHall.algo.ts:664","pc":[3265,3266,3267]},{"teal":2790,"source":"contracts/TownHall.algo.ts:665","pc":[3268,3269]},{"teal":2791,"source":"contracts/TownHall.algo.ts:665","pc":[3270,3271]},{"teal":2792,"source":"contracts/TownHall.algo.ts:665","pc":[3272]},{"teal":2793,"source":"contracts/TownHall.algo.ts:665","pc":[3273]},{"teal":2794,"source":"contracts/TownHall.algo.ts:664","pc":[3274,3275,3276]},{"teal":2799,"source":"contracts/TownHall.algo.ts:667","pc":[3277,3278]},{"teal":2800,"source":"contracts/TownHall.algo.ts:667","pc":[3279,3280]},{"teal":2801,"source":"contracts/TownHall.algo.ts:667","pc":[3281]},{"teal":2806,"source":"contracts/TownHall.algo.ts:673","pc":[3282]},{"teal":2807,"source":"contracts/Constants.ts:22","pc":[3283,3284]},{"teal":2808,"source":"contracts/TownHall.algo.ts:673","pc":[3285]},{"teal":2809,"source":"contracts/TownHall.algo.ts:633","pc":[3286]},{"teal":2814,"source":"contracts/TownHall.algo.ts:676","pc":[3287,3288,3289]},{"teal":2815,"source":"contracts/TownHall.algo.ts:676","pc":[3290]},{"teal":2816,"source":"contracts/TownHall.algo.ts:676","pc":[3291]},{"teal":2820,"source":"contracts/TownHall.algo.ts:676","pc":[3292,3293,3294]},{"teal":2827,"source":"contracts/TownHall.algo.ts:678","pc":[3295]},{"teal":2828,"source":"contracts/TownHall.algo.ts:678","pc":[3296]},{"teal":2829,"source":"contracts/Constants.ts:22","pc":[3297,3298]},{"teal":2830,"source":"contracts/TownHall.algo.ts:678","pc":[3299]},{"teal":2833,"source":"contracts/TownHall.algo.ts:677","errorMessage":"Invalid method call: Game is not in Dawn Stage DeadOrSaved? state.","pc":[3300]},{"teal":2838,"source":"contracts/TownHall.algo.ts:682","pc":[3301]},{"teal":2839,"source":"contracts/TownHall.algo.ts:682","pc":[3302]},{"teal":2840,"source":"contracts/TownHall.algo.ts:682","pc":[3303,3304]},{"teal":2841,"source":"contracts/TownHall.algo.ts:682","pc":[3305]},{"teal":2842,"source":"contracts/TownHall.algo.ts:682","pc":[3306]},{"teal":2843,"source":"contracts/TownHall.algo.ts:682","pc":[3307,3308,3309]},{"teal":2844,"source":"contracts/TownHall.algo.ts:682","pc":[3310]},{"teal":2845,"source":"contracts/TownHall.algo.ts:682","pc":[3311]},{"teal":2846,"source":"contracts/TownHall.algo.ts:682","pc":[3312,3313]},{"teal":2847,"source":"contracts/TownHall.algo.ts:682","pc":[3314]},{"teal":2848,"source":"contracts/TownHall.algo.ts:682","pc":[3315]},{"teal":2849,"source":"contracts/TownHall.algo.ts:682","pc":[3316]},{"teal":2852,"source":"contracts/TownHall.algo.ts:682","pc":[3317,3318,3319]},{"teal":2857,"source":"contracts/TownHall.algo.ts:687","pc":[3320]},{"teal":2858,"source":"contracts/TownHall.algo.ts:687","pc":[3321,3322]},{"teal":2859,"source":"contracts/TownHall.algo.ts:687","pc":[3323]},{"teal":2863,"source":"contracts/TownHall.algo.ts:688","pc":[3324,3325]},{"teal":2864,"source":"contracts/TownHall.algo.ts:688","pc":[3326,3327]},{"teal":2865,"source":"contracts/TownHall.algo.ts:688","pc":[3328]},{"teal":2869,"source":"contracts/TownHall.algo.ts:689","pc":[3329]},{"teal":2870,"source":"contracts/Constants.ts:15","pc":[3330]},{"teal":2871,"source":"contracts/TownHall.algo.ts:689","pc":[3331]},{"teal":2875,"source":"contracts/TownHall.algo.ts:690","pc":[3332]},{"teal":2881,"source":"contracts/TownHall.algo.ts:695","pc":[3333]},{"teal":2882,"source":"contracts/TownHall.algo.ts:695","pc":[3334]},{"teal":2883,"source":"contracts/TownHall.algo.ts:695","pc":[3335,3336]},{"teal":2884,"source":"contracts/TownHall.algo.ts:695","pc":[3337]},{"teal":2885,"source":"contracts/TownHall.algo.ts:695","pc":[3338]},{"teal":2886,"source":"contracts/TownHall.algo.ts:695","pc":[3339,3340,3341]},{"teal":2891,"source":"contracts/TownHall.algo.ts:696","pc":[3342]},{"teal":2892,"source":"contracts/TownHall.algo.ts:696","pc":[3343,3344]},{"teal":2893,"source":"contracts/TownHall.algo.ts:696","pc":[3345]},{"teal":2894,"source":"contracts/TownHall.algo.ts:696","pc":[3346]},{"teal":2898,"source":"contracts/TownHall.algo.ts:697","pc":[3347,3348]},{"teal":2899,"source":"contracts/TownHall.algo.ts:697","pc":[3349,3350]},{"teal":2900,"source":"contracts/TownHall.algo.ts:697","pc":[3351]},{"teal":2901,"source":"contracts/TownHall.algo.ts:695","pc":[3352,3353,3354]},{"teal":2906,"source":"contracts/TownHall.algo.ts:698","pc":[3355]},{"teal":2907,"source":"contracts/TownHall.algo.ts:698","pc":[3356]},{"teal":2908,"source":"contracts/TownHall.algo.ts:698","pc":[3357,3358]},{"teal":2909,"source":"contracts/TownHall.algo.ts:698","pc":[3359]},{"teal":2910,"source":"contracts/TownHall.algo.ts:698","pc":[3360]},{"teal":2911,"source":"contracts/TownHall.algo.ts:698","pc":[3361,3362,3363]},{"teal":2916,"source":"contracts/TownHall.algo.ts:699","pc":[3364]},{"teal":2917,"source":"contracts/TownHall.algo.ts:699","pc":[3365,3366]},{"teal":2918,"source":"contracts/TownHall.algo.ts:699","pc":[3367]},{"teal":2919,"source":"contracts/TownHall.algo.ts:699","pc":[3368]},{"teal":2923,"source":"contracts/TownHall.algo.ts:700","pc":[3369,3370]},{"teal":2924,"source":"contracts/TownHall.algo.ts:700","pc":[3371,3372]},{"teal":2925,"source":"contracts/TownHall.algo.ts:700","pc":[3373]},{"teal":2926,"source":"contracts/TownHall.algo.ts:698","pc":[3374,3375,3376]},{"teal":2931,"source":"contracts/TownHall.algo.ts:701","pc":[3377]},{"teal":2932,"source":"contracts/TownHall.algo.ts:701","pc":[3378]},{"teal":2933,"source":"contracts/TownHall.algo.ts:701","pc":[3379,3380]},{"teal":2934,"source":"contracts/TownHall.algo.ts:701","pc":[3381]},{"teal":2935,"source":"contracts/TownHall.algo.ts:701","pc":[3382]},{"teal":2936,"source":"contracts/TownHall.algo.ts:701","pc":[3383,3384,3385]},{"teal":2941,"source":"contracts/TownHall.algo.ts:702","pc":[3386]},{"teal":2942,"source":"contracts/TownHall.algo.ts:702","pc":[3387,3388]},{"teal":2943,"source":"contracts/TownHall.algo.ts:702","pc":[3389]},{"teal":2944,"source":"contracts/TownHall.algo.ts:702","pc":[3390]},{"teal":2948,"source":"contracts/TownHall.algo.ts:703","pc":[3391,3392]},{"teal":2949,"source":"contracts/TownHall.algo.ts:703","pc":[3393,3394]},{"teal":2950,"source":"contracts/TownHall.algo.ts:703","pc":[3395]},{"teal":2951,"source":"contracts/TownHall.algo.ts:701","pc":[3396,3397,3398]},{"teal":2956,"source":"contracts/TownHall.algo.ts:704","pc":[3399]},{"teal":2957,"source":"contracts/TownHall.algo.ts:704","pc":[3400]},{"teal":2958,"source":"contracts/TownHall.algo.ts:704","pc":[3401,3402]},{"teal":2959,"source":"contracts/TownHall.algo.ts:704","pc":[3403]},{"teal":2960,"source":"contracts/TownHall.algo.ts:704","pc":[3404]},{"teal":2961,"source":"contracts/TownHall.algo.ts:704","pc":[3405,3406,3407]},{"teal":2966,"source":"contracts/TownHall.algo.ts:705","pc":[3408]},{"teal":2967,"source":"contracts/TownHall.algo.ts:705","pc":[3409,3410]},{"teal":2968,"source":"contracts/TownHall.algo.ts:705","pc":[3411]},{"teal":2969,"source":"contracts/TownHall.algo.ts:705","pc":[3412]},{"teal":2973,"source":"contracts/TownHall.algo.ts:706","pc":[3413,3414]},{"teal":2974,"source":"contracts/TownHall.algo.ts:706","pc":[3415,3416]},{"teal":2975,"source":"contracts/TownHall.algo.ts:706","pc":[3417]},{"teal":2976,"source":"contracts/TownHall.algo.ts:704","pc":[3418,3419,3420]},{"teal":2981,"source":"contracts/TownHall.algo.ts:707","pc":[3421]},{"teal":2982,"source":"contracts/TownHall.algo.ts:707","pc":[3422]},{"teal":2983,"source":"contracts/TownHall.algo.ts:707","pc":[3423,3424]},{"teal":2984,"source":"contracts/TownHall.algo.ts:707","pc":[3425]},{"teal":2985,"source":"contracts/TownHall.algo.ts:707","pc":[3426]},{"teal":2986,"source":"contracts/TownHall.algo.ts:707","pc":[3427,3428,3429]},{"teal":2991,"source":"contracts/TownHall.algo.ts:708","pc":[3430]},{"teal":2992,"source":"contracts/TownHall.algo.ts:708","pc":[3431,3432]},{"teal":2993,"source":"contracts/TownHall.algo.ts:708","pc":[3433]},{"teal":2994,"source":"contracts/TownHall.algo.ts:708","pc":[3434]},{"teal":2998,"source":"contracts/TownHall.algo.ts:709","pc":[3435,3436]},{"teal":2999,"source":"contracts/TownHall.algo.ts:709","pc":[3437,3438]},{"teal":3000,"source":"contracts/TownHall.algo.ts:709","pc":[3439]},{"teal":3001,"source":"contracts/TownHall.algo.ts:707","pc":[3440,3441,3442]},{"teal":3006,"source":"contracts/TownHall.algo.ts:710","pc":[3443]},{"teal":3007,"source":"contracts/TownHall.algo.ts:710","pc":[3444]},{"teal":3008,"source":"contracts/TownHall.algo.ts:710","pc":[3445,3446]},{"teal":3009,"source":"contracts/TownHall.algo.ts:710","pc":[3447]},{"teal":3010,"source":"contracts/TownHall.algo.ts:710","pc":[3448]},{"teal":3011,"source":"contracts/TownHall.algo.ts:710","pc":[3449,3450,3451]},{"teal":3016,"source":"contracts/TownHall.algo.ts:711","pc":[3452]},{"teal":3017,"source":"contracts/TownHall.algo.ts:711","pc":[3453,3454]},{"teal":3018,"source":"contracts/TownHall.algo.ts:711","pc":[3455]},{"teal":3019,"source":"contracts/TownHall.algo.ts:711","pc":[3456]},{"teal":3023,"source":"contracts/TownHall.algo.ts:712","pc":[3457,3458]},{"teal":3024,"source":"contracts/TownHall.algo.ts:712","pc":[3459,3460]},{"teal":3025,"source":"contracts/TownHall.algo.ts:712","pc":[3461]},{"teal":3026,"source":"contracts/TownHall.algo.ts:710","pc":[3462,3463,3464]},{"teal":3030,"source":"contracts/TownHall.algo.ts:714","errorMessage":"Error state: Victim must be a player! Should not have entered this state.","pc":[3465]},{"teal":3035,"source":"contracts/TownHall.algo.ts:717","pc":[3466,3467]},{"teal":3036,"source":"contracts/TownHall.algo.ts:717","pc":[3468]},{"teal":3037,"source":"contracts/TownHall.algo.ts:717","pc":[3469]},{"teal":3038,"source":"contracts/TownHall.algo.ts:717","pc":[3470]},{"teal":3039,"source":"contracts/TownHall.algo.ts:717","pc":[3471,3472]},{"teal":3040,"source":"contracts/TownHall.algo.ts:717","pc":[3473]},{"teal":3041,"source":"contracts/TownHall.algo.ts:717","pc":[3474]},{"teal":3045,"source":"contracts/TownHall.algo.ts:719","pc":[3475]},{"teal":3046,"source":"contracts/TownHall.algo.ts:719","pc":[3476,3477]},{"teal":3047,"source":"contracts/TownHall.algo.ts:719","pc":[3478]},{"teal":3051,"source":"contracts/TownHall.algo.ts:720","pc":[3479,3480]},{"teal":3052,"source":"contracts/TownHall.algo.ts:720","pc":[3481,3482]},{"teal":3053,"source":"contracts/TownHall.algo.ts:720","pc":[3483]},{"teal":3058,"source":"contracts/TownHall.algo.ts:722","pc":[3484,3485]},{"teal":3059,"source":"contracts/TownHall.algo.ts:722","pc":[3486]},{"teal":3060,"source":"contracts/TownHall.algo.ts:722","pc":[3487]},{"teal":3061,"source":"contracts/TownHall.algo.ts:722","pc":[3488]},{"teal":3062,"source":"contracts/TownHall.algo.ts:722","pc":[3489,3490,3491]},{"teal":3067,"source":"contracts/TownHall.algo.ts:725","pc":[3492]},{"teal":3068,"source":"contracts/Constants.ts:24","pc":[3493,3494]},{"teal":3069,"source":"contracts/TownHall.algo.ts:725","pc":[3495]},{"teal":3073,"source":"contracts/TownHall.algo.ts:726","pc":[3496]},{"teal":3078,"source":"contracts/TownHall.algo.ts:729","pc":[3497]},{"teal":3079,"source":"contracts/Constants.ts:23","pc":[3498,3499]},{"teal":3080,"source":"contracts/TownHall.algo.ts:729","pc":[3500]},{"teal":3081,"source":"contracts/TownHall.algo.ts:676","pc":[3501]},{"teal":3086,"source":"contracts/TownHall.algo.ts:732","pc":[3502,3503,3504]},{"teal":3087,"source":"contracts/TownHall.algo.ts:732","pc":[3505,3506,3507]},{"teal":3090,"source":"contracts/TownHall.algo.ts:732","pc":[3508,3509,3510]},{"teal":3091,"source":"contracts/TownHall.algo.ts:732","pc":[3511]},{"teal":3092,"source":"contracts/TownHall.algo.ts:732","pc":[3512]},{"teal":3096,"source":"contracts/TownHall.algo.ts:732","pc":[3513,3514,3515]},{"teal":3099,"source":"contracts/TownHall.algo.ts:732","pc":[3516]},{"teal":3100,"source":"contracts/TownHall.algo.ts:732","pc":[3517,3518]},{"teal":3107,"source":"contracts/TownHall.algo.ts:739","pc":[3519]},{"teal":3108,"source":"contracts/TownHall.algo.ts:739","pc":[3520]},{"teal":3109,"source":"contracts/Constants.ts:23","pc":[3521,3522]},{"teal":3110,"source":"contracts/TownHall.algo.ts:739","pc":[3523]},{"teal":3113,"source":"contracts/TownHall.algo.ts:738","errorMessage":"Invalid method call: Game is not in Dawn Stage Unmasking state.","pc":[3524]},{"teal":3117,"source":"contracts/TownHall.algo.ts:743","pc":[3525]},{"teal":3118,"source":"contracts/TownHall.algo.ts:743","pc":[3526]},{"teal":3119,"source":"contracts/TownHall.algo.ts:743","pc":[3527,3528]},{"teal":3120,"source":"contracts/TownHall.algo.ts:743","pc":[3529]},{"teal":3123,"source":"contracts/TownHall.algo.ts:743","errorMessage":"Error state: Other player called method.","pc":[3530]},{"teal":3127,"source":"contracts/TownHall.algo.ts:746","pc":[3531,3532]},{"teal":3128,"source":"contracts/TownHall.algo.ts:746","pc":[3533,3534]},{"teal":3129,"source":"contracts/TownHall.algo.ts:746","pc":[3535,3536]},{"teal":3130,"source":"contracts/TownHall.algo.ts:746","pc":[3537,3538]},{"teal":3134,"source":"contracts/TownHall.algo.ts:747","pc":[3539,3540]},{"teal":3135,"source":"contracts/TownHall.algo.ts:747","pc":[3541,3542,3543]},{"teal":3136,"source":"contracts/TownHall.algo.ts:747","pc":[3544,3545]},{"teal":3140,"source":"contracts/TownHall.algo.ts:748","pc":[3546,3547]},{"teal":3141,"source":"contracts/TownHall.algo.ts:748","pc":[3548,3549]},{"teal":3142,"source":"contracts/TownHall.algo.ts:748","pc":[3550,3551]},{"teal":3143,"source":"contracts/TownHall.algo.ts:748","pc":[3552,3553]},{"teal":3148,"source":"contracts/TownHall.algo.ts:750","pc":[3554,3555]},{"teal":3149,"source":"contracts/TownHall.algo.ts:750","pc":[3556,3557]},{"teal":3150,"source":"contracts/TownHall.algo.ts:750","pc":[3558]},{"teal":3151,"source":"contracts/TownHall.algo.ts:750","pc":[3559]},{"teal":3152,"source":"contracts/TownHall.algo.ts:750","pc":[3560,3561,3562]},{"teal":3157,"source":"contracts/TownHall.algo.ts:754","pc":[3563]},{"teal":3158,"source":"contracts/Constants.ts:24","pc":[3564,3565]},{"teal":3159,"source":"contracts/TownHall.algo.ts:754","pc":[3566]},{"teal":3163,"source":"contracts/TownHall.algo.ts:755","pc":[3567,3568]},{"teal":3164,"source":"contracts/TownHall.algo.ts:755","pc":[3569,3570]},{"teal":3165,"source":"contracts/TownHall.algo.ts:755","pc":[3571]},{"teal":3169,"source":"contracts/TownHall.algo.ts:756","pc":[3572]},{"teal":3175,"source":"contracts/TownHall.algo.ts:759","pc":[3573,3574]},{"teal":3176,"source":"contracts/TownHall.algo.ts:759","pc":[3575,3576]},{"teal":3177,"source":"contracts/TownHall.algo.ts:759","pc":[3577]},{"teal":3178,"source":"contracts/TownHall.algo.ts:759","pc":[3578]},{"teal":3179,"source":"contracts/TownHall.algo.ts:759","pc":[3579,3580,3581]},{"teal":3184,"source":"contracts/TownHall.algo.ts:761","pc":[3582,3583]},{"teal":3185,"source":"contracts/TownHall.algo.ts:761","pc":[3584,3585]},{"teal":3186,"source":"contracts/TownHall.algo.ts:761","pc":[3586]},{"teal":3191,"source":"contracts/TownHall.algo.ts:765","pc":[3587]},{"teal":3192,"source":"contracts/TownHall.algo.ts:765","pc":[3588,3589]},{"teal":3193,"source":"contracts/TownHall.algo.ts:765","pc":[3590]},{"teal":3197,"source":"contracts/TownHall.algo.ts:767","pc":[3591]},{"teal":3198,"source":"contracts/Constants.ts:15","pc":[3592]},{"teal":3199,"source":"contracts/TownHall.algo.ts:767","pc":[3593]},{"teal":3200,"source":"contracts/TownHall.algo.ts:732","pc":[3594]},{"teal":3205,"source":"contracts/TownHall.algo.ts:770","pc":[3595,3596,3597]},{"teal":3206,"source":"contracts/TownHall.algo.ts:770","pc":[3598]},{"teal":3207,"source":"contracts/TownHall.algo.ts:770","pc":[3599]},{"teal":3211,"source":"contracts/TownHall.algo.ts:770","pc":[3600,3601,3602]},{"teal":3215,"source":"contracts/TownHall.algo.ts:771","pc":[3603]},{"teal":3216,"source":"contracts/TownHall.algo.ts:771","pc":[3604]},{"teal":3217,"source":"contracts/Constants.ts:24","pc":[3605,3606]},{"teal":3218,"source":"contracts/TownHall.algo.ts:771","pc":[3607]},{"teal":3221,"source":"contracts/TownHall.algo.ts:771","errorMessage":"Invalid method call: Game is not in Game Over state.","pc":[3608]},{"teal":3222,"source":"contracts/TownHall.algo.ts:770","pc":[3609]},{"teal":3225,"source":"contracts/TownHall.algo.ts:31","pc":[3610,3611,3612,3613,3614,3615]},{"teal":3226,"source":"contracts/TownHall.algo.ts:31","pc":[3616,3617,3618]},{"teal":3227,"source":"contracts/TownHall.algo.ts:31","pc":[3619,3620,3621,3622]},{"teal":3230,"source":"contracts/TownHall.algo.ts:31","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[3623]},{"teal":3233,"source":"contracts/TownHall.algo.ts:31","pc":[3624,3625,3626,3627,3628,3629]},{"teal":3234,"source":"contracts/TownHall.algo.ts:31","pc":[3630,3631,3632,3633,3634,3635]},{"teal":3235,"source":"contracts/TownHall.algo.ts:31","pc":[3636,3637,3638,3639,3640,3641]},{"teal":3236,"source":"contracts/TownHall.algo.ts:31","pc":[3642,3643,3644,3645,3646,3647]},{"teal":3237,"source":"contracts/TownHall.algo.ts:31","pc":[3648,3649,3650,3651,3652,3653]},{"teal":3238,"source":"contracts/TownHall.algo.ts:31","pc":[3654,3655,3656,3657,3658,3659]},{"teal":3239,"source":"contracts/TownHall.algo.ts:31","pc":[3660,3661,3662,3663,3664,3665]},{"teal":3240,"source":"contracts/TownHall.algo.ts:31","pc":[3666,3667,3668,3669,3670,3671]},{"teal":3241,"source":"contracts/TownHall.algo.ts:31","pc":[3672,3673,3674,3675,3676,3677]},{"teal":3242,"source":"contracts/TownHall.algo.ts:31","pc":[3678,3679,3680,3681,3682,3683]},{"teal":3243,"source":"contracts/TownHall.algo.ts:31","pc":[3684,3685,3686,3687,3688,3689]},{"teal":3244,"source":"contracts/TownHall.algo.ts:31","pc":[3690,3691,3692,3693,3694,3695]},{"teal":3245,"source":"contracts/TownHall.algo.ts:31","pc":[3696,3697,3698,3699,3700,3701]},{"teal":3246,"source":"contracts/TownHall.algo.ts:31","pc":[3702,3703,3704,3705,3706,3707]},{"teal":3247,"source":"contracts/TownHall.algo.ts:31","pc":[3708,3709,3710,3711,3712,3713]},{"teal":3248,"source":"contracts/TownHall.algo.ts:31","pc":[3714,3715,3716,3717,3718,3719]},{"teal":3249,"source":"contracts/TownHall.algo.ts:31","pc":[3720,3721,3722]},{"teal":3250,"source":"contracts/TownHall.algo.ts:31","pc":[3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756]},{"teal":3253,"source":"contracts/TownHall.algo.ts:31","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[3757]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAOAAECBgUgAwQHC2AICQomJwlnYW1lU3RhdGUUanVzdEVsaW1pbmF0ZWRQbGF5ZXIAC21hZmlhVmljdGltD3BsYXllcjFBbGdvQWRkcg9wbGF5ZXIyQWxnb0FkZHIPcGxheWVyM0FsZ29BZGRyD3BsYXllcjRBbGdvQWRkcg9wbGF5ZXI1QWxnb0FkZHIPcGxheWVyNkFsZ29BZGRyDWRvY3RvclBhdGllbnQGZG9jdG9yFHBsYXllcjFSZWNlaXZlZFZvdGVzFHBsYXllcjJSZWNlaXZlZFZvdGVzFHBsYXllcjNSZWNlaXZlZFZvdGVzFHBsYXllcjRSZWNlaXZlZFZvdGVzFHBsYXllcjVSZWNlaXZlZFZvdGVzFHBsYXllcjZSZWNlaXZlZFZvdGVzDHBsYXllcnNBbGl2ZQgAAAAAAAAAAAVtYWZpYQxwbGF5ZXJzVm90ZWQNcGxheWVyc0pvaW5lZA9wbGF5ZXIxSGFzVm90ZWQPcGxheWVyMkhhc1ZvdGVkD3BsYXllcjNIYXNWb3RlZA9wbGF5ZXI0SGFzVm90ZWQPcGxheWVyNUhhc1ZvdGVkD3BsYXllcjZIYXNWb3RlZAQVH3x1DmRvY3RvcktleUltYWdlDW1hZmlhS2V5SW1hZ2UHYnV0Y2hlcgdpbm5rZWVwBmZhcm1lcgZncm9jZXJgF/HTpzGX15QmlWOMT6msD8NojE+XdLkFoU46PxcbrFhsVeg/+Xoa7/s68ArbIsa7CLP0geOqoPGgnjDtdB2K5Pz14JXV0Ar2ANsYyywEs+3QPMdEooiK5AyqIylGxefhEGRvY3RvckNvbW1pdG1lbnQPbWFmaWFDb21taXRtZW50MRgUJQsxGQiNDAt7AAAAAAAAAAAAAAttAAAAAAAAAAAAAACIAAIjQ4oAACcEMgNnJwUyA2cnBjIDZycHMgNnJwgyA2cnCTIDZycUMgNnJwsyA2cnIjIDZycgMgNnJyEyA2cnIzIDZycXImcnGCJnJxkiZycaImcnGyJnJxwiZycVImcnDCJnJw0iZycOImcnDyJnJxAiZycRImcnFSJnJxYiZycSJWcpMgNnKzIDZycKMgNnKCJniScdNhoBF4gABRZQsCNDigEBi/+JJx02GgRXAgA2GgNXAgA2GgJXAgA2GgFXAgCIAAuAAQAiTwJUULAjQ4oEASpJi/+L/ov9UFACjACLAIAgc+2nUymdfUgzOdgICaHYBVO9pAL//lv+/////wAAAAGqjAGL/Yv/i/zhAov+iwHhAuACEowARgGJJx02GgFXAgCIAAxJFRZXBgJMUFCwI0OKAQEqRwKL/wKMAIsAgDAaARHqOX/mmksbp7ZDS6zXZHdLhPOFEr9nMNKg9rD2JB6r//6xU///uf7/////qquqjAGLAeUCjAKLAowARgKJJx2IAAUWULAjQ4oAAShkiTYaAVcCAIgAAiNDigEAKkcDKGQiEkQnFmQlDEQnBGQxABJJQAAHJwVkMQASEUlAAAcnBmQxABIRSUAABycHZDEAEhFJQAAHJwhkMQASEUlAAAcnCWQxABIRQQABAIv/VwBgjACL/1dgYIwBi/9XwGCMAov/gaACIQVYjAOLA4sCiwGLAIj+tkQnE71MSBRBAAknEyEKuUhCAAknE0m9RCEKCNMnE71MSEQnEycWZCEKC4sBuycWZCMIJxZMZycEZDIDEkEABicEMQBniScFZDIDEkEABicFMQBniScGZDIDEkEABicGMQBniScHZDIDEkEABicHMQBniScIZDIDEkEABicIMQBniScJZDIDEkEACScJMQBnKCNniQCJMRYjCUk4ECMSRDEWJAlJOBAjEkQxFiEGCUk4ECMSRDEWIQcJSTgQIxJEMRYhBAlJOBAjEkQxFiUJSTgQIxJENhoFVwIANhoEVwIANhoDVwIANhoCVwIANhoBVwIAiAACI0OKCwAoZCMSRIv9Ab1MSBREi/0BIrlIi/8xADIKUBJEJxMigcAEuov+EkSL+jgAgCDMtCi62GFZqA4enKQk66NmEvSR0JCiKQccA0rUv966xxJEi/k4AIAg4G5kvAD3umWrUuZUrxxEBjvWgOBU3J55INUboiM7VGUSRIv4OACAIFkHc7w3v4nNzPLTDVihf9czOoF2nDXfMeAfsq3PdimEEkSL9zgAgCBdCfLjPeBChTBLrGYY1p7PmpOfPSVsbq3IutZ2u6DzaxJEi/Y4AIAgP89/LxSGfoyE2xlGfhc/ArSqe2PmcLbGpx3nzjy0oa4SRIv1OACAIAH8EKjPOvpSe9cT/BXVwlTBuA/4Km4CkbDgH+0UXEVLEkQnFGQyAxJBAAsnFDEAZycfi/1niScLZDIDEkEACycLMQBnJx6L/WeJJyJkMgMSQQAGJyIxAGeJJyBkMgMSQQAGJyAxAGeJJyFkMgMSQQAGJyExAGeJJyNkMgMSQQAJJyMxAGcoJGeJAIk2GgEXiAACI0OKAQAoZCQSRIv/Ig1JQQAGi/8hCAwQRDEAJwRkEklAAAcxACcFZBIRSUAABzEAJwZkEhFJQAAHMQAnB2QSEUlAAAcxACcIZBIRSUAABzEAJwlkEhEUQQABAIv/IxJJQQAHJwRkMgMTEEEADCcMZCMIJwxMZ0IAmov/JBJJQQAHJwVkMgMTEEEADCcNZCMIJw1MZ0IAfIv/IQYSSUEABycGZDIDExBBAAwnDmQjCCcOTGdCAF2L/yEHEklBAAcnB2QyAxMQQQAMJw9kIwgnD0xnQgA+i/8hBBJJQQAHJwhkMgMTEEEADCcQZCMIJxBMZ0IAH4v/JRJJQQAHJwlkMgMTEEEADCcRZCMIJxFMZ0IAAQAxACcEZBJJQQAGJxdkIhIQQQAHJxcjZ0IAgzEAJwVkEklBAAYnGGQiEhBBAAcnGCNnQgBpMQAnBmQSSUEABicZZCISEEEABycZI2dCAE8xACcHZBJJQQAGJxpkIhIQQQAHJxojZ0IANTEAJwhkEklBAAYnG2QiEhBBAAcnGyNnQgAbMQAnCWQSSUEABiccZCISEEEAByccI2dCAAEAJxVkIwgnFUxnJxVkJxJkEkEAICghBmcnFSJnJxciZycYImcnGSJnJxoiZycbImcnHCJniYgAAiNDigAAKkkoZCEGEkQpMgNnIowAMgYkGCISjAEnDGSLAA1JQAAOJwxkiwASSUEAA4sBEBFBAAopJwRkZycMZIwAJw1kiwANSUAADicNZIsAEklBAAOLARARQQAKKScFZGcnDWSMACcOZIsADUlAAA4nDmSLABJJQQADiwEQEUEACiknBmRnJw5kjAAnD2SLAA1JQAAOJw9kiwASSUEAA4sBEBFBAAopJwdkZycPZIwAJxBkiwANSUAADicQZIsAEklBAAOLARARQQAKKScIZGcnEGSMACcRZIsADUlAAA4nEWSLABJJQQADiwEQEUEACiknCWRnJxFkjAApZDIDE0SLACITRClkJwRkEkEABScEMgNnKWQnBWQSQQAFJwUyA2cpZCcGZBJBAAUnBjIDZylkJwdkEkEABScHMgNnKWQnCGQSQQAFJwgyA2cpZCcJZBJBAAUnCTIDZycSZCMJJxJMZycMImcnDSJnJw4iZycPImcnECJnJxEiZyghB2eJNhoBVwIAiAACI0OKAQAqRwIoZCEHEkQpZDEAEkQnJIv/4QKMAIsAiPkJjAGLAYv/4QKMAosCJx9kEkEACicUMgNnKCEJZ4mLAiceZBJBAAkoIQRnJwsyA2cpMgNnKCEEZ4k2GgFXAgCIAAIjQ4oBAChkIQQSRDEAJxRkEkQnJov/ZycLZDIDEkEAByghCGdCAAMoJWeJNhoBVwIAiAACI0OKAQAoZCUSRDEAJwtkEkQnC2QyAxNEJyWL/2coIQhniTYaAkkVIQUSRDYaAUkVIQUSRIgAAiNDigIAKihkIQgSRDEAJxRkEkSL/zIDE0SL/4v+UAGMAIsAJyZkEkSL/ycEZBJBAAgrJwRkZ0IAWYv/JwVkEkEACCsnBWRnQgBIi/8nBmQSQQAIKycGZGdCADeL/ycHZBJBAAgrJwdkZ0IAJov/JwhkEkEACCsnCGRnQgAVi/8nCWQSQQAIKycJZGdCAAQrMgNnKCELZ4k2GgJJFSEFEkQ2GgFJFSEFEkSIAAIjQ4oCACooZCELEkQxACcLZBJEJwpkMgMSRIv/MgMTRIv/i/5QAYwAiwAnJWQSRIv/JwRkEkEACScKJwRkZ0IAX4v/JwVkEkEACScKJwVkZ0IATYv/JwZkEkEACScKJwZkZ0IAO4v/JwdkEkEACScKJwdkZ0IAKYv/JwhkEkEACScKJwhkZ0IAF4v/JwlkEkEACScKJwlkZ0IABScKMgNnKCEMZ4mIAAIjQ4oAAChkIQwSRCtkMgMSSUAABytkJwpkEhFBAA0rMgNnJwoyA2coJGeJK2QnBGQSQQANKScEZGcnBDIDZ0IAbytkJwVkEkEADSknBWRnJwUyA2dCAFkrZCcGZBJBAA0pJwZkZycGMgNnQgBDK2QnB2QSQQANKScHZGcnBzIDZ0IALStkJwhkEkEADSknCGRnJwgyA2dCABcrZCcJZBJBAA0pJwlkZycJMgNnQgABACcSZCMJJxJMZysyA2cnCjIDZycSZCQOQQAFKCEJZ4koIQ1niTYaAVcCAIgAAiNDigEAKkcCKGQhDRJEKWQxABJEJySL/+ECjACLAIj2C4wBiwGL/+ECjAKLAicfZBJBAAooIQlnJxQyA2eJiwInHmQSQQAFJwsyA2cpMgNnKCRniYgAAiNDigAAKGQhCRJEiYAEuER7NjYaAI4B9IcAgARwzuobgASgF72MgATXcs28gAT1QLosgAQsjx9wgASN2c1ygARPsSG7gATEI2FpgATunzYagAQLXnWFgATIZFh1gATtxIa7gAR3N2LlgAQ5le1qgATvZaaXgARq20U4NhoAjhD0lvSq9R/1hfWV9rH4lvqB/AP8ZfyZ/MT9cP4q/wH/XgA=","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":3,"minor":27,"patch":0,"commitHash":"f54f0997"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the TownHall contract
 */
export type TownHallArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'dummyOpUp(uint64)uint64': {
      i: bigint | number
    }
    'dlog(byte[],byte[],byte[],byte[])bool': {
      g: Uint8Array
      x: Uint8Array
      v: Uint8Array
      z: Uint8Array
    }
    'hashPointToPoint(byte[])byte[]': {
      point: Uint8Array
    }
    'getGameState()uint64': Record<string, never>
    'joinGameLobby(byte[])void': {
      nizkDlog: Uint8Array
    }
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void': {
      msg: Uint8Array
      pkAll: Uint8Array
      keyImage: Uint8Array
      sig: Uint8Array
      challenges: Uint8Array
      lsigTxn0: AppMethodCallTransactionArgument
      lsigTxn1: AppMethodCallTransactionArgument
      lsigTxn2: AppMethodCallTransactionArgument
      lsigTxn3: AppMethodCallTransactionArgument
      lsigTxn4: AppMethodCallTransactionArgument
      lsigTxn5: AppMethodCallTransactionArgument
    }
    'dayStageVote(uint64)void': {
      vote: bigint | number
    }
    'dayStageEliminate()void': Record<string, never>
    'dayStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'nightStageMafiaCommit(byte[])void': {
      commitment: Uint8Array
    }
    'nightStageDoctorCommit(byte[])void': {
      commitment: Uint8Array
    }
    'dawnStageMafiaReveal(address,byte[32])void': {
      victimAim: string
      blinder: Uint8Array
    }
    'dawnStageDoctorReveal(address,byte[32])void': {
      patientAim: string
      blinder: Uint8Array
    }
    'dawnStageDeadOrSaved()void': Record<string, never>
    'dawnStageUnmasking(byte[])void': {
      blsSk: Uint8Array
    }
    'gameOver()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'dummyOpUp(uint64)uint64': [i: bigint | number]
    'dlog(byte[],byte[],byte[],byte[])bool': [g: Uint8Array, x: Uint8Array, v: Uint8Array, z: Uint8Array]
    'hashPointToPoint(byte[])byte[]': [point: Uint8Array]
    'getGameState()uint64': []
    'joinGameLobby(byte[])void': [nizkDlog: Uint8Array]
    'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void': [msg: Uint8Array, pkAll: Uint8Array, keyImage: Uint8Array, sig: Uint8Array, challenges: Uint8Array, lsigTxn0: AppMethodCallTransactionArgument, lsigTxn1: AppMethodCallTransactionArgument, lsigTxn2: AppMethodCallTransactionArgument, lsigTxn3: AppMethodCallTransactionArgument, lsigTxn4: AppMethodCallTransactionArgument, lsigTxn5: AppMethodCallTransactionArgument]
    'dayStageVote(uint64)void': [vote: bigint | number]
    'dayStageEliminate()void': []
    'dayStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'nightStageMafiaCommit(byte[])void': [commitment: Uint8Array]
    'nightStageDoctorCommit(byte[])void': [commitment: Uint8Array]
    'dawnStageMafiaReveal(address,byte[32])void': [victimAim: string, blinder: Uint8Array]
    'dawnStageDoctorReveal(address,byte[32])void': [patientAim: string, blinder: Uint8Array]
    'dawnStageDeadOrSaved()void': []
    'dawnStageUnmasking(byte[])void': [blsSk: Uint8Array]
    'gameOver()void': []
  }
}

/**
 * The return type for each method
 */
export type TownHallReturns = {
  'createApplication()void': void
  'dummyOpUp(uint64)uint64': bigint
  'dlog(byte[],byte[],byte[],byte[])bool': boolean
  'hashPointToPoint(byte[])byte[]': Uint8Array
  'getGameState()uint64': bigint
  'joinGameLobby(byte[])void': void
  'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void': void
  'dayStageVote(uint64)void': void
  'dayStageEliminate()void': void
  'dayStageUnmasking(byte[])void': void
  'nightStageMafiaCommit(byte[])void': void
  'nightStageDoctorCommit(byte[])void': void
  'dawnStageMafiaReveal(address,byte[32])void': void
  'dawnStageDoctorReveal(address,byte[32])void': void
  'dawnStageDeadOrSaved()void': void
  'dawnStageUnmasking(byte[])void': void
  'gameOver()void': void
}

/**
 * Defines the types of available calls and state of the TownHall smart contract.
 */
export type TownHallTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: TownHallArgs['obj']['createApplication()void']
      argsTuple: TownHallArgs['tuple']['createApplication()void']
      returns: TownHallReturns['createApplication()void']
    }>
    & Record<'dummyOpUp(uint64)uint64' | 'dummyOpUp', {
      argsObj: TownHallArgs['obj']['dummyOpUp(uint64)uint64']
      argsTuple: TownHallArgs['tuple']['dummyOpUp(uint64)uint64']
      /**
       * the number (but we do nothing with it)
       */
      returns: TownHallReturns['dummyOpUp(uint64)uint64']
    }>
    & Record<'dlog(byte[],byte[],byte[],byte[])bool' | 'dlog', {
      argsObj: TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool']
      argsTuple: TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']
      returns: TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool']
    }>
    & Record<'hashPointToPoint(byte[])byte[]' | 'hashPointToPoint', {
      argsObj: TownHallArgs['obj']['hashPointToPoint(byte[])byte[]']
      argsTuple: TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']
      returns: TownHallReturns['hashPointToPoint(byte[])byte[]']
    }>
    & Record<'getGameState()uint64' | 'getGameState', {
      argsObj: TownHallArgs['obj']['getGameState()uint64']
      argsTuple: TownHallArgs['tuple']['getGameState()uint64']
      returns: TownHallReturns['getGameState()uint64']
    }>
    & Record<'joinGameLobby(byte[])void' | 'joinGameLobby', {
      argsObj: TownHallArgs['obj']['joinGameLobby(byte[])void']
      argsTuple: TownHallArgs['tuple']['joinGameLobby(byte[])void']
      returns: TownHallReturns['joinGameLobby(byte[])void']
    }>
    & Record<'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void' | 'assignRole', {
      argsObj: TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']
      argsTuple: TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']
      returns: TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']
    }>
    & Record<'dayStageVote(uint64)void' | 'dayStageVote', {
      argsObj: TownHallArgs['obj']['dayStageVote(uint64)void']
      argsTuple: TownHallArgs['tuple']['dayStageVote(uint64)void']
      returns: TownHallReturns['dayStageVote(uint64)void']
    }>
    & Record<'dayStageEliminate()void' | 'dayStageEliminate', {
      argsObj: TownHallArgs['obj']['dayStageEliminate()void']
      argsTuple: TownHallArgs['tuple']['dayStageEliminate()void']
      returns: TownHallReturns['dayStageEliminate()void']
    }>
    & Record<'dayStageUnmasking(byte[])void' | 'dayStageUnmasking', {
      argsObj: TownHallArgs['obj']['dayStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dayStageUnmasking(byte[])void']
      returns: TownHallReturns['dayStageUnmasking(byte[])void']
    }>
    & Record<'nightStageMafiaCommit(byte[])void' | 'nightStageMafiaCommit', {
      argsObj: TownHallArgs['obj']['nightStageMafiaCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']
      returns: TownHallReturns['nightStageMafiaCommit(byte[])void']
    }>
    & Record<'nightStageDoctorCommit(byte[])void' | 'nightStageDoctorCommit', {
      argsObj: TownHallArgs['obj']['nightStageDoctorCommit(byte[])void']
      argsTuple: TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']
      returns: TownHallReturns['nightStageDoctorCommit(byte[])void']
    }>
    & Record<'dawnStageMafiaReveal(address,byte[32])void' | 'dawnStageMafiaReveal', {
      argsObj: TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageMafiaReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDoctorReveal(address,byte[32])void' | 'dawnStageDoctorReveal', {
      argsObj: TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void']
      argsTuple: TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']
      returns: TownHallReturns['dawnStageDoctorReveal(address,byte[32])void']
    }>
    & Record<'dawnStageDeadOrSaved()void' | 'dawnStageDeadOrSaved', {
      argsObj: TownHallArgs['obj']['dawnStageDeadOrSaved()void']
      argsTuple: TownHallArgs['tuple']['dawnStageDeadOrSaved()void']
      returns: TownHallReturns['dawnStageDeadOrSaved()void']
    }>
    & Record<'dawnStageUnmasking(byte[])void' | 'dawnStageUnmasking', {
      argsObj: TownHallArgs['obj']['dawnStageUnmasking(byte[])void']
      argsTuple: TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']
      returns: TownHallReturns['dawnStageUnmasking(byte[])void']
    }>
    & Record<'gameOver()void' | 'gameOver', {
      argsObj: TownHallArgs['obj']['gameOver()void']
      argsTuple: TownHallArgs['tuple']['gameOver()void']
      returns: TownHallReturns['gameOver()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        player1AlgoAddr: string
        player2AlgoAddr: string
        player3AlgoAddr: string
        player4AlgoAddr: string
        player5AlgoAddr: string
        player6AlgoAddr: string
        mafia: string
        mafiaKeyImage: BinaryState
        doctor: string
        doctorKeyImage: BinaryState
        farmer: string
        butcher: string
        innkeep: string
        grocer: string
        player1HasVoted: bigint
        player1ReceivedVotes: bigint
        player2HasVoted: bigint
        player2ReceivedVotes: bigint
        player3HasVoted: bigint
        player3ReceivedVotes: bigint
        player4HasVoted: bigint
        player4ReceivedVotes: bigint
        player5HasVoted: bigint
        player5ReceivedVotes: bigint
        player6HasVoted: bigint
        player6ReceivedVotes: bigint
        playersVoted: bigint
        playersAlive: bigint
        justEliminatedPlayer: string
        mafiaCommitment: BinaryState
        doctorCommitment: BinaryState
        mafiaVictim: string
        doctorPatient: string
        playersJoined: bigint
        gameState: bigint
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        quickAccessPkBoxes: Map<bigint | number, Uint8Array>
        hashFilter: Map<Uint8Array | string, Uint8Array>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type TownHallSignatures = keyof TownHallTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type TownHallNonVoidMethodSignatures = keyof TownHallTypes['methods'] extends infer T ? T extends keyof TownHallTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the TownHall smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the TownHall smart contract to the method's return type
 */
export type MethodReturn<TSignature extends TownHallSignatures> = TownHallTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = TownHallTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = TownHallTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type TownHallCreateCallParams =
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines arguments required for the deploy method.
 */
export type TownHallDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: TownHallCreateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the TownHall smart contract
 */
export abstract class TownHallParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends TownHallCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return TownHallParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the TownHall smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the dummyOpUp(uint64)uint64 ABI method
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dummyOpUp(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.i],
    }
  }
  /**
   * Constructs a no op call for the dlog(byte[],byte[],byte[],byte[])bool ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dlog(byte[],byte[],byte[],byte[])bool' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.g, params.args.x, params.args.v, params.args.z],
    }
  }
  /**
   * Constructs a no op call for the hashPointToPoint(byte[])byte[] ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'hashPointToPoint(byte[])byte[]' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.point],
    }
  }
  /**
   * Constructs a no op call for the getGameState()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getGameState()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the joinGameLobby(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(byte[])void'] | TownHallArgs['tuple']['joinGameLobby(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'joinGameLobby(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.nizkDlog],
    }
  }
  /**
   * Constructs a no op call for the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.msg, params.args.pkAll, params.args.keyImage, params.args.sig, params.args.challenges, params.args.lsigTxn0, params.args.lsigTxn1, params.args.lsigTxn2, params.args.lsigTxn3, params.args.lsigTxn4, params.args.lsigTxn5],
    }
  }
  /**
   * Constructs a no op call for the dayStageVote(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageVote(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.vote],
    }
  }
  /**
   * Constructs a no op call for the dayStageEliminate()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageEliminate()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dayStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dayStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the nightStageMafiaCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageMafiaCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the nightStageDoctorCommit(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'nightStageDoctorCommit(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.commitment],
    }
  }
  /**
   * Constructs a no op call for the dawnStageMafiaReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageMafiaReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.victimAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDoctorReveal(address,byte[32])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDoctorReveal(address,byte[32])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.patientAim, params.args.blinder],
    }
  }
  /**
   * Constructs a no op call for the dawnStageDeadOrSaved()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageDeadOrSaved()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the dawnStageUnmasking(byte[])void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'dawnStageUnmasking(byte[])void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.blsSk],
    }
  }
  /**
   * Constructs a no op call for the gameOver()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gameOver()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the TownHall smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class TownHallFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `TownHallFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new TownHallClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new TownHallClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the TownHall smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: TownHallDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? TownHallParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (TownHallCreateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new TownHallClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(TownHallParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the TownHall smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<TownHallArgs['obj']['createApplication()void'] | TownHallArgs['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(TownHallParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | TownHallReturns['createApplication()void']) }, appClient: new TownHallClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the TownHall smart contract
 */
export class TownHallClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param appClient An `AppClient` instance which has been created with the TownHall app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `TownHallClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends TownHallNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `TownHallClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `TownHallClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<TownHallClient> {
    return new TownHallClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call params: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(byte[])void'] | TownHallArgs['tuple']['joinGameLobby(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call transaction: the number (but we do nothing with it)
     */
    dummyOpUp: (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dummyOpUp(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dlog: (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dlog(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    hashPointToPoint: (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.hashPointToPoint(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getGameState: (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.getGameState(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    joinGameLobby: (params: CallParams<TownHallArgs['obj']['joinGameLobby(byte[])void'] | TownHallArgs['tuple']['joinGameLobby(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.joinGameLobby(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    assignRole: (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.assignRole(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageVote: (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageVote(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageEliminate: (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageEliminate(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dayStageUnmasking: (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dayStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageMafiaCommit: (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageMafiaCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    nightStageDoctorCommit: (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.nightStageDoctorCommit(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageMafiaReveal: (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDoctorReveal: (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageDeadOrSaved: (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    dawnStageUnmasking: (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.dawnStageUnmasking(params))
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gameOver: (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(TownHallParamsFactory.gameOver(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Makes a clear_state call to an existing instance of the TownHall smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the TownHall smart contract using the `dummyOpUp(uint64)uint64` ABI method.
     *
    * Dummy Op Up
    Dummy operation to get more opcode budget
    - The number to return, necssary to deduplicate the name

     *
     * @param params The params for the smart contract call
     * @returns The call result: the number (but we do nothing with it)
     */
    dummyOpUp: async (params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dummyOpUp(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dummyOpUp(uint64)uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dlog(byte[],byte[],byte[],byte[])bool` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dlog: async (params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dlog(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `hashPointToPoint(byte[])byte[]` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    hashPointToPoint: async (params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.hashPointToPoint(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['hashPointToPoint(byte[])byte[]'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `getGameState()uint64` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getGameState: async (params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.getGameState(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['getGameState()uint64'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `joinGameLobby(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    joinGameLobby: async (params: CallParams<TownHallArgs['obj']['joinGameLobby(byte[])void'] | TownHallArgs['tuple']['joinGameLobby(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.joinGameLobby(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['joinGameLobby(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    assignRole: async (params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.assignRole(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageVote(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageVote: async (params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageVote(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageVote(uint64)void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageEliminate()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageEliminate: async (params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageEliminate(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageEliminate()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dayStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dayStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dayStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dayStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageMafiaCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageMafiaCommit: async (params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageMafiaCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageMafiaCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `nightStageDoctorCommit(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    nightStageDoctorCommit: async (params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.nightStageDoctorCommit(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['nightStageDoctorCommit(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageMafiaReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageMafiaReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageMafiaReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDoctorReveal(address,byte[32])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDoctorReveal: async (params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDoctorReveal(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageDeadOrSaved()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageDeadOrSaved: async (params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageDeadOrSaved(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageDeadOrSaved()void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `dawnStageUnmasking(byte[])void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    dawnStageUnmasking: async (params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.dawnStageUnmasking(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['dawnStageUnmasking(byte[])void'])}
    },

    /**
     * Makes a call to the TownHall smart contract using the `gameOver()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gameOver: async (params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(TownHallParamsFactory.gameOver(params))
      return {...result, return: result.return as unknown as (undefined | TownHallReturns['gameOver()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new TownHallClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current TownHall app
   */
  state = {
    /**
     * Methods to access global state for the current TownHall app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          player1AlgoAddr: result.player1AlgoAddr,
          player2AlgoAddr: result.player2AlgoAddr,
          player3AlgoAddr: result.player3AlgoAddr,
          player4AlgoAddr: result.player4AlgoAddr,
          player5AlgoAddr: result.player5AlgoAddr,
          player6AlgoAddr: result.player6AlgoAddr,
          mafia: result.mafia,
          mafiaKeyImage: new BinaryStateValue(result.mafiaKeyImage),
          doctor: result.doctor,
          doctorKeyImage: new BinaryStateValue(result.doctorKeyImage),
          farmer: result.farmer,
          butcher: result.butcher,
          innkeep: result.innkeep,
          grocer: result.grocer,
          player1HasVoted: result.player1HasVoted,
          player1ReceivedVotes: result.player1ReceivedVotes,
          player2HasVoted: result.player2HasVoted,
          player2ReceivedVotes: result.player2ReceivedVotes,
          player3HasVoted: result.player3HasVoted,
          player3ReceivedVotes: result.player3ReceivedVotes,
          player4HasVoted: result.player4HasVoted,
          player4ReceivedVotes: result.player4ReceivedVotes,
          player5HasVoted: result.player5HasVoted,
          player5ReceivedVotes: result.player5ReceivedVotes,
          player6HasVoted: result.player6HasVoted,
          player6ReceivedVotes: result.player6ReceivedVotes,
          playersVoted: result.playersVoted,
          playersAlive: result.playersAlive,
          justEliminatedPlayer: result.justEliminatedPlayer,
          mafiaCommitment: new BinaryStateValue(result.mafiaCommitment),
          doctorCommitment: new BinaryStateValue(result.doctorCommitment),
          mafiaVictim: result.mafiaVictim,
          doctorPatient: result.doctorPatient,
          playersJoined: result.playersJoined,
          gameState: result.gameState,
        }
      },
      /**
       * Get the current value of the player1AlgoAddr key in global state
       */
      player1AlgoAddr: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("player1AlgoAddr")) as string | undefined },
      /**
       * Get the current value of the player2AlgoAddr key in global state
       */
      player2AlgoAddr: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("player2AlgoAddr")) as string | undefined },
      /**
       * Get the current value of the player3AlgoAddr key in global state
       */
      player3AlgoAddr: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("player3AlgoAddr")) as string | undefined },
      /**
       * Get the current value of the player4AlgoAddr key in global state
       */
      player4AlgoAddr: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("player4AlgoAddr")) as string | undefined },
      /**
       * Get the current value of the player5AlgoAddr key in global state
       */
      player5AlgoAddr: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("player5AlgoAddr")) as string | undefined },
      /**
       * Get the current value of the player6AlgoAddr key in global state
       */
      player6AlgoAddr: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("player6AlgoAddr")) as string | undefined },
      /**
       * Get the current value of the mafia key in global state
       */
      mafia: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafia")) as string | undefined },
      /**
       * Get the current value of the mafiaKeyImage key in global state
       */
      mafiaKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctor key in global state
       */
      doctor: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctor")) as string | undefined },
      /**
       * Get the current value of the doctorKeyImage key in global state
       */
      doctorKeyImage: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorKeyImage")) as Uint8Array | undefined) },
      /**
       * Get the current value of the farmer key in global state
       */
      farmer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("farmer")) as string | undefined },
      /**
       * Get the current value of the butcher key in global state
       */
      butcher: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("butcher")) as string | undefined },
      /**
       * Get the current value of the innkeep key in global state
       */
      innkeep: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("innkeep")) as string | undefined },
      /**
       * Get the current value of the grocer key in global state
       */
      grocer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("grocer")) as string | undefined },
      /**
       * Get the current value of the player1HasVoted key in global state
       */
      player1HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player1ReceivedVotes key in global state
       */
      player1ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player1ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player2HasVoted key in global state
       */
      player2HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player2ReceivedVotes key in global state
       */
      player2ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player2ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player3HasVoted key in global state
       */
      player3HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player3ReceivedVotes key in global state
       */
      player3ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player3ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player4HasVoted key in global state
       */
      player4HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player4ReceivedVotes key in global state
       */
      player4ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player4ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player5HasVoted key in global state
       */
      player5HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player5ReceivedVotes key in global state
       */
      player5ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player5ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the player6HasVoted key in global state
       */
      player6HasVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6HasVoted")) as bigint | undefined },
      /**
       * Get the current value of the player6ReceivedVotes key in global state
       */
      player6ReceivedVotes: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("player6ReceivedVotes")) as bigint | undefined },
      /**
       * Get the current value of the playersVoted key in global state
       */
      playersVoted: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersVoted")) as bigint | undefined },
      /**
       * Get the current value of the playersAlive key in global state
       */
      playersAlive: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersAlive")) as bigint | undefined },
      /**
       * Get the current value of the justEliminatedPlayer key in global state
       */
      justEliminatedPlayer: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("justEliminatedPlayer")) as string | undefined },
      /**
       * Get the current value of the mafiaCommitment key in global state
       */
      mafiaCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("mafiaCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the doctorCommitment key in global state
       */
      doctorCommitment: async (): Promise<BinaryState> => { return new BinaryStateValue((await this.appClient.state.global.getValue("doctorCommitment")) as Uint8Array | undefined) },
      /**
       * Get the current value of the mafiaVictim key in global state
       */
      mafiaVictim: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("mafiaVictim")) as string | undefined },
      /**
       * Get the current value of the doctorPatient key in global state
       */
      doctorPatient: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("doctorPatient")) as string | undefined },
      /**
       * Get the current value of the playersJoined key in global state
       */
      playersJoined: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("playersJoined")) as bigint | undefined },
      /**
       * Get the current value of the gameState key in global state
       */
      gameState: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("gameState")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current TownHall app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the quickAccessPKBoxes map in box state
       */
      quickAccessPkBoxes: {
        /**
         * Get all current values of the quickAccessPKBoxes map in box state
         */
        getMap: async (): Promise<Map<bigint, Uint8Array>> => { return (await this.appClient.state.box.getMap("quickAccessPKBoxes")) as Map<bigint, Uint8Array> },
        /**
         * Get a current value of the quickAccessPKBoxes map by key from box state
         */
        value: async (key: bigint | number): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("quickAccessPKBoxes", key) as Uint8Array | undefined },
      },
      /**
       * Get values from the hashFilter map in box state
       */
      hashFilter: {
        /**
         * Get all current values of the hashFilter map in box state
         */
        getMap: async (): Promise<Map<Uint8Array, Uint8Array>> => { return (await this.appClient.state.box.getMap("hashFilter")) as Map<Uint8Array, Uint8Array> },
        /**
         * Get a current value of the hashFilter map by key from box state
         */
        value: async (key: Uint8Array | string): Promise<Uint8Array | undefined> => { return await this.appClient.state.box.getMapValue("hashFilter", key) as Uint8Array | undefined },
      },
    },
  }

  public newGroup(): TownHallComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a dummyOpUp(uint64)uint64 method call against the TownHall contract
       */
      dummyOpUp(params: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dummyOpUp(params)))
        resultMappers.push((v) => client.decodeReturnValue('dummyOpUp(uint64)uint64', v))
        return this
      },
      /**
       * Add a dlog(byte[],byte[],byte[],byte[])bool method call against the TownHall contract
       */
      dlog(params: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dlog(params)))
        resultMappers.push((v) => client.decodeReturnValue('dlog(byte[],byte[],byte[],byte[])bool', v))
        return this
      },
      /**
       * Add a hashPointToPoint(byte[])byte[] method call against the TownHall contract
       */
      hashPointToPoint(params: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.hashPointToPoint(params)))
        resultMappers.push((v) => client.decodeReturnValue('hashPointToPoint(byte[])byte[]', v))
        return this
      },
      /**
       * Add a getGameState()uint64 method call against the TownHall contract
       */
      getGameState(params: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getGameState(params)))
        resultMappers.push((v) => client.decodeReturnValue('getGameState()uint64', v))
        return this
      },
      /**
       * Add a joinGameLobby(byte[])void method call against the TownHall contract
       */
      joinGameLobby(params: CallParams<TownHallArgs['obj']['joinGameLobby(byte[])void'] | TownHallArgs['tuple']['joinGameLobby(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.joinGameLobby(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void method call against the TownHall contract
       */
      assignRole(params: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.assignRole(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageVote(uint64)void method call against the TownHall contract
       */
      dayStageVote(params: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageVote(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageEliminate()void method call against the TownHall contract
       */
      dayStageEliminate(params: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageEliminate(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dayStageUnmasking(byte[])void method call against the TownHall contract
       */
      dayStageUnmasking(params: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dayStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageMafiaCommit(byte[])void method call against the TownHall contract
       */
      nightStageMafiaCommit(params: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageMafiaCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a nightStageDoctorCommit(byte[])void method call against the TownHall contract
       */
      nightStageDoctorCommit(params: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.nightStageDoctorCommit(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageMafiaReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageMafiaReveal(params: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageMafiaReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDoctorReveal(address,byte[32])void method call against the TownHall contract
       */
      dawnStageDoctorReveal(params: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDoctorReveal(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageDeadOrSaved()void method call against the TownHall contract
       */
      dawnStageDeadOrSaved(params: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageDeadOrSaved(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a dawnStageUnmasking(byte[])void method call against the TownHall contract
       */
      dawnStageUnmasking(params: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.dawnStageUnmasking(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gameOver()void method call against the TownHall contract
       */
      gameOver(params: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gameOver(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a clear state call to the TownHall contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as TownHallComposer
  }
}
export type TownHallComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the dummyOpUp(uint64)uint64 ABI method.
   *
  * Dummy Op Up
  Dummy operation to get more opcode budget
  - The number to return, necssary to deduplicate the name

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dummyOpUp(params?: CallParams<TownHallArgs['obj']['dummyOpUp(uint64)uint64'] | TownHallArgs['tuple']['dummyOpUp(uint64)uint64']>): TownHallComposer<[...TReturns, TownHallReturns['dummyOpUp(uint64)uint64'] | undefined]>

  /**
   * Calls the dlog(byte[],byte[],byte[],byte[])bool ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dlog(params?: CallParams<TownHallArgs['obj']['dlog(byte[],byte[],byte[],byte[])bool'] | TownHallArgs['tuple']['dlog(byte[],byte[],byte[],byte[])bool']>): TownHallComposer<[...TReturns, TownHallReturns['dlog(byte[],byte[],byte[],byte[])bool'] | undefined]>

  /**
   * Calls the hashPointToPoint(byte[])byte[] ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  hashPointToPoint(params?: CallParams<TownHallArgs['obj']['hashPointToPoint(byte[])byte[]'] | TownHallArgs['tuple']['hashPointToPoint(byte[])byte[]']>): TownHallComposer<[...TReturns, TownHallReturns['hashPointToPoint(byte[])byte[]'] | undefined]>

  /**
   * Calls the getGameState()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getGameState(params?: CallParams<TownHallArgs['obj']['getGameState()uint64'] | TownHallArgs['tuple']['getGameState()uint64']>): TownHallComposer<[...TReturns, TownHallReturns['getGameState()uint64'] | undefined]>

  /**
   * Calls the joinGameLobby(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  joinGameLobby(params?: CallParams<TownHallArgs['obj']['joinGameLobby(byte[])void'] | TownHallArgs['tuple']['joinGameLobby(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['joinGameLobby(byte[])void'] | undefined]>

  /**
   * Calls the assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  assignRole(params?: CallParams<TownHallArgs['obj']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | TownHallArgs['tuple']['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void']>): TownHallComposer<[...TReturns, TownHallReturns['assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void'] | undefined]>

  /**
   * Calls the dayStageVote(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageVote(params?: CallParams<TownHallArgs['obj']['dayStageVote(uint64)void'] | TownHallArgs['tuple']['dayStageVote(uint64)void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageVote(uint64)void'] | undefined]>

  /**
   * Calls the dayStageEliminate()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageEliminate(params?: CallParams<TownHallArgs['obj']['dayStageEliminate()void'] | TownHallArgs['tuple']['dayStageEliminate()void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageEliminate()void'] | undefined]>

  /**
   * Calls the dayStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dayStageUnmasking(params?: CallParams<TownHallArgs['obj']['dayStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dayStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dayStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the nightStageMafiaCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageMafiaCommit(params?: CallParams<TownHallArgs['obj']['nightStageMafiaCommit(byte[])void'] | TownHallArgs['tuple']['nightStageMafiaCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageMafiaCommit(byte[])void'] | undefined]>

  /**
   * Calls the nightStageDoctorCommit(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  nightStageDoctorCommit(params?: CallParams<TownHallArgs['obj']['nightStageDoctorCommit(byte[])void'] | TownHallArgs['tuple']['nightStageDoctorCommit(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['nightStageDoctorCommit(byte[])void'] | undefined]>

  /**
   * Calls the dawnStageMafiaReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageMafiaReveal(params?: CallParams<TownHallArgs['obj']['dawnStageMafiaReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageMafiaReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageMafiaReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDoctorReveal(address,byte[32])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDoctorReveal(params?: CallParams<TownHallArgs['obj']['dawnStageDoctorReveal(address,byte[32])void'] | TownHallArgs['tuple']['dawnStageDoctorReveal(address,byte[32])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDoctorReveal(address,byte[32])void'] | undefined]>

  /**
   * Calls the dawnStageDeadOrSaved()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageDeadOrSaved(params?: CallParams<TownHallArgs['obj']['dawnStageDeadOrSaved()void'] | TownHallArgs['tuple']['dawnStageDeadOrSaved()void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageDeadOrSaved()void'] | undefined]>

  /**
   * Calls the dawnStageUnmasking(byte[])void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  dawnStageUnmasking(params?: CallParams<TownHallArgs['obj']['dawnStageUnmasking(byte[])void'] | TownHallArgs['tuple']['dawnStageUnmasking(byte[])void']>): TownHallComposer<[...TReturns, TownHallReturns['dawnStageUnmasking(byte[])void'] | undefined]>

  /**
   * Calls the gameOver()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gameOver(params?: CallParams<TownHallArgs['obj']['gameOver()void'] | TownHallArgs['tuple']['gameOver()void']>): TownHallComposer<[...TReturns, TownHallReturns['gameOver()void'] | undefined]>

  /**
   * Makes a clear_state call to an existing instance of the TownHall smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): TownHallComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): TownHallComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<TownHallComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<TownHallComposerResults<TReturns>>
}
export type TownHallComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

