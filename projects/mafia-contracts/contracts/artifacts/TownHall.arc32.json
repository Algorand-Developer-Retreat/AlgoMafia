{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "dummyOpUp(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dlog(byte[],byte[],byte[],byte[])bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "hashPointToPoint(byte[])byte[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getGameState()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "joinGameLobby(byte[])bool": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "player1AlgoAddr": {
          "type": "bytes",
          "key": "player1AlgoAddr"
        },
        "player2AlgoAddr": {
          "type": "bytes",
          "key": "player2AlgoAddr"
        },
        "player3AlgoAddr": {
          "type": "bytes",
          "key": "player3AlgoAddr"
        },
        "player4AlgoAddr": {
          "type": "bytes",
          "key": "player4AlgoAddr"
        },
        "player5AlgoAddr": {
          "type": "bytes",
          "key": "player5AlgoAddr"
        },
        "player6AlgoAddr": {
          "type": "bytes",
          "key": "player6AlgoAddr"
        },
        "maffia": {
          "type": "bytes",
          "key": "maffia"
        },
        "doctor": {
          "type": "bytes",
          "key": "doctor"
        },
        "farmer": {
          "type": "bytes",
          "key": "farmer"
        },
        "butcher": {
          "type": "bytes",
          "key": "butcher"
        },
        "innkeep": {
          "type": "bytes",
          "key": "innkeep"
        },
        "grocer": {
          "type": "bytes",
          "key": "grocer"
        },
        "justKilledPlayer": {
          "type": "bytes",
          "key": "justKilledPlayer"
        },
        "justKilledTimeOfDeath": {
          "type": "uint64",
          "key": "justKilledTimeOfDeath"
        },
        "maffiaCommitment": {
          "type": "bytes",
          "key": "maffiaCommitment"
        },
        "doctorCommitment": {
          "type": "bytes",
          "key": "doctorCommitment"
        },
        "maffiaVictim": {
          "type": "bytes",
          "key": "maffiaVictim"
        },
        "doctorPatient": {
          "type": "bytes",
          "key": "doctorPatient"
        },
        "playersJoined": {
          "type": "uint64",
          "key": "playersJoined"
        },
        "gameState": {
          "type": "uint64",
          "key": "gameState"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 17,
      "num_uints": 3
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "TownHall",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dummyOpUp",
        "desc": "Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name",
        "args": [
          {
            "name": "i",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64",
          "desc": "the number (but we do nothing with it)"
        }
      },
      {
        "name": "dlog",
        "args": [
          {
            "name": "g",
            "type": "byte[]"
          },
          {
            "name": "x",
            "type": "byte[]"
          },
          {
            "name": "v",
            "type": "byte[]"
          },
          {
            "name": "z",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "hashPointToPoint",
        "args": [
          {
            "name": "point",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "byte[]"
        }
      },
      {
        "name": "getGameState",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "joinGameLobby",
        "args": [
          {
            "name": "NIZK_DLOG",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "bool"
        }
      }
    ]
  }
}