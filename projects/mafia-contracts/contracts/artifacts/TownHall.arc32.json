{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "dummyOpUp(uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dlog(byte[],byte[],byte[],byte[])bool": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "hashPointToPoint(byte[])byte[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getGameState()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "joinGameLobby(byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "assignRole(byte[],byte[],byte[],byte[],byte[],pay,pay,pay,pay,pay,pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dayStageVote(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dayStageEliminate()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dayStageUnmasking(byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nightStageMafiaCommit(byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "nightStageDoctorCommit(byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dawnStageMafiaReveal(address,byte[32])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dawnStageDoctorReveal(address,byte[32])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dawnStageDeadOrSaved()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "dawnStageUnmasking(byte[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "gameOver()void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "player1AlgoAddr": {
          "type": "bytes",
          "key": "player1AlgoAddr"
        },
        "player2AlgoAddr": {
          "type": "bytes",
          "key": "player2AlgoAddr"
        },
        "player3AlgoAddr": {
          "type": "bytes",
          "key": "player3AlgoAddr"
        },
        "player4AlgoAddr": {
          "type": "bytes",
          "key": "player4AlgoAddr"
        },
        "player5AlgoAddr": {
          "type": "bytes",
          "key": "player5AlgoAddr"
        },
        "player6AlgoAddr": {
          "type": "bytes",
          "key": "player6AlgoAddr"
        },
        "mafia": {
          "type": "bytes",
          "key": "mafia"
        },
        "mafiaKeyImage": {
          "type": "bytes",
          "key": "mafiaKeyImage"
        },
        "doctor": {
          "type": "bytes",
          "key": "doctor"
        },
        "doctorKeyImage": {
          "type": "bytes",
          "key": "doctorKeyImage"
        },
        "farmer": {
          "type": "bytes",
          "key": "farmer"
        },
        "butcher": {
          "type": "bytes",
          "key": "butcher"
        },
        "innkeep": {
          "type": "bytes",
          "key": "innkeep"
        },
        "grocer": {
          "type": "bytes",
          "key": "grocer"
        },
        "player1HasVoted": {
          "type": "uint64",
          "key": "player1HasVoted"
        },
        "player1ReceivedVotes": {
          "type": "uint64",
          "key": "player1ReceivedVotes"
        },
        "player2HasVoted": {
          "type": "uint64",
          "key": "player2HasVoted"
        },
        "player2ReceivedVotes": {
          "type": "uint64",
          "key": "player2ReceivedVotes"
        },
        "player3HasVoted": {
          "type": "uint64",
          "key": "player3HasVoted"
        },
        "player3ReceivedVotes": {
          "type": "uint64",
          "key": "player3ReceivedVotes"
        },
        "player4HasVoted": {
          "type": "uint64",
          "key": "player4HasVoted"
        },
        "player4ReceivedVotes": {
          "type": "uint64",
          "key": "player4ReceivedVotes"
        },
        "player5HasVoted": {
          "type": "uint64",
          "key": "player5HasVoted"
        },
        "player5ReceivedVotes": {
          "type": "uint64",
          "key": "player5ReceivedVotes"
        },
        "player6HasVoted": {
          "type": "uint64",
          "key": "player6HasVoted"
        },
        "player6ReceivedVotes": {
          "type": "uint64",
          "key": "player6ReceivedVotes"
        },
        "playersVoted": {
          "type": "uint64",
          "key": "playersVoted"
        },
        "playersAlive": {
          "type": "uint64",
          "key": "playersAlive"
        },
        "justEliminatedPlayer": {
          "type": "bytes",
          "key": "justEliminatedPlayer"
        },
        "mafiaCommitment": {
          "type": "bytes",
          "key": "mafiaCommitment"
        },
        "doctorCommitment": {
          "type": "bytes",
          "key": "doctorCommitment"
        },
        "mafiaVictim": {
          "type": "bytes",
          "key": "mafiaVictim"
        },
        "doctorPatient": {
          "type": "bytes",
          "key": "doctorPatient"
        },
        "playersJoined": {
          "type": "uint64",
          "key": "playersJoined"
        },
        "gameState": {
          "type": "uint64",
          "key": "gameState"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 19,
      "num_uints": 16
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "TownHall",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dummyOpUp",
        "desc": "Dummy Op Up\nDummy operation to get more opcode budget\n - The number to return, necssary to deduplicate the name",
        "args": [
          {
            "name": "i",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64",
          "desc": "the number (but we do nothing with it)"
        }
      },
      {
        "name": "dlog",
        "args": [
          {
            "name": "g",
            "type": "byte[]"
          },
          {
            "name": "x",
            "type": "byte[]"
          },
          {
            "name": "v",
            "type": "byte[]"
          },
          {
            "name": "z",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "bool"
        }
      },
      {
        "name": "hashPointToPoint",
        "args": [
          {
            "name": "point",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "byte[]"
        }
      },
      {
        "name": "getGameState",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "joinGameLobby",
        "args": [
          {
            "name": "NIZK_DLOG",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "assignRole",
        "args": [
          {
            "name": "msg",
            "type": "byte[]"
          },
          {
            "name": "pkAll",
            "type": "byte[]"
          },
          {
            "name": "keyImage",
            "type": "byte[]"
          },
          {
            "name": "sig",
            "type": "byte[]"
          },
          {
            "name": "challenges",
            "type": "byte[]"
          },
          {
            "name": "lsigTxn0",
            "type": "pay"
          },
          {
            "name": "lsigTxn1",
            "type": "pay"
          },
          {
            "name": "lsigTxn2",
            "type": "pay"
          },
          {
            "name": "lsigTxn3",
            "type": "pay"
          },
          {
            "name": "lsigTxn4",
            "type": "pay"
          },
          {
            "name": "lsigTxn5",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dayStageVote",
        "args": [
          {
            "name": "vote",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dayStageEliminate",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dayStageUnmasking",
        "args": [
          {
            "name": "blsSk",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "nightStageMafiaCommit",
        "args": [
          {
            "name": "commitment",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "nightStageDoctorCommit",
        "args": [
          {
            "name": "commitment",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dawnStageMafiaReveal",
        "args": [
          {
            "name": "victimAim",
            "type": "address"
          },
          {
            "name": "blinder",
            "type": "byte[32]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dawnStageDoctorReveal",
        "args": [
          {
            "name": "patientAim",
            "type": "address"
          },
          {
            "name": "blinder",
            "type": "byte[32]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dawnStageDeadOrSaved",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "dawnStageUnmasking",
        "args": [
          {
            "name": "blsSk",
            "type": "byte[]"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "gameOver",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}